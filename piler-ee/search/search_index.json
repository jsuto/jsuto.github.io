{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Piler enterprise documentation # Generic notes # Procedural documentation GDPR related notes Piler Verfahrensdokumentation Enterprise Edition New features in 1.8.x # New features in 1.8.4 New features in 1.8.2 New features in 1.8.0 For end users # End user guide to piler enterprise edition For administrators # Email archive sizing calculator Release notes Upgrading piler enterprise Migrating from sphinx to manticore Installing piler enterprise edition Administering Piler enterprise edition Importing / exporting emails Configuring the mail server for email archiving with Piler enterprise edition Using the REST API Authenticate against Azure AD Authenticate against AWS Cognito Authenticate against Google Workspace Performance tuning Troubleshooting Video tutorials # The bucket feature (10 min) Installing piler enterprise on a single ubuntu focal node (9 min) End user guide to the GUI, part #1: basic features (11 min) End user guide to the GUI, part #2: searching (12 min) Setting up LDAP authentication in the GUI (4 min) Creating customers in a multi-tenant deployment (12 min)","title":"Home"},{"location":"#piler-enterprise-documentation","text":"","title":"Piler enterprise documentation"},{"location":"#generic-notes","text":"Procedural documentation GDPR related notes Piler Verfahrensdokumentation Enterprise Edition","title":"Generic notes"},{"location":"#new-features-in-18x","text":"New features in 1.8.4 New features in 1.8.2 New features in 1.8.0","title":"New features in 1.8.x"},{"location":"#for-end-users","text":"End user guide to piler enterprise edition","title":"For end users"},{"location":"#for-administrators","text":"Email archive sizing calculator Release notes Upgrading piler enterprise Migrating from sphinx to manticore Installing piler enterprise edition Administering Piler enterprise edition Importing / exporting emails Configuring the mail server for email archiving with Piler enterprise edition Using the REST API Authenticate against Azure AD Authenticate against AWS Cognito Authenticate against Google Workspace Performance tuning Troubleshooting","title":"For administrators"},{"location":"#video-tutorials","text":"The bucket feature (10 min) Installing piler enterprise on a single ubuntu focal node (9 min) End user guide to the GUI, part #1: basic features (11 min) End user guide to the GUI, part #2: searching (12 min) Setting up LDAP authentication in the GUI (4 min) Creating customers in a multi-tenant deployment (12 min)","title":"Video tutorials"},{"location":"administering/","text":"Administering piler enterprise edition # This documentation applies to Piler enterprise edition 1.7.3 Revision #1 Publication date: Jul 15, 2023 Prerequisites # You have installed Piler enterprise using either the multiple nodes layout or the single node layout. The Piler GUI uses the http hostname to determine whether it\u2019s the main admin site for the provider, or the customer site for customer admin and customer end users. This document applies to the main admin site for the provider. In the following examples gui-int.aaa.fu is used as the main admin site URL. You are free to configure nginx on the GUI node to use the internal network, though it\u2019s up to you, if you want access to the main admin site from the Internet. It\u2019s also best to set up https for security reasons. Using the GUI at the first time # Piler features a web based GUI that can be accessible with a browser. Mobile devices are not supported officially at the moment. Log in as administrator using the following account: admin@local:pilerrocks Then go to the user menu at administration / users menu, and change the admin password immediately. It\u2019s also recommended to remove the auditor user, since it\u2019s not used in the main admin site. If you want to use https on the GUI, then edit config-site.php, and make sure you set https in the SITE_URL variable: $config['SITE_URL'] = 'https://piler.yourdomain.com/'; Adding customers # Providers have several domains and mailboxes. Piler uses the concept of customer to distinguish between organizations. For Piler a customer is an organization with 1 or more domains, and several mailboxes. Piler separates customers on the disk level and on the database level. Each customer has its own store directory, sphinx database and mysql database. Let\u2019s say you want to archive emails for Fictive Company Co. Before doing so you have to create this company in piler, ie. you have to create a customer. Create domains for the customer # Before creating the customer itself, you have to create the domains for this company. Let\u2019s say Fictive Company Co. has three domains: fictive.com (let\u2019s assume this is the primary domain) fictive.org fictive.net So go to the administration / domains page in the GUI, and set these three domains one per line in the Domains field, and set fictive.com to the mapped domain as well. The mapped domain identifies the primary domain for the company. Then click on Add, and verify that these domains are added. Hint: if you need support for domain names having characters other than the English alphabet, you have to set the appropriate $config['DOMAIN_REGEX'] value in config-site.php. See the default value in config.php. Creating the customer # After creating domains for the customer, go to administration / customer page, then select the primary domain for the customer, add a customer ID, eg. fictiveco for the customer, fill the GUI URL field as well, then click Add, and verify that the customer is created. Note that the customer ID must be lower case, and must start with a letter. The GUI checks the hostname part of the URL (HTTP_HOST) to figure out which customer site the user visits. So each customer must have their own dedicated URL. The GUI URL field must be only the hostname (eg. fictiveco.myarchive.domain), no http:// prefix, etc. If you set $config[\u2018USE_SMTP_GATEWAY\u2019] = 1; in config-site.php, then the customer creating form supplies you with an uuid-like address for the \u2018Archiving address\u2019 field, eg. 5cc03cf3-2a32-0d7e-02b8-7b29882e15dc@smtp.aaa.fu. You may accept it or you may change it, either way make sure that to rewrite 5cc03cf3-2a32-0d7e-02b8-7b29882e15dc@smtp.aaa.fu to @workernodename.aaa.fu on the smtp gateway, because the piler-smtp daemon only accepts the customer id as the local part of the rcpt to address. When the page refreshes you\u2019ll notice that the customer is in PENDING state, because it takes time to create a tenant for the new customer. The Piler cron jobs create store directories, a mysql database, and a sphinx database for this customer on the GUI node and on the worker nodes. The latter has a challenge: we have to restart the sphinx daemon, and the daemon needs a certain time while it reads and caches indices, so the restart happens at 00 minute, once in every hour. So please wait sending emails for the new customer until the customer status is OK. Warning! If the status is OK on the GUI, it still takes up to an additional hour until the customer is created on the worker nodes as well. You may send all emails for fictiveco to fictiveco@smtp.aaa.fu address. The piler smtp daemon checks the local part of the address to determine that the email belongs to which customer. If it\u2019s unknown then the message is rejected. How to script adding customers # Check out the REST API docs . Quotas # Piler is not able to handle any customer quota. Whatever email it receives, it also archives it - provided that it\u2019s for a valid customer. The recommended method is to regularly check the customer_settings table in the piler database, and set alerts in case any of your customer\u2019s used column becomes greater than the quota value. Note that you are free to fix the SQL query in the customer.cf file on the smtp gateway to include a check for the quota column as well, eg. query = SELECT 'OK' FROM customer_settings WHERE customer_address='%s' AND enabled=1 AND (quota=0 OR quota > used) However, if a customer has reached their quota, then the smtp gateway will encounter an internal error as well as drop all of their incoming emails which may not be a good idea. So be sure to carefully decide if you really want this behaviour enabled. You may check the current usage of all customers on the Administration / customer page. Note that the raw email size is used for the calculations, not the actual stored sizes. The values are in GBs. Note that per domain or per user quotas are not supported. After the customer is created, you should configure the GUI for the customer, see the next chapter in the manual. Configuring the GUI # The GUI ships a default config file /var/piler/www/config.php. You should NOT modify this file! You should put all the site related customized settings to /etc/piler/config-site.php. It\u2019s also possible to create customer specific settings (eg. authentication details) for the GUI. To do this, cd /etc/piler/sites and create config-site- .php, eg. config-site-fictiveco.php. When customer fictiveco visits the GUI, then the settings in config-site-fictiveco.php override existing values. Customers should visit the GUI URL you configure when creating a new customer. It can be a subdomain in your domain (eg. https://fictive.aaa.fu/ ), or can be a subdomain in the customer\u2019s domain. eg. https://archive.fictive.com/ to access their own archive. In the customer specific config you may set several settings for the customer, eg. how to authenticate the customer\u2019s users. See the User authentication methods in the documentation. User authentication methods # The piler GUI supports several methods for authenticating users. Authenticating against the local piler database # Normally only special users exist in the local piler database, eg. admin@local, auditor@local, etc. and the regular users are queried from an external database, eg. LDAP, AD, IMAP, etc. It's possible to add the regular users manually, however it\u2019s recommended as the last resort when a central user database is not available. Note that these settings should usually go to the customer specific config file, eg. config-site-fictiveco.php. Authenticating against an LDAP server # This is the preferred way to authenticate regular users. The details depend on what mail system and the LDAP server the customer has. In general you have to enable the LDAP authentication (see the following paragraph), then create a helper account that can query the LDAP directory. To enable LDAP authentication, set the following in the customer\u2019s site config, eg. config-site-fictiveco.php (for notenant installations write it to /etc/piler/config-site.php): $config['ENABLE_LDAP_AUTH'] = 1; Then go to the main admin site to administration / ldap menu, and create an ldap entry for the used LDAP server. You have to set the ldap hostname, ldap base DN where to limit the scope of the ldap query, also the ldap helper account parameters. When you are done, you may click on the test button, and the gui tries to login to the ldap host using the helper account. Before finishing you have to set a few ldap parameters, and specify the ldap attribute storing the email addresses, name of the user object class, name of the distribution list object class and its attribute name. Active Directory # LDAP_ACCOUNT_OBJECTCLASS = 'user'; LDAP_DISTRIBUTIONLIST_OBJECTCLASS = 'group'; LDAP_DISTRIBUTIONLIST_ATTR = 'member'; iredmail # LDAP_HELPER_DN = 'cn=vmailadmin,dc=yourdomain,dc=com'; LDAP_BASE_DN = 'o=domains,dc=yourdomain,dc=com'; LDAP_ACCOUNT_OBJECTCLASS = 'mailUser'; LDAP_DISTRIBUTIONLIST_OBJECTCLASS = 'mailList'; LDAP_DISTRIBUTIONLIST_ATTR = 'memberOfGroup'; Lotus Domino # LDAP_ACCOUNT_OBJECTCLASS = 'dominoPerson'; LDAP_DISTRIBUTIONLIST_OBJECTCLASS = 'dominoGroup'; LDAP_DISTRIBUTIONLIST_ATTR = 'mail'; Zimbra # LDAP_ACCOUNT_OBJECTCLASS = 'zimbraAccount'; LDAP_DISTRIBUTIONLIST_OBJECTCLASS = 'zimbraDistributionList'; LDAP_DISTRIBUTIONLIST_ATTR = 'zimbraMailForwardingAddress'; LDAP_HELPER_DN = 'uid=zimbra,cn=admins,cn=zimbra'; Note that the GUI grants regular user permissions for everyone authenticated successfully against LDAP. If certain users need auditor rights, then create a group in LDAP, and put the auditors to this group. Then set this value to LDAP_AUDITOR_MEMBER_DN in the customer\u2019s site config: // the value is case sensitive! $config['LDAP_AUDITOR_MEMBER_DN'] = 'CN=PilerAuditors,CN=Users,DC=your,DC=domain,DC=com'; After setting the ldap parameters, you have to go to the administration / domain menu on the main admin site, and select the appropriate ldap server for the given domain. If you created a domain before the ldap entry, then simply remove the domain, and recreate it. A successful login should look like the following in /var/log/mail.log: Aug 4 06:15:12 676134c1075b piler-webui[425]: ldap query: base dn='ou=users,dc=nodomain', filter='(&(objectClass=inetOrgPerson)(mail=sanyi@aaa.fu))', attr='', 1 hits Aug 4 06:15:12 676134c1075b piler-webui[425]: ldap auth against '127.0.0.1', dn: 'cn=Sanyi Vagyok,ou=users,dc=nodomain', result: 1 Aug 4 06:15:12 676134c1075b slapd[1357]: <= mdb_equality_candidates: (mail) not indexed Aug 4 06:15:12 676134c1075b piler-webui[425]: ldap query: base dn='ou=users,dc=nodomain', filter='(|(&(objectClass=inetOrgPerson)(mail=sanyi@aaa.fu))(&(objectClass=zzz)(xxx=sanyi@aaa.fu))(&(objectClass=zzz)(xxx=cn=Sanyi Vagyok,ou=users,dc=nodomain)))', attr='', 1 hits Aug 4 06:15:12 676134c1075b piler-webui[425]: ldap auth result against 127.0.0.1 / generic_ldap: 1 Aug 4 06:15:12 676134c1075b piler-webui[425]: username=sanyi@aaa.fu, customer=piler, event='logged in', ip=1.2.3.4 A failed login may look like this: Aug 4 06:30:53 676134c1075b piler-webui[425]: ldap query: base dn='ou=users,dc=nodomain', filter='(&(objectClass=inetOrgPerson)(mail=someuser@aaa.fu))', attr='', 0 hits Aug 4 06:30:53 676134c1075b piler-webui[425]: ldap auth result against 127.0.0.1 / generic_ldap: 0 Aug 4 06:30:53 676134c1075b piler-webui[425]: username=joska@aaa.fu, customer=piler, event='login failed', ip=1.2.3.4 Authenticating against an IMAP server # It's also possible to authenticate users against your IMAP server. Set the following in config-site.php: $config['ENABLE_IMAP_AUTH'] = 1; $config['IMAP_HOST'] = 'imap.yourdomain.com'; $config['IMAP_PORT'] = 993; $config['IMAP_SSL'] = true; Authenticating against Google Workspace (formerly GSuite) # https://mailpiler.com/authenticate-against-google-workspace-formerly-gsuite/ Use Azure AD for single sign-on (SSO) # https://mailpiler.com/using-azure-ad-single-sign-on-sso/ Use AWS Cognito for single sign-on (SSO) # https://mailpiler.com/using-aws-cognito-single-sign-on-sso/ Customizing the GUI # Using the administration / customers menu the GUI allows you to override some logos, branding URL, and optionally the text and background colours in the menu bar. To override the logo on the login screen for a given customer, set the following in /etc/piler/sites/config-site-customerid.php eg.: /etc/piler/sites/config-site-fictiveco.php: $config['SITE_LOGO_LG'] = '/path/to/fictiveco.jpg'; To override the logo in the menu bar, create a transparent image with up to 125px wide and up to 25px tall, then click on select in the customer settings menu. You may also define the branding URL assigned to the logo, and override the background and text colour in the menu bar. The default values can be found in /var/piler/www/config.php: $config['BRANDING_TEXT_COLOUR'] = '#FFFFFF'; $config['BRANDING_BACKGROUND_COLOUR'] = '#2B5CBE'; $config['BRANDING_LOGO'] = '/view/theme/default/assets/images/archive-logo-sm.png'; $config['BRANDING_FAVICON'] = '/view/theme/default/assets/ico/favicon.png'; $config['BRANDING_URL'] = ''; // the URL when hovering over the logo $config['SUPPORT_LINK'] = ''; // an additional link in the user menu You may override any of these default values by putting the appropriate definitions to /etc/piler/config-site.php, eg: $config['BRANDING_BACKGROUND_COLOUR'] = '#B8377C'; $config['BRANDING_URL'] = 'http://www.mycompany.com/'; $config['SUPPORT_LINK'] = 'http://support.mycompany.com/'; Note that it\u2019s possible to specify a custom css for the given customer by adding the following to override any default css property: $config[\u2018CUSTOM_CSS\u2019] = \u2018/path/to/fictiveco.css\u2019; How to increase the number of search hits: $config[\u2018MAX_SEARCH_HITS\u2019] = 20000; Increase the number of hits per page: $paging = [10,20,30,50,100]; $config['PAGE_LEN'] = 100; // the default for users Then let the users override the hits per page (=page length) value in the user settings menu. Administrator tasks # Users, groups, and rights # Piler allows you to access only your emails you either sent or received. It's often required to grant permission to read emails of other users. Let's say Alice wants to see Bob's and Jim's emails. To do so create a group, type its name, eg. group1, then enter Alice's email address to the \"Email addresses**\" textarea. Finally type Bob's and Jim's email addresses to the \"Assigned email addresses**\" , and click on Add or Modify. Thus when Alice logs in both Bob's and Jim's email addresses are added to her allowed to see email addresses, so Alice can read Bob's emails, and Jim's emails, and of course her own emails as well. Administrator permissions # The administrator account (eg. admin@local) is used to administer piler only. It's not a super powerful account to see anyone's emails that's why it can't see the Search menu at all. If you need a user who can access anyone's emails then grant him AUDITOR privileges on the user settings page. Note that by default there's no such an account, you need to create it. The administrator role may see system statistics, accounting summary, edit user / group settings, policies, see audit logs, etc. Accounting # Piler keeps track of how many emails it has archived so far, and it\u2019s able to show this information grouped by email addresses or domains. Note that Piler creates accounting data only for the domains configured in the administration / domain menu. The accounting runs once a day. Audit logs # The GUI keeps track of what users do and when they do. Every user's action involves an audit record that the gui stores into the audit SQL table. Thus there's an audit trail of every user activity, eg. searching for some messages, viewing a message, downloading another one, etc. Also the gui logs when a user logs in or logs out. The following information is logged: timestamp username (email) action (eg. view, search, download) IP-address message serial number \u2013 if any optional description Administrators and auditors are able to search within the audit logs, and even export the audit trail as a CSV file. The search field is very similar to the quick search for emails, and the parser tries to figure out what you look for. If it has a format of a date (eg. YYYY.MM.DD or YYYY-MM-DD) then it's a date, if it has an @ symbol then it's an email, dotted quads are IP-addresses, and search|view|download|... are actions. You may use wildcards by using the asterisk ( * ) character. Eg. 2018.08.* searches for the whole August of 2018. jack@yourdom* Searches for user jack in domains starting with \u201cyourdom\u201d. If you want to specify only the user part, then you still must include the @-symbol otherwise the parser won't recognize it as an email address: jack*@ . IP-addresses can be \u201cwildcarded\u201d right after a dot, eg. 1.2.3.* or 1.2.*.* . Note that 123.123.12*.* is not a valid expression. A slightly complex audit search to find the login, view and download attempts for the local auditor in this month from 31.0.0.0/8 address space: audit*@ 2018.08.* login view download 31.* If you don't want or need auditing, then have the provider to turn it off for you: $config['ENABLE_AUDIT'] = 0; Securing the archive # Securing the GUI # Use https. See the blog post about getting a Let\u2019s Encrypt certificate Use single sign-on only Restrict the IP-range of the clients in nginx config Enable 2 factor authentication: $config['ENABLE_GOOGLE_AUTHENTICATOR'] = 1; Enable hCAPTCHA, see below (1.7.3+) Enable CAPTCHA after 3 unsuccessful login attempt: $config['CAPTCHA_FAILED_LOGIN_COUNT'] = 3; Enable hCAPTCHA # This feature requires piler enterprise version 1.7.3+. Note that this feature obsoletes the previous secureimage based captcha. Register a plan at https://www.hcaptcha.com/ . There's a free plan up to 1 million requests per month. Create a site key and a secret, as well as add each hostname you want to protect. Finally set the site key and secret in /etc/piler/config-site.php: $config['HCAPTCHA_SITEKEY'] = 'aaaaa-bbbbb-......'; $config['HCAPTCHA_SECRET'] = '0x...........'; Services providers using a multitenant license may be selective to enable this feature for specific tenants as well by putting these variables to the tenant's site specific config. Securing the piler-smtp daemon # Use SMTP ACL list to restrict access to port 25 Use STARTTLS Rules and policies # Piler supports two kinds of policies or rulesets. The exclusion rules specify what NOT to archive . The retention rules specify how long to keep messages in the archive. Customer specific rules are stored in the customer\u2019s database in some mysql tables on the GUI node. The worker nodes synchronize these tables every hour using a piler cron job. Warning! Currently only the provider admins can set or fix both archiving and retention rules, because a single miswritten rule may lead to loss of important emails. When piler starts it reads all the rules and compiles them at startup. If the piler daemon gets a HUP signal, then it re-reads the rules. Exclusion rules # You may define rules to prevent piler and pilerimport to archive certain messages, eg. having no subject, too big, recognized spam, etc. You may specify the From:, To/Cc:, Subject:, message size, attachment type and size value. Piler uses the TRE regex library to test whether the given rule matches the processed message. If so, then neither piler nor pilerimport will archive it, but rather discard it after logging. Some examples: Pattern Matches on subject: ^ {0,}$ messages with no subject size: > 1000000, attachment type: video/ messages bigger than 1 MB + having a video attachment size: < 500 too short spam probes, not having a body subject: [SPAM] recognised spam emails BUY( NOW){0,1} (viagra|cialis) \u201cbuy\u201d or \u201cbuy now\u201d viagra/cialis spam You are encouraged to test your rules whether they work as expected. Use the pilertest utility to test a single EML format message against your exclusion rules. Pilertest prints the first matching exclusion rule (if there\u2019s any), eg. the following mail is caught by a rule matching emails having no subject: pilertest -W customerid -m message.eml locale: hu_HU message-id: <586387.60094.qm@web83907.mail.sp1.yahoo.com> from: *Queen Oneil queenbaby3@att.net queenbaby3 att net (att.net )* to: *undisclosed recipients ()* reference: ** subject: ** sent: 1293679136 hdr len: 3007 digest: 0230af406d0e03e56ed63eeb8e0891ed6a97f49d297f42c0d2565cb770311323 rules check: from=,to=,subject=^$,size0,att.type=,att.size0 attachments: direction: 0 spam: 0 Retention rules # How long shall piler retain your messages? You may control it with the retention rules. The format is exactly the same as with the exclusion rules: you can define the From:, To/Cc:, Subject:, message size, etc. and the retention period in days. Every time piler archives a message, it assigns a retention period according to the retention rules or applying the default value (2257 days = 7 years + 2 days, unless you change it in piler.conf). After the retention period has expired the piler utilities will remove the message from the archive. The \"domain\" field applies to both the sender and the recipient addresses. Eg. if you specify \"example.com\" in the domain field, and the sender is user@example.com, then the rule applies. If the recipient is user@example.com, then it still applies. It's recommended to create your retention policy before deploying any archiving solution. Also be sure to use the pilertest utility to be sure your retention rules work as expected. Test it in a message that should match, and with another one that shouldn't. Note that the retention period is included in the per message verification digest, so the retention period should not be changed after the message has been archived. Piler also compiles a list from the retention rules, so whenever you change them, be sure to click on the \u201cApply settings\u201d red button to send a HUP signal to piler daemon. Note that if you want to keep your emails forever for the given customer, then be sure to disable purging on the admin panel! What to do with spam # It's a waste to archive junk messages, so the best solution is to prevent them from entering the archive. This can be achieved by redirecting spam messages to a quarantine, so only good emails can get to the archive. If this setup is not feasible, you may create an exclusion rule that keeps spam emails out of the archive. Or you may create a retention rule that no spam is to be retained beyond 30 days. Unfortunately these may be error prone, think about a false positive error. Backup and restore # Backup is an essential part of the business continuity. Make sure that you backup the following directories and data to ensure that you will be able to restore in case of a problem. /etc/piler /var/piler/astore /var/piler/store /var/piler/manticore The /etc/piler directory contains piler configuration, key file, certificate, etc. Make sure that you never lose /etc/piler/piler.key, otherwise you won\u2019t be able to decrypt the archived emails! The /var/piler/store directory stores the archived emails. An email is splitted to several parts. A filename ending with .m stores the message itself without the attachments. The attachments are stored in /var/piler/astore directory in files named as - , eg. d440749d9a64d44e1fd81e63a5e3d1cfa57edd8884db3013d22d831fc21228cc-000050930. The stored .m files are organized to sub directories, eg. /var/piler/store/<server_id>/<customer_id>/58f /590 /591 Notice the subdirectories consisting of three hexadecimal numbers (58f, 590 and 591 in the example above). They hold ~12 days of data. After ~12 days (give or take) a new directory is created, and piler starts to put new emails to the new directory, and won\u2019t touch any of the older directories ever. This behaviour allows you to create an incremental backup procedure. The index data follows a main - dailydelta - delta indexing scheme. The main files change once a day, the dailydelta files change every 30 mins. You don\u2019t have to backup the delta files, it\u2019s enough to backup the main files (ie. /var/piler/manticore/customerid/main1.* ). Note that the index data can be regenerated, however the more emails you have, the longer the process takes, so it\u2019s worth to backup the manticore files as well. Finally you should backup the mysql data. Piler stores crucial metadata, users, rules, audit data, etc. in a mysql database required to operate properly. Make sure to never lose the mysql databases! You may choose to backup the emails as well. The pilerexport utility allows you to export yesterday\u2019s emails to the current directory, eg. cd /path/to/backup/somecustomer pilerexport -W somecustomer -a 2017.04.17 -b 2017.04.17. The above command dumps all emails for \u2018somecustomer\u2019 to /path/to/backup/somecustomer archived on 2017.04.17. The filenames consist of the message serial id + .eml suffix, eg. 123.eml. Important! DON\u2019T export emails of different customers to the same target directory because the dumped eml files will be overwritten! Each customer should have its own dump directory. The restore procedure simply involves importing these emails. You may even set up a secondary piler installation, see the next chapter. Remove a customer\u2019s data # When you remove a customer on the gui node, then the customer\u2019s reference is removed only, and all their emails, manticore index and sql database remain intact. To remove the customer\u2019s data, follow the steps below on how to remove a customer called fictive. On all nodes including both gui and worker nodes (Note that steps 5-6 may take a long time): stop searchd rm -rf /var/piler/manticore/fictive start searchd mysql>drop database fictive; rm -rf /var/piler/astore/00/fictive rm -rf /var/piler/store/00/fictive On the GUI node only: remove fictive from the customer list remove domains belonging to fictive customer remove fictive\u2019s reference from /etc/piler/sites/customer-sites.php Setup a secondary piler site # There\u2019s another option to mitigate the effects of a site disaster. Let\u2019s say you have a Piler installation in Azure with a gui node, an smtp gateway, and 5 worker nodes. Now create another site at AWS (or your favourite provider. It can even be your datacenter if you will), and perform the same installation of the gui node, the smtp gateway, and the worker nodes. Make sure that you use the same internal IP addresses for both sites (ie. Azure and AWS in this example) for the worker nodes. Finally you have to configure the smtp gateway on each site to forward a copy of emails to the other site thus replicating emails automatically to the other site. When the azure site goes down or is destroyed, then you simply redirect customers to the backup site by fixing the DNS entries. One things is not covered in the documentation is that you have to keep the configurations of each sites synchronized, ie. set the same exclusion rules, same retention periods, etc. The current version of Piler doesn\u2019t support this automatically. Best practices # A few recommended steps on how to operate piler. Set a reasonable default retention time in piler.conf that might be valid to most of your customers. The piler.conf files should be identical on all worker nodes. The piler.key file should be the same on all worker nodes. Use DNS domain names instead of IP-addresses. Monitor the piler nodes, including the gui node(s), the workers, and the smtp gateway as well. The monitoring should include checking port 25, 80 (or 443), 9312 availability, enough free disk space, whether mysql server is running, cpu, memory and disk io, etc. Never ever run out of free disk space. Not even under /tmp. Note that manticore requires some additional temporary disk space while indexing besides the index files. Implement a central syslog server or other log collecting solution. All hosts should send their mail related logs to a central log processing server. Backup all piler related configuration as well as data. This includes the following directories: /etc/piler /var/piler/astore/<server_id> /var/piler/store/<server_id> /var/piler/manticore /var/piler/sphinx # for older deployments using sphinx And backup the mysql databases as well! It\u2019s recommended to put the worker nodes (or even all piler hosts) behind a firewall. See the Security considerations chapter in the Installation guide . The smtp gateway should support STARTTLS to secure emails on the wire. Buy a wildcard certificate for your domain, and you may use it to secure both GUI web access and smtp gateway. You may even use it on the worker nodes to secure smtp. In this case put both the private key and the certificate to /etc/piler/piler.pem, then restart piler-smtp process. In case of an issue, always check the logs. When piler encounters a problem, it syslogs the issue, it gives a clue what went wrong. Check the nginx logs as well. Also in case of a problem run the health check utility: /usr/libexec/piler/health-check.sh. It checks a few settings the Piler support may be interested in.","title":"Administering piler enterprise edition"},{"location":"administering/#administering-piler-enterprise-edition","text":"This documentation applies to Piler enterprise edition 1.7.3 Revision #1 Publication date: Jul 15, 2023","title":"Administering piler enterprise edition"},{"location":"administering/#prerequisites","text":"You have installed Piler enterprise using either the multiple nodes layout or the single node layout. The Piler GUI uses the http hostname to determine whether it\u2019s the main admin site for the provider, or the customer site for customer admin and customer end users. This document applies to the main admin site for the provider. In the following examples gui-int.aaa.fu is used as the main admin site URL. You are free to configure nginx on the GUI node to use the internal network, though it\u2019s up to you, if you want access to the main admin site from the Internet. It\u2019s also best to set up https for security reasons.","title":"Prerequisites"},{"location":"administering/#using-the-gui-at-the-first-time","text":"Piler features a web based GUI that can be accessible with a browser. Mobile devices are not supported officially at the moment. Log in as administrator using the following account: admin@local:pilerrocks Then go to the user menu at administration / users menu, and change the admin password immediately. It\u2019s also recommended to remove the auditor user, since it\u2019s not used in the main admin site. If you want to use https on the GUI, then edit config-site.php, and make sure you set https in the SITE_URL variable: $config['SITE_URL'] = 'https://piler.yourdomain.com/';","title":"Using the GUI at the first time"},{"location":"administering/#adding-customers","text":"Providers have several domains and mailboxes. Piler uses the concept of customer to distinguish between organizations. For Piler a customer is an organization with 1 or more domains, and several mailboxes. Piler separates customers on the disk level and on the database level. Each customer has its own store directory, sphinx database and mysql database. Let\u2019s say you want to archive emails for Fictive Company Co. Before doing so you have to create this company in piler, ie. you have to create a customer.","title":"Adding customers"},{"location":"administering/#create-domains-for-the-customer","text":"Before creating the customer itself, you have to create the domains for this company. Let\u2019s say Fictive Company Co. has three domains: fictive.com (let\u2019s assume this is the primary domain) fictive.org fictive.net So go to the administration / domains page in the GUI, and set these three domains one per line in the Domains field, and set fictive.com to the mapped domain as well. The mapped domain identifies the primary domain for the company. Then click on Add, and verify that these domains are added. Hint: if you need support for domain names having characters other than the English alphabet, you have to set the appropriate $config['DOMAIN_REGEX'] value in config-site.php. See the default value in config.php.","title":"Create domains for the customer"},{"location":"administering/#creating-the-customer","text":"After creating domains for the customer, go to administration / customer page, then select the primary domain for the customer, add a customer ID, eg. fictiveco for the customer, fill the GUI URL field as well, then click Add, and verify that the customer is created. Note that the customer ID must be lower case, and must start with a letter. The GUI checks the hostname part of the URL (HTTP_HOST) to figure out which customer site the user visits. So each customer must have their own dedicated URL. The GUI URL field must be only the hostname (eg. fictiveco.myarchive.domain), no http:// prefix, etc. If you set $config[\u2018USE_SMTP_GATEWAY\u2019] = 1; in config-site.php, then the customer creating form supplies you with an uuid-like address for the \u2018Archiving address\u2019 field, eg. 5cc03cf3-2a32-0d7e-02b8-7b29882e15dc@smtp.aaa.fu. You may accept it or you may change it, either way make sure that to rewrite 5cc03cf3-2a32-0d7e-02b8-7b29882e15dc@smtp.aaa.fu to @workernodename.aaa.fu on the smtp gateway, because the piler-smtp daemon only accepts the customer id as the local part of the rcpt to address. When the page refreshes you\u2019ll notice that the customer is in PENDING state, because it takes time to create a tenant for the new customer. The Piler cron jobs create store directories, a mysql database, and a sphinx database for this customer on the GUI node and on the worker nodes. The latter has a challenge: we have to restart the sphinx daemon, and the daemon needs a certain time while it reads and caches indices, so the restart happens at 00 minute, once in every hour. So please wait sending emails for the new customer until the customer status is OK. Warning! If the status is OK on the GUI, it still takes up to an additional hour until the customer is created on the worker nodes as well. You may send all emails for fictiveco to fictiveco@smtp.aaa.fu address. The piler smtp daemon checks the local part of the address to determine that the email belongs to which customer. If it\u2019s unknown then the message is rejected.","title":"Creating the customer"},{"location":"administering/#how-to-script-adding-customers","text":"Check out the REST API docs .","title":"How to script adding customers"},{"location":"administering/#quotas","text":"Piler is not able to handle any customer quota. Whatever email it receives, it also archives it - provided that it\u2019s for a valid customer. The recommended method is to regularly check the customer_settings table in the piler database, and set alerts in case any of your customer\u2019s used column becomes greater than the quota value. Note that you are free to fix the SQL query in the customer.cf file on the smtp gateway to include a check for the quota column as well, eg. query = SELECT 'OK' FROM customer_settings WHERE customer_address='%s' AND enabled=1 AND (quota=0 OR quota > used) However, if a customer has reached their quota, then the smtp gateway will encounter an internal error as well as drop all of their incoming emails which may not be a good idea. So be sure to carefully decide if you really want this behaviour enabled. You may check the current usage of all customers on the Administration / customer page. Note that the raw email size is used for the calculations, not the actual stored sizes. The values are in GBs. Note that per domain or per user quotas are not supported. After the customer is created, you should configure the GUI for the customer, see the next chapter in the manual.","title":"Quotas"},{"location":"administering/#configuring-the-gui","text":"The GUI ships a default config file /var/piler/www/config.php. You should NOT modify this file! You should put all the site related customized settings to /etc/piler/config-site.php. It\u2019s also possible to create customer specific settings (eg. authentication details) for the GUI. To do this, cd /etc/piler/sites and create config-site- .php, eg. config-site-fictiveco.php. When customer fictiveco visits the GUI, then the settings in config-site-fictiveco.php override existing values. Customers should visit the GUI URL you configure when creating a new customer. It can be a subdomain in your domain (eg. https://fictive.aaa.fu/ ), or can be a subdomain in the customer\u2019s domain. eg. https://archive.fictive.com/ to access their own archive. In the customer specific config you may set several settings for the customer, eg. how to authenticate the customer\u2019s users. See the User authentication methods in the documentation.","title":"Configuring the GUI"},{"location":"administering/#user-authentication-methods","text":"The piler GUI supports several methods for authenticating users.","title":"User authentication methods"},{"location":"administering/#authenticating-against-the-local-piler-database","text":"Normally only special users exist in the local piler database, eg. admin@local, auditor@local, etc. and the regular users are queried from an external database, eg. LDAP, AD, IMAP, etc. It's possible to add the regular users manually, however it\u2019s recommended as the last resort when a central user database is not available. Note that these settings should usually go to the customer specific config file, eg. config-site-fictiveco.php.","title":"Authenticating against the local piler database"},{"location":"administering/#authenticating-against-an-ldap-server","text":"This is the preferred way to authenticate regular users. The details depend on what mail system and the LDAP server the customer has. In general you have to enable the LDAP authentication (see the following paragraph), then create a helper account that can query the LDAP directory. To enable LDAP authentication, set the following in the customer\u2019s site config, eg. config-site-fictiveco.php (for notenant installations write it to /etc/piler/config-site.php): $config['ENABLE_LDAP_AUTH'] = 1; Then go to the main admin site to administration / ldap menu, and create an ldap entry for the used LDAP server. You have to set the ldap hostname, ldap base DN where to limit the scope of the ldap query, also the ldap helper account parameters. When you are done, you may click on the test button, and the gui tries to login to the ldap host using the helper account. Before finishing you have to set a few ldap parameters, and specify the ldap attribute storing the email addresses, name of the user object class, name of the distribution list object class and its attribute name.","title":"Authenticating against an LDAP server"},{"location":"administering/#active-directory","text":"LDAP_ACCOUNT_OBJECTCLASS = 'user'; LDAP_DISTRIBUTIONLIST_OBJECTCLASS = 'group'; LDAP_DISTRIBUTIONLIST_ATTR = 'member';","title":"Active Directory"},{"location":"administering/#iredmail","text":"LDAP_HELPER_DN = 'cn=vmailadmin,dc=yourdomain,dc=com'; LDAP_BASE_DN = 'o=domains,dc=yourdomain,dc=com'; LDAP_ACCOUNT_OBJECTCLASS = 'mailUser'; LDAP_DISTRIBUTIONLIST_OBJECTCLASS = 'mailList'; LDAP_DISTRIBUTIONLIST_ATTR = 'memberOfGroup';","title":"iredmail"},{"location":"administering/#lotus-domino","text":"LDAP_ACCOUNT_OBJECTCLASS = 'dominoPerson'; LDAP_DISTRIBUTIONLIST_OBJECTCLASS = 'dominoGroup'; LDAP_DISTRIBUTIONLIST_ATTR = 'mail';","title":"Lotus Domino"},{"location":"administering/#zimbra","text":"LDAP_ACCOUNT_OBJECTCLASS = 'zimbraAccount'; LDAP_DISTRIBUTIONLIST_OBJECTCLASS = 'zimbraDistributionList'; LDAP_DISTRIBUTIONLIST_ATTR = 'zimbraMailForwardingAddress'; LDAP_HELPER_DN = 'uid=zimbra,cn=admins,cn=zimbra'; Note that the GUI grants regular user permissions for everyone authenticated successfully against LDAP. If certain users need auditor rights, then create a group in LDAP, and put the auditors to this group. Then set this value to LDAP_AUDITOR_MEMBER_DN in the customer\u2019s site config: // the value is case sensitive! $config['LDAP_AUDITOR_MEMBER_DN'] = 'CN=PilerAuditors,CN=Users,DC=your,DC=domain,DC=com'; After setting the ldap parameters, you have to go to the administration / domain menu on the main admin site, and select the appropriate ldap server for the given domain. If you created a domain before the ldap entry, then simply remove the domain, and recreate it. A successful login should look like the following in /var/log/mail.log: Aug 4 06:15:12 676134c1075b piler-webui[425]: ldap query: base dn='ou=users,dc=nodomain', filter='(&(objectClass=inetOrgPerson)(mail=sanyi@aaa.fu))', attr='', 1 hits Aug 4 06:15:12 676134c1075b piler-webui[425]: ldap auth against '127.0.0.1', dn: 'cn=Sanyi Vagyok,ou=users,dc=nodomain', result: 1 Aug 4 06:15:12 676134c1075b slapd[1357]: <= mdb_equality_candidates: (mail) not indexed Aug 4 06:15:12 676134c1075b piler-webui[425]: ldap query: base dn='ou=users,dc=nodomain', filter='(|(&(objectClass=inetOrgPerson)(mail=sanyi@aaa.fu))(&(objectClass=zzz)(xxx=sanyi@aaa.fu))(&(objectClass=zzz)(xxx=cn=Sanyi Vagyok,ou=users,dc=nodomain)))', attr='', 1 hits Aug 4 06:15:12 676134c1075b piler-webui[425]: ldap auth result against 127.0.0.1 / generic_ldap: 1 Aug 4 06:15:12 676134c1075b piler-webui[425]: username=sanyi@aaa.fu, customer=piler, event='logged in', ip=1.2.3.4 A failed login may look like this: Aug 4 06:30:53 676134c1075b piler-webui[425]: ldap query: base dn='ou=users,dc=nodomain', filter='(&(objectClass=inetOrgPerson)(mail=someuser@aaa.fu))', attr='', 0 hits Aug 4 06:30:53 676134c1075b piler-webui[425]: ldap auth result against 127.0.0.1 / generic_ldap: 0 Aug 4 06:30:53 676134c1075b piler-webui[425]: username=joska@aaa.fu, customer=piler, event='login failed', ip=1.2.3.4","title":"Zimbra"},{"location":"administering/#authenticating-against-an-imap-server","text":"It's also possible to authenticate users against your IMAP server. Set the following in config-site.php: $config['ENABLE_IMAP_AUTH'] = 1; $config['IMAP_HOST'] = 'imap.yourdomain.com'; $config['IMAP_PORT'] = 993; $config['IMAP_SSL'] = true;","title":"Authenticating against an IMAP server"},{"location":"administering/#authenticating-against-google-workspace-formerly-gsuite","text":"https://mailpiler.com/authenticate-against-google-workspace-formerly-gsuite/","title":"Authenticating against Google Workspace (formerly GSuite)"},{"location":"administering/#use-azure-ad-for-single-sign-on-sso","text":"https://mailpiler.com/using-azure-ad-single-sign-on-sso/","title":"Use Azure AD for single sign-on (SSO)"},{"location":"administering/#use-aws-cognito-for-single-sign-on-sso","text":"https://mailpiler.com/using-aws-cognito-single-sign-on-sso/","title":"Use AWS Cognito for single sign-on (SSO)"},{"location":"administering/#customizing-the-gui","text":"Using the administration / customers menu the GUI allows you to override some logos, branding URL, and optionally the text and background colours in the menu bar. To override the logo on the login screen for a given customer, set the following in /etc/piler/sites/config-site-customerid.php eg.: /etc/piler/sites/config-site-fictiveco.php: $config['SITE_LOGO_LG'] = '/path/to/fictiveco.jpg'; To override the logo in the menu bar, create a transparent image with up to 125px wide and up to 25px tall, then click on select in the customer settings menu. You may also define the branding URL assigned to the logo, and override the background and text colour in the menu bar. The default values can be found in /var/piler/www/config.php: $config['BRANDING_TEXT_COLOUR'] = '#FFFFFF'; $config['BRANDING_BACKGROUND_COLOUR'] = '#2B5CBE'; $config['BRANDING_LOGO'] = '/view/theme/default/assets/images/archive-logo-sm.png'; $config['BRANDING_FAVICON'] = '/view/theme/default/assets/ico/favicon.png'; $config['BRANDING_URL'] = ''; // the URL when hovering over the logo $config['SUPPORT_LINK'] = ''; // an additional link in the user menu You may override any of these default values by putting the appropriate definitions to /etc/piler/config-site.php, eg: $config['BRANDING_BACKGROUND_COLOUR'] = '#B8377C'; $config['BRANDING_URL'] = 'http://www.mycompany.com/'; $config['SUPPORT_LINK'] = 'http://support.mycompany.com/'; Note that it\u2019s possible to specify a custom css for the given customer by adding the following to override any default css property: $config[\u2018CUSTOM_CSS\u2019] = \u2018/path/to/fictiveco.css\u2019; How to increase the number of search hits: $config[\u2018MAX_SEARCH_HITS\u2019] = 20000; Increase the number of hits per page: $paging = [10,20,30,50,100]; $config['PAGE_LEN'] = 100; // the default for users Then let the users override the hits per page (=page length) value in the user settings menu.","title":"Customizing the GUI"},{"location":"administering/#administrator-tasks","text":"","title":"Administrator tasks"},{"location":"administering/#users-groups-and-rights","text":"Piler allows you to access only your emails you either sent or received. It's often required to grant permission to read emails of other users. Let's say Alice wants to see Bob's and Jim's emails. To do so create a group, type its name, eg. group1, then enter Alice's email address to the \"Email addresses**\" textarea. Finally type Bob's and Jim's email addresses to the \"Assigned email addresses**\" , and click on Add or Modify. Thus when Alice logs in both Bob's and Jim's email addresses are added to her allowed to see email addresses, so Alice can read Bob's emails, and Jim's emails, and of course her own emails as well.","title":"Users, groups, and rights"},{"location":"administering/#administrator-permissions","text":"The administrator account (eg. admin@local) is used to administer piler only. It's not a super powerful account to see anyone's emails that's why it can't see the Search menu at all. If you need a user who can access anyone's emails then grant him AUDITOR privileges on the user settings page. Note that by default there's no such an account, you need to create it. The administrator role may see system statistics, accounting summary, edit user / group settings, policies, see audit logs, etc.","title":"Administrator permissions"},{"location":"administering/#accounting","text":"Piler keeps track of how many emails it has archived so far, and it\u2019s able to show this information grouped by email addresses or domains. Note that Piler creates accounting data only for the domains configured in the administration / domain menu. The accounting runs once a day.","title":"Accounting"},{"location":"administering/#audit-logs","text":"The GUI keeps track of what users do and when they do. Every user's action involves an audit record that the gui stores into the audit SQL table. Thus there's an audit trail of every user activity, eg. searching for some messages, viewing a message, downloading another one, etc. Also the gui logs when a user logs in or logs out. The following information is logged: timestamp username (email) action (eg. view, search, download) IP-address message serial number \u2013 if any optional description Administrators and auditors are able to search within the audit logs, and even export the audit trail as a CSV file. The search field is very similar to the quick search for emails, and the parser tries to figure out what you look for. If it has a format of a date (eg. YYYY.MM.DD or YYYY-MM-DD) then it's a date, if it has an @ symbol then it's an email, dotted quads are IP-addresses, and search|view|download|... are actions. You may use wildcards by using the asterisk ( * ) character. Eg. 2018.08.* searches for the whole August of 2018. jack@yourdom* Searches for user jack in domains starting with \u201cyourdom\u201d. If you want to specify only the user part, then you still must include the @-symbol otherwise the parser won't recognize it as an email address: jack*@ . IP-addresses can be \u201cwildcarded\u201d right after a dot, eg. 1.2.3.* or 1.2.*.* . Note that 123.123.12*.* is not a valid expression. A slightly complex audit search to find the login, view and download attempts for the local auditor in this month from 31.0.0.0/8 address space: audit*@ 2018.08.* login view download 31.* If you don't want or need auditing, then have the provider to turn it off for you: $config['ENABLE_AUDIT'] = 0;","title":"Audit logs"},{"location":"administering/#securing-the-archive","text":"","title":"Securing the archive"},{"location":"administering/#securing-the-gui","text":"Use https. See the blog post about getting a Let\u2019s Encrypt certificate Use single sign-on only Restrict the IP-range of the clients in nginx config Enable 2 factor authentication: $config['ENABLE_GOOGLE_AUTHENTICATOR'] = 1; Enable hCAPTCHA, see below (1.7.3+) Enable CAPTCHA after 3 unsuccessful login attempt: $config['CAPTCHA_FAILED_LOGIN_COUNT'] = 3;","title":"Securing the GUI"},{"location":"administering/#enable-hcaptcha","text":"This feature requires piler enterprise version 1.7.3+. Note that this feature obsoletes the previous secureimage based captcha. Register a plan at https://www.hcaptcha.com/ . There's a free plan up to 1 million requests per month. Create a site key and a secret, as well as add each hostname you want to protect. Finally set the site key and secret in /etc/piler/config-site.php: $config['HCAPTCHA_SITEKEY'] = 'aaaaa-bbbbb-......'; $config['HCAPTCHA_SECRET'] = '0x...........'; Services providers using a multitenant license may be selective to enable this feature for specific tenants as well by putting these variables to the tenant's site specific config.","title":"Enable hCAPTCHA"},{"location":"administering/#securing-the-piler-smtp-daemon","text":"Use SMTP ACL list to restrict access to port 25 Use STARTTLS","title":"Securing the piler-smtp daemon"},{"location":"administering/#rules-and-policies","text":"Piler supports two kinds of policies or rulesets. The exclusion rules specify what NOT to archive . The retention rules specify how long to keep messages in the archive. Customer specific rules are stored in the customer\u2019s database in some mysql tables on the GUI node. The worker nodes synchronize these tables every hour using a piler cron job. Warning! Currently only the provider admins can set or fix both archiving and retention rules, because a single miswritten rule may lead to loss of important emails. When piler starts it reads all the rules and compiles them at startup. If the piler daemon gets a HUP signal, then it re-reads the rules.","title":"Rules and policies"},{"location":"administering/#exclusion-rules","text":"You may define rules to prevent piler and pilerimport to archive certain messages, eg. having no subject, too big, recognized spam, etc. You may specify the From:, To/Cc:, Subject:, message size, attachment type and size value. Piler uses the TRE regex library to test whether the given rule matches the processed message. If so, then neither piler nor pilerimport will archive it, but rather discard it after logging. Some examples: Pattern Matches on subject: ^ {0,}$ messages with no subject size: > 1000000, attachment type: video/ messages bigger than 1 MB + having a video attachment size: < 500 too short spam probes, not having a body subject: [SPAM] recognised spam emails BUY( NOW){0,1} (viagra|cialis) \u201cbuy\u201d or \u201cbuy now\u201d viagra/cialis spam You are encouraged to test your rules whether they work as expected. Use the pilertest utility to test a single EML format message against your exclusion rules. Pilertest prints the first matching exclusion rule (if there\u2019s any), eg. the following mail is caught by a rule matching emails having no subject: pilertest -W customerid -m message.eml locale: hu_HU message-id: <586387.60094.qm@web83907.mail.sp1.yahoo.com> from: *Queen Oneil queenbaby3@att.net queenbaby3 att net (att.net )* to: *undisclosed recipients ()* reference: ** subject: ** sent: 1293679136 hdr len: 3007 digest: 0230af406d0e03e56ed63eeb8e0891ed6a97f49d297f42c0d2565cb770311323 rules check: from=,to=,subject=^$,size0,att.type=,att.size0 attachments: direction: 0 spam: 0","title":"Exclusion rules"},{"location":"administering/#retention-rules","text":"How long shall piler retain your messages? You may control it with the retention rules. The format is exactly the same as with the exclusion rules: you can define the From:, To/Cc:, Subject:, message size, etc. and the retention period in days. Every time piler archives a message, it assigns a retention period according to the retention rules or applying the default value (2257 days = 7 years + 2 days, unless you change it in piler.conf). After the retention period has expired the piler utilities will remove the message from the archive. The \"domain\" field applies to both the sender and the recipient addresses. Eg. if you specify \"example.com\" in the domain field, and the sender is user@example.com, then the rule applies. If the recipient is user@example.com, then it still applies. It's recommended to create your retention policy before deploying any archiving solution. Also be sure to use the pilertest utility to be sure your retention rules work as expected. Test it in a message that should match, and with another one that shouldn't. Note that the retention period is included in the per message verification digest, so the retention period should not be changed after the message has been archived. Piler also compiles a list from the retention rules, so whenever you change them, be sure to click on the \u201cApply settings\u201d red button to send a HUP signal to piler daemon. Note that if you want to keep your emails forever for the given customer, then be sure to disable purging on the admin panel!","title":"Retention rules"},{"location":"administering/#what-to-do-with-spam","text":"It's a waste to archive junk messages, so the best solution is to prevent them from entering the archive. This can be achieved by redirecting spam messages to a quarantine, so only good emails can get to the archive. If this setup is not feasible, you may create an exclusion rule that keeps spam emails out of the archive. Or you may create a retention rule that no spam is to be retained beyond 30 days. Unfortunately these may be error prone, think about a false positive error.","title":"What to do with spam"},{"location":"administering/#backup-and-restore","text":"Backup is an essential part of the business continuity. Make sure that you backup the following directories and data to ensure that you will be able to restore in case of a problem. /etc/piler /var/piler/astore /var/piler/store /var/piler/manticore The /etc/piler directory contains piler configuration, key file, certificate, etc. Make sure that you never lose /etc/piler/piler.key, otherwise you won\u2019t be able to decrypt the archived emails! The /var/piler/store directory stores the archived emails. An email is splitted to several parts. A filename ending with .m stores the message itself without the attachments. The attachments are stored in /var/piler/astore directory in files named as - , eg. d440749d9a64d44e1fd81e63a5e3d1cfa57edd8884db3013d22d831fc21228cc-000050930. The stored .m files are organized to sub directories, eg. /var/piler/store/<server_id>/<customer_id>/58f /590 /591 Notice the subdirectories consisting of three hexadecimal numbers (58f, 590 and 591 in the example above). They hold ~12 days of data. After ~12 days (give or take) a new directory is created, and piler starts to put new emails to the new directory, and won\u2019t touch any of the older directories ever. This behaviour allows you to create an incremental backup procedure. The index data follows a main - dailydelta - delta indexing scheme. The main files change once a day, the dailydelta files change every 30 mins. You don\u2019t have to backup the delta files, it\u2019s enough to backup the main files (ie. /var/piler/manticore/customerid/main1.* ). Note that the index data can be regenerated, however the more emails you have, the longer the process takes, so it\u2019s worth to backup the manticore files as well. Finally you should backup the mysql data. Piler stores crucial metadata, users, rules, audit data, etc. in a mysql database required to operate properly. Make sure to never lose the mysql databases! You may choose to backup the emails as well. The pilerexport utility allows you to export yesterday\u2019s emails to the current directory, eg. cd /path/to/backup/somecustomer pilerexport -W somecustomer -a 2017.04.17 -b 2017.04.17. The above command dumps all emails for \u2018somecustomer\u2019 to /path/to/backup/somecustomer archived on 2017.04.17. The filenames consist of the message serial id + .eml suffix, eg. 123.eml. Important! DON\u2019T export emails of different customers to the same target directory because the dumped eml files will be overwritten! Each customer should have its own dump directory. The restore procedure simply involves importing these emails. You may even set up a secondary piler installation, see the next chapter.","title":"Backup and restore"},{"location":"administering/#remove-a-customers-data","text":"When you remove a customer on the gui node, then the customer\u2019s reference is removed only, and all their emails, manticore index and sql database remain intact. To remove the customer\u2019s data, follow the steps below on how to remove a customer called fictive. On all nodes including both gui and worker nodes (Note that steps 5-6 may take a long time): stop searchd rm -rf /var/piler/manticore/fictive start searchd mysql>drop database fictive; rm -rf /var/piler/astore/00/fictive rm -rf /var/piler/store/00/fictive On the GUI node only: remove fictive from the customer list remove domains belonging to fictive customer remove fictive\u2019s reference from /etc/piler/sites/customer-sites.php","title":"Remove a customer\u2019s data"},{"location":"administering/#setup-a-secondary-piler-site","text":"There\u2019s another option to mitigate the effects of a site disaster. Let\u2019s say you have a Piler installation in Azure with a gui node, an smtp gateway, and 5 worker nodes. Now create another site at AWS (or your favourite provider. It can even be your datacenter if you will), and perform the same installation of the gui node, the smtp gateway, and the worker nodes. Make sure that you use the same internal IP addresses for both sites (ie. Azure and AWS in this example) for the worker nodes. Finally you have to configure the smtp gateway on each site to forward a copy of emails to the other site thus replicating emails automatically to the other site. When the azure site goes down or is destroyed, then you simply redirect customers to the backup site by fixing the DNS entries. One things is not covered in the documentation is that you have to keep the configurations of each sites synchronized, ie. set the same exclusion rules, same retention periods, etc. The current version of Piler doesn\u2019t support this automatically.","title":"Setup a secondary piler site"},{"location":"administering/#best-practices","text":"A few recommended steps on how to operate piler. Set a reasonable default retention time in piler.conf that might be valid to most of your customers. The piler.conf files should be identical on all worker nodes. The piler.key file should be the same on all worker nodes. Use DNS domain names instead of IP-addresses. Monitor the piler nodes, including the gui node(s), the workers, and the smtp gateway as well. The monitoring should include checking port 25, 80 (or 443), 9312 availability, enough free disk space, whether mysql server is running, cpu, memory and disk io, etc. Never ever run out of free disk space. Not even under /tmp. Note that manticore requires some additional temporary disk space while indexing besides the index files. Implement a central syslog server or other log collecting solution. All hosts should send their mail related logs to a central log processing server. Backup all piler related configuration as well as data. This includes the following directories: /etc/piler /var/piler/astore/<server_id> /var/piler/store/<server_id> /var/piler/manticore /var/piler/sphinx # for older deployments using sphinx And backup the mysql databases as well! It\u2019s recommended to put the worker nodes (or even all piler hosts) behind a firewall. See the Security considerations chapter in the Installation guide . The smtp gateway should support STARTTLS to secure emails on the wire. Buy a wildcard certificate for your domain, and you may use it to secure both GUI web access and smtp gateway. You may even use it on the worker nodes to secure smtp. In this case put both the private key and the certificate to /etc/piler/piler.pem, then restart piler-smtp process. In case of an issue, always check the logs. When piler encounters a problem, it syslogs the issue, it gives a clue what went wrong. Check the nginx logs as well. Also in case of a problem run the health check utility: /usr/libexec/piler/health-check.sh. It checks a few settings the Piler support may be interested in.","title":"Best practices"},{"location":"configuring-the-mailserver/","text":"Configuring the mail server for email archiving with piler enterprise edition # Revision #2 Publication date: Aug 23, 2024 Configure the mail server # To start archiving emails you have to configure your mail servers to copy each and every single email they receive to piler via SMTP. The configuration process depends on the used mail server. We\u2019ll use archive@archive.yourdomain.com address as an example where to send the emails. Be sure to use your own archive\u2019s domain name! For multi-tenant installations the local part must match the customer (=tenant) ID, eg. if the customer id is \u201ccustomer1\u201d, then the address to forward emails is customer1@archive.yourdomain.com. Postfix # Add the following to main.cf then issue the postfix reload command: always_bcc = archive@archive.yourdomain.com Axigen # Open the Axigen web admin interface. Go to \u201cSECURITY & FILTERING\u201d, then click on \u201cAcceptance & Routing\u201d, finally click on \u201cADVANCED SETTINGS\u201d. Click on \u201cADD ACCEPTANCE / ROUTING RULE\u201d, and fill the rule name, the conditions and the actions fields, see the example below. Then click on the \u201cSAVE CONFIGURATION\u201d button. Office 365 # Configure networking, and make sure that Office 365 can reach archive.yourdomain.com on port 25. This may require setting some firewall rules, etc. Create a mailbox for NDR reports # Login at office 365 admin portal , then go to \u201cUsers\u201d \u2192 \u201cActive users\u201d menu, and create a user for receiving undeliverable journal reports, eg. ndr-reports@yourdomain.com. Create a journaling rule # Go to Exchange admin center, then \u201ccompliance management\u201d, and select \u201cjournal rules\u201d. Click right next to \u201cSend undeliverable journal reports to:\u201d, and specify the address you just created (ie. ndr-reports@yourdomain.com). Enter \u201carchive@archive.yourdomain.com\u201d to \u201cSend journal reports to\u201d Type \u201carchiving\u201d to \u201cName\u201d Select \u201c[Apply to all messages]\u201d at \u201cIf the message is sent to or received from\u2026\u201d Select \u201cAll messages\u201d at \u201cJournal the following messages\u2026\u201d Finally click on \u201csave\u201d Microsoft Exchange in general # Basically you have to create SMTP journaling in Exchange, find the details on the different Exchange versions below. Note that you may have to force the GUI to rewrite the Message-id header field preventing Exchange to discard the restored message as a duplicate. Edit config-site.php, and set the following: $config['REWRITE_MESSAGE_ID'] = 1; Exchange 2003 # Create an SMTP Contact Set Use MAPI rich text format to Never Enable Automatic Forwarding to allow automatic forwarding Set Exchange rich-text format to Never use Open Exchange System Manager (ESM) Expand Administrative Groups, First Administrative Group (or appropriate group), Servers Expand your server name Expand First Storage Group (or relevant group) Right click on the target mailbox store, select Properties Check the option Archive all messages sent or received by mailboxes on this store Click Browse Select the name of the user account/mailbox that has been created as the journal mailbox Click OK to finish Restart the SMTP service Exchange 2007 # Create SMTP contact # Open Active Directory Users and Computers. Right-click the organizational unit in which you want to create the contact, point to New, and then click Contact. Enter the following: First Name: Journal1, Last Name: Archive, Display Name: Journal1 Archive. Click OK. Open the Exchange Management Console on the Mailbox server. Expand Recipient Configuration, right-click Mail Contact, and then click New Mail Contact. Click Existing Contact, browse to and select the Journal1 Archive contact you just created, then click OK. Click Next. For the External Email Address field, click Edit, enter the archive email address, eg. archive@archive.yourdomain.com, then click OK. Click Next, then click New. Configure Message Format Settings # Open your Exchange Management Console. Expand Recipient Configuration, then select Mail Contact. In the result pane, select the SMTP contact. In the action pane, under the SMTP contact, click Properties. On the General tab, from the Use MAPI rich text format list, select Never. With this setting, journal reports are sent in MIME rather than S/TNEF. Enable Standard Journaling # Open the Exchange Management Console on the Mailbox server on which you want to enable journaling. Expand Server Configuration, then click Mailbox. In the result pane, select the server for the mailbox database for which you want to enable journaling. In the work pane, right-click the mailbox database, then click Properties. On the General tab, select Journal Recipient. For Journal Recipient, click Browse, select the Journal1 Archive recipient, then click OK. Click OK Exchange 2010 # Create SMTP Contact # Click Start > All Programs > Microsoft Exchange Server 2010 > Exchange Management Console Select the Microsoft Exchange On-Premises instance Select Recipient Configuration Below the Recipient Configuration, select Mail Contact In the Action pane to the right, select New Mail Contact In the create mail contact dialog that appears, select New Contact Enter \"journal\" for the new contact name and fill out the rest of the required information. Select Edit aside the new contact's external email address A dialog appears prompting for an external email address. Enter the address \"archive@archive.yourdomain.com\u201d After entering the address, click OK. After returning back to the new contact dialog, select Next Select new to create the New Mail Contact After clicking New, the New Mail Contact will be created. Click Finish to return to the Exchange Management Console. Enable Standard Journaling # Click Organization Configuration, thereafter Mailbox In the Database Management tab to the right, select the database for which journaling must be enabled. Right click on the database and select properties A new window appears. Select the maintenance tab and then select Browse Click the Journal Recipient and then browse to the New Mail Contact created previously Click OK Create a Send Connector # Open the Send Connector tab under Server Management->Hub Transport option Right-click in the empty space and select new Send Connector Ensure the intended use field is set to custom. Enter \u201cJournal1\u201d in the name field then click \u201cNext.\" Click \u201cAdd\u201d in the Address Space Window. In the address field, enter the FQDN of smtp gateway, eg. archive.yourdomain.com Keep the default setting to use DNS to route email to the address space and click \u201cNext.\u201d Depending on your specific case, you may select \u201cAdd\u201d to select another Hub Transport Server Click \u201cNext\u201d once the Hub Transport Server has been added Verify that all of the settings are correct. Click \u201cNew\u201d then \u201cFinish\u201d once it is complete. The Send Connector should now be listed. Exchange 2013/2016 # Setup Journaling # Login to the Exchange Control Panel by opening the browser at https://exchange.yourdomain.com/ecp (where exchange.yourdomain.com is the FQDN of your Exchange server) From the Exchange Admin Center Click compliance management in left menu Click journal rules in top right menu Click the + icon Enter journal in the name field In the field that says \"journal the following messages..\", select \"All messages\" In Send journal reports to field, enter archive@archive.yourdomain.com Click Save to change changes Accept \"Do you want this rule to apply to all future messages\" Create a Send Connector # Select mail flow and then send connectors Click + to add a new send connector Enter 'Piler Connector' in the Name field. Select Custom for the Type option Click Next Under Network settings, select Route mail to smart host Click + to add a new smart host Enter the FQDN of the archive host (e.g. archive.yourdomain.com) Click Save The new host should be listed under Smart Host in the New Send Connector Window Click Next Select None for the Smart host authentication option Click Next Click + to add a new address space Enter archive.yourdomain.com Click Save. The FQDN should be listed under Address in the New Send Connector Window (e.g. archive.yourdomain.com) Click Next Click + to add mail server(s) Select the mail server from the list and then click add. Repeat this step for any additional servers Click ok. The mail servers should be listed under Source in the New Send Connector Window. Click finish The below images may help you creating the Send Connector. Note that the archive's hostname is \"my.smarthost.local\" on the screenshots. Be sure to use your own archive's hostname. Adjust Maximum Message Size # By default, the maximum send message size for the Connector is set to 10 MB. To change this: Open the Exchange Management Shell Enter the following command to the set maximum send message size: Set-SendConnector \"Piler Connector\" -MaxMessageSize \"100 MB\" Enter the following command to verify the maximum send message size is 100 MB: Get-SendConnector \"Piler Connector\" fl MaxMessageSize Disable Non Delivery Reports (optional) # Open the Exchange Management Shell. Enter the following command to disable NDRs: Set-RemoteDomain archive.yourdomain.com -NDREnabled $false Kerio Connect # See the detailed instructions at https://manuals.gfi.com/en/kerio/connect/content/server-configuration/archiving-and-backup/archiving-in-kerio-connect-1164.html for notenant piler installations (\u201cArchiving the whole server\u201d) as well as multi-tenant piler installations (\u201cArchiving individual domains\u201d). Zimbra # Zimbra uses postfix internally, so you may use the postfix approach: find the zimbra version of main.cf, and apply the same as for postfix. Exim # For no-tenant deployments, create a system wide filter, eg. /etc/exim.filter with the following content: unseen deliver archive@archive.yourdomain.com Then specify the filter in your exim config file (on Ubuntu create /etc/exim4/conf.d/main/30_exim4-config_system_filter), and restart exim: system_filter = /etc/exim.filter Also check out http://www.exim.org/exim-html-current/doc/html/spec_html/ch-some_common_configuration_settings.html Notes for mail service providers # This chapter applies to mail service providers, how to configure postfix to send copies of emails to the archive properly. The problem # if you set always_bcc = some@address , then postfix sends a copy of messages to some@address. Let\u2019s say you host mailboxes for both customer1.com and customer2.com. Now if customer1 sends an email to customer2, then postfix will send a single copy only to customer2@ , so the email is archived for customer2 only, but customer1 won\u2019t see this email in their archive. The solution # Configure postfix in the following way. The below config also enables you to selectively archive emails for specific domains or mailboxes only. /etc/postfix/main.cf: recipient_bcc_maps = pcre:/etc/postfix/bcc_map sender_bcc_maps = pcre:/etc/postfix/bcc_map smtp_destination_recipient_limit = 1 /etc/posfix/bcc_map: /(.+)@customer1\\.com/ customer1@archive.yourdomain.com /(.+)@customer2\\.com/ customer2@archive.yourdomain.com /(.+)@customer3\\.com/ customer3@archive.yourdomain.com Alternate solution if postfix and piler smtp are on the same host: Let postfix listen on the public interface, and piler-smtp on the localhost, and apply the following setup: myhostname = smtp-gw.aaa.fu virtual_mailbox_domains = archive.yourdomain.com virtual_alias_maps = pcre:/etc/postfix/bcc_map smtp_destination_recipient_limit = 1 content_filter = smtp:[127.0.0.1]:25","title":"Configuring the mail server for email archiving with piler enterprise edition"},{"location":"configuring-the-mailserver/#configuring-the-mail-server-for-email-archiving-with-piler-enterprise-edition","text":"Revision #2 Publication date: Aug 23, 2024","title":"Configuring the mail server for email archiving with piler enterprise edition"},{"location":"configuring-the-mailserver/#configure-the-mail-server","text":"To start archiving emails you have to configure your mail servers to copy each and every single email they receive to piler via SMTP. The configuration process depends on the used mail server. We\u2019ll use archive@archive.yourdomain.com address as an example where to send the emails. Be sure to use your own archive\u2019s domain name! For multi-tenant installations the local part must match the customer (=tenant) ID, eg. if the customer id is \u201ccustomer1\u201d, then the address to forward emails is customer1@archive.yourdomain.com.","title":"Configure the mail server"},{"location":"configuring-the-mailserver/#postfix","text":"Add the following to main.cf then issue the postfix reload command: always_bcc = archive@archive.yourdomain.com","title":"Postfix"},{"location":"configuring-the-mailserver/#axigen","text":"Open the Axigen web admin interface. Go to \u201cSECURITY & FILTERING\u201d, then click on \u201cAcceptance & Routing\u201d, finally click on \u201cADVANCED SETTINGS\u201d. Click on \u201cADD ACCEPTANCE / ROUTING RULE\u201d, and fill the rule name, the conditions and the actions fields, see the example below. Then click on the \u201cSAVE CONFIGURATION\u201d button.","title":"Axigen"},{"location":"configuring-the-mailserver/#office-365","text":"Configure networking, and make sure that Office 365 can reach archive.yourdomain.com on port 25. This may require setting some firewall rules, etc.","title":"Office 365"},{"location":"configuring-the-mailserver/#create-a-mailbox-for-ndr-reports","text":"Login at office 365 admin portal , then go to \u201cUsers\u201d \u2192 \u201cActive users\u201d menu, and create a user for receiving undeliverable journal reports, eg. ndr-reports@yourdomain.com.","title":"Create a mailbox for NDR reports"},{"location":"configuring-the-mailserver/#create-a-journaling-rule","text":"Go to Exchange admin center, then \u201ccompliance management\u201d, and select \u201cjournal rules\u201d. Click right next to \u201cSend undeliverable journal reports to:\u201d, and specify the address you just created (ie. ndr-reports@yourdomain.com). Enter \u201carchive@archive.yourdomain.com\u201d to \u201cSend journal reports to\u201d Type \u201carchiving\u201d to \u201cName\u201d Select \u201c[Apply to all messages]\u201d at \u201cIf the message is sent to or received from\u2026\u201d Select \u201cAll messages\u201d at \u201cJournal the following messages\u2026\u201d Finally click on \u201csave\u201d","title":"Create a journaling rule"},{"location":"configuring-the-mailserver/#microsoft-exchange-in-general","text":"Basically you have to create SMTP journaling in Exchange, find the details on the different Exchange versions below. Note that you may have to force the GUI to rewrite the Message-id header field preventing Exchange to discard the restored message as a duplicate. Edit config-site.php, and set the following: $config['REWRITE_MESSAGE_ID'] = 1;","title":"Microsoft Exchange in general"},{"location":"configuring-the-mailserver/#exchange-2003","text":"Create an SMTP Contact Set Use MAPI rich text format to Never Enable Automatic Forwarding to allow automatic forwarding Set Exchange rich-text format to Never use Open Exchange System Manager (ESM) Expand Administrative Groups, First Administrative Group (or appropriate group), Servers Expand your server name Expand First Storage Group (or relevant group) Right click on the target mailbox store, select Properties Check the option Archive all messages sent or received by mailboxes on this store Click Browse Select the name of the user account/mailbox that has been created as the journal mailbox Click OK to finish Restart the SMTP service","title":"Exchange 2003"},{"location":"configuring-the-mailserver/#exchange-2007","text":"","title":"Exchange 2007"},{"location":"configuring-the-mailserver/#create-smtp-contact","text":"Open Active Directory Users and Computers. Right-click the organizational unit in which you want to create the contact, point to New, and then click Contact. Enter the following: First Name: Journal1, Last Name: Archive, Display Name: Journal1 Archive. Click OK. Open the Exchange Management Console on the Mailbox server. Expand Recipient Configuration, right-click Mail Contact, and then click New Mail Contact. Click Existing Contact, browse to and select the Journal1 Archive contact you just created, then click OK. Click Next. For the External Email Address field, click Edit, enter the archive email address, eg. archive@archive.yourdomain.com, then click OK. Click Next, then click New.","title":"Create SMTP contact"},{"location":"configuring-the-mailserver/#configure-message-format-settings","text":"Open your Exchange Management Console. Expand Recipient Configuration, then select Mail Contact. In the result pane, select the SMTP contact. In the action pane, under the SMTP contact, click Properties. On the General tab, from the Use MAPI rich text format list, select Never. With this setting, journal reports are sent in MIME rather than S/TNEF.","title":"Configure Message Format Settings"},{"location":"configuring-the-mailserver/#enable-standard-journaling","text":"Open the Exchange Management Console on the Mailbox server on which you want to enable journaling. Expand Server Configuration, then click Mailbox. In the result pane, select the server for the mailbox database for which you want to enable journaling. In the work pane, right-click the mailbox database, then click Properties. On the General tab, select Journal Recipient. For Journal Recipient, click Browse, select the Journal1 Archive recipient, then click OK. Click OK","title":"Enable Standard Journaling"},{"location":"configuring-the-mailserver/#exchange-2010","text":"","title":"Exchange 2010"},{"location":"configuring-the-mailserver/#create-smtp-contact_1","text":"Click Start > All Programs > Microsoft Exchange Server 2010 > Exchange Management Console Select the Microsoft Exchange On-Premises instance Select Recipient Configuration Below the Recipient Configuration, select Mail Contact In the Action pane to the right, select New Mail Contact In the create mail contact dialog that appears, select New Contact Enter \"journal\" for the new contact name and fill out the rest of the required information. Select Edit aside the new contact's external email address A dialog appears prompting for an external email address. Enter the address \"archive@archive.yourdomain.com\u201d After entering the address, click OK. After returning back to the new contact dialog, select Next Select new to create the New Mail Contact After clicking New, the New Mail Contact will be created. Click Finish to return to the Exchange Management Console.","title":"Create SMTP Contact"},{"location":"configuring-the-mailserver/#enable-standard-journaling_1","text":"Click Organization Configuration, thereafter Mailbox In the Database Management tab to the right, select the database for which journaling must be enabled. Right click on the database and select properties A new window appears. Select the maintenance tab and then select Browse Click the Journal Recipient and then browse to the New Mail Contact created previously Click OK","title":"Enable Standard Journaling"},{"location":"configuring-the-mailserver/#create-a-send-connector","text":"Open the Send Connector tab under Server Management->Hub Transport option Right-click in the empty space and select new Send Connector Ensure the intended use field is set to custom. Enter \u201cJournal1\u201d in the name field then click \u201cNext.\" Click \u201cAdd\u201d in the Address Space Window. In the address field, enter the FQDN of smtp gateway, eg. archive.yourdomain.com Keep the default setting to use DNS to route email to the address space and click \u201cNext.\u201d Depending on your specific case, you may select \u201cAdd\u201d to select another Hub Transport Server Click \u201cNext\u201d once the Hub Transport Server has been added Verify that all of the settings are correct. Click \u201cNew\u201d then \u201cFinish\u201d once it is complete. The Send Connector should now be listed.","title":"Create a Send Connector"},{"location":"configuring-the-mailserver/#exchange-20132016","text":"","title":"Exchange 2013/2016"},{"location":"configuring-the-mailserver/#setup-journaling","text":"Login to the Exchange Control Panel by opening the browser at https://exchange.yourdomain.com/ecp (where exchange.yourdomain.com is the FQDN of your Exchange server) From the Exchange Admin Center Click compliance management in left menu Click journal rules in top right menu Click the + icon Enter journal in the name field In the field that says \"journal the following messages..\", select \"All messages\" In Send journal reports to field, enter archive@archive.yourdomain.com Click Save to change changes Accept \"Do you want this rule to apply to all future messages\"","title":"Setup Journaling"},{"location":"configuring-the-mailserver/#create-a-send-connector_1","text":"Select mail flow and then send connectors Click + to add a new send connector Enter 'Piler Connector' in the Name field. Select Custom for the Type option Click Next Under Network settings, select Route mail to smart host Click + to add a new smart host Enter the FQDN of the archive host (e.g. archive.yourdomain.com) Click Save The new host should be listed under Smart Host in the New Send Connector Window Click Next Select None for the Smart host authentication option Click Next Click + to add a new address space Enter archive.yourdomain.com Click Save. The FQDN should be listed under Address in the New Send Connector Window (e.g. archive.yourdomain.com) Click Next Click + to add mail server(s) Select the mail server from the list and then click add. Repeat this step for any additional servers Click ok. The mail servers should be listed under Source in the New Send Connector Window. Click finish The below images may help you creating the Send Connector. Note that the archive's hostname is \"my.smarthost.local\" on the screenshots. Be sure to use your own archive's hostname.","title":"Create a Send Connector"},{"location":"configuring-the-mailserver/#adjust-maximum-message-size","text":"By default, the maximum send message size for the Connector is set to 10 MB. To change this: Open the Exchange Management Shell Enter the following command to the set maximum send message size: Set-SendConnector \"Piler Connector\" -MaxMessageSize \"100 MB\" Enter the following command to verify the maximum send message size is 100 MB: Get-SendConnector \"Piler Connector\" fl MaxMessageSize","title":"Adjust Maximum Message Size"},{"location":"configuring-the-mailserver/#disable-non-delivery-reports-optional","text":"Open the Exchange Management Shell. Enter the following command to disable NDRs: Set-RemoteDomain archive.yourdomain.com -NDREnabled $false","title":"Disable Non Delivery Reports (optional)"},{"location":"configuring-the-mailserver/#kerio-connect","text":"See the detailed instructions at https://manuals.gfi.com/en/kerio/connect/content/server-configuration/archiving-and-backup/archiving-in-kerio-connect-1164.html for notenant piler installations (\u201cArchiving the whole server\u201d) as well as multi-tenant piler installations (\u201cArchiving individual domains\u201d).","title":"Kerio Connect"},{"location":"configuring-the-mailserver/#zimbra","text":"Zimbra uses postfix internally, so you may use the postfix approach: find the zimbra version of main.cf, and apply the same as for postfix.","title":"Zimbra"},{"location":"configuring-the-mailserver/#exim","text":"For no-tenant deployments, create a system wide filter, eg. /etc/exim.filter with the following content: unseen deliver archive@archive.yourdomain.com Then specify the filter in your exim config file (on Ubuntu create /etc/exim4/conf.d/main/30_exim4-config_system_filter), and restart exim: system_filter = /etc/exim.filter Also check out http://www.exim.org/exim-html-current/doc/html/spec_html/ch-some_common_configuration_settings.html","title":"Exim"},{"location":"configuring-the-mailserver/#notes-for-mail-service-providers","text":"This chapter applies to mail service providers, how to configure postfix to send copies of emails to the archive properly.","title":"Notes for mail service providers"},{"location":"configuring-the-mailserver/#the-problem","text":"if you set always_bcc = some@address , then postfix sends a copy of messages to some@address. Let\u2019s say you host mailboxes for both customer1.com and customer2.com. Now if customer1 sends an email to customer2, then postfix will send a single copy only to customer2@ , so the email is archived for customer2 only, but customer1 won\u2019t see this email in their archive.","title":"The problem"},{"location":"configuring-the-mailserver/#the-solution","text":"Configure postfix in the following way. The below config also enables you to selectively archive emails for specific domains or mailboxes only. /etc/postfix/main.cf: recipient_bcc_maps = pcre:/etc/postfix/bcc_map sender_bcc_maps = pcre:/etc/postfix/bcc_map smtp_destination_recipient_limit = 1 /etc/posfix/bcc_map: /(.+)@customer1\\.com/ customer1@archive.yourdomain.com /(.+)@customer2\\.com/ customer2@archive.yourdomain.com /(.+)@customer3\\.com/ customer3@archive.yourdomain.com Alternate solution if postfix and piler smtp are on the same host: Let postfix listen on the public interface, and piler-smtp on the localhost, and apply the following setup: myhostname = smtp-gw.aaa.fu virtual_mailbox_domains = archive.yourdomain.com virtual_alias_maps = pcre:/etc/postfix/bcc_map smtp_destination_recipient_limit = 1 content_filter = smtp:[127.0.0.1]:25","title":"The solution"},{"location":"enduser/","text":"End user guide to piler enterprise edition # This documentation applies to Piler enterprise edition 1.7.2 Revision #1 Publication date: Apr 20, 2023 Overview of how Piler works # Piler is a secure email archive that keeps your messages in a central repository. Piler archives every email it receives whether it be an incoming, outgoing or even an internal email. An important part of the archiving process is called indexing. It allows you to find the archived emails later based on search terms. Piler provides a web based GUI that can be accessed using a web browser, eg. Firefox, Chrome, etc. The message indexing is not real time. It runs periodically on the archiving host every half hour. It means that you cannot see your messages instantly in the GUI as soon as they are archived. It may take up to 30 minutes until they appear in the search hits. The archived messages are encrypted in a tamper-proof manner. When you click on a message you should see a green tick sign with the \u201cMessage is verified\u201d text. It means that the retrieved message is exactly the same that was archived. Otherwise you may see a failure sign with the \u201cMessage Failed Verification\u201d text. See examples below. The GUI has a built-in access control to prevent a user from accessing others' messages. However, users with an auditor role can see every archived email. The GUI also creates an audit event each time a user performs an action, eg. enters a search query, downloads or restores a message, etc. Only auditors and administrators may search in the audit logs. Login # Go to the archive URL, usually it\u2019s https://archive.yourdomain.com/ The archive is usually configured to allow you to use your email address, and your email password as login credentials. In case of an issue, ask your IT for help. Settings # After logging in you may view and edit your settings, eg. page length, date format and timezone. To get to the settings menu, click on your email address at the right side of the menu bar, then choose \u201cSettings\u201d from the dropdown menu. You may turn on two-factor authentication as well. If you do so, be sure to write down the backup codes. Search for emails # When you enter the archive the GUI presents you the last 20 archived messages. To have more hits per page, go to the \u201cSettings\u201d menu in the upper right corner of the screen. You may use two search interfaces: - Quick search in the long text input field - Advanced (or guided) search Quick search # This is the default and the preferred way of searching. Just enter the search terms, and you get the last 10000 hits in a paged view. If there are more than 10000 hits, then the exact number is shown between parentheses. By default the GUI applies the search criteria to each field. Eg. if you type mycompany, then it searches for emails having mycompany in the sender email address, in the subject and in the body. Note that piler indexes the textual data of the attachments as well. If the GUI is instructed to search in the body, then it also searches in the attachments as well. The search is very intuitive. The GUI guesses the format of the words you type. If you type 2018-01-31 (2018.01.31 is also a valid date) then it knows it's a date. If it has a @ sign, then it's an email address. Otherwise it's a subject or body expression. You may enter a finer search query by specifying keywords that precisely identify the type of the given search word. Field Meaning from: Sender address to: Recipient address subject: Subject of the email body: Body of the email, including attachments date1: From (=not before) date (YYYY-MM-DD 00:00:00) date2: To (=not after) date (YYYY-MM-DD 23:59:59) size: Size of the message in bytes attachment: Attachment type. Possible values: word, excel, powerpoint, pdf, compressed, text, odf, image, audio, video, flash, other, any a: Same as attachment: Quick search examples # Emails from Gmail on 2018.02.28: 2018-02-28 @gmail.com Emails from Gmail before 2018.02.28 23:59:59: date2: 2018-02-28, from: @gmail.com Emails from the Matrix (Both sender email addresses and names are indexed): from: Agent Smith Emails to someone in Big company after 2018.01.31 00:00:00: date1: 2018-01-31, to: @bigcompany.com Emails from jane@aaa.fu OR bill@aaa.fu in 2018 March having any kind of attachment: date1:2018-03-01, date2:2018-03-31, from: jane@aaa.fu OR bill@aaa.fu a:any Emails from jane@aaa.fu OR bill@aaa.fu on 2018.02.15 having any kind of attachment: date1:2018-02-15, date2:2018-02-15, from: jane@aaa.fu OR bill@aaa.fu a:any Emails on 2018.02.15 that both jane@aaa.fu AND bill@aaa.fu received having any kind of attachment: date1:2018-02-15, date2:2018-02-15, to: jane@aaa.fu bill@aaa.fu a:any Viagra spam bigger than 200 kB spoofing my email address as the sender, and having 'order', then 'now' in the body: size:>.2M, subject: viagra OR cialis, body: order << now, from: my@email.address Emails with the following expression: \u2018you have to know\u2019: \u201cyou have to know\u201d Price list to jenny@aaa.fu, in pdf attachment(s) smaller than 150 kB: size:<150k, a: pdf, subject: price list, to: jenny@aaa.fu Price list to jenny@aaa.fu, in pdf attachment(s) not containing the word \u2018discount\u2019: a: pdf, subject: price list !discount, to: jenny@aaa.fu Search using a wildcard for words like permission, permissions, permissing, etc. (Note that you need at least 5 characters before the * symbol): permissi* See the following table on some additional search operators: Expression Meaning cat dog Having cat and dog (order is not important) cat OR dog Having cat or dog cat dog \u201ccat dog\u201d Having the expression \u201ccat dog\u201d !dog Not having dog -dog Not having dog \u201ccat dog\u201d ~10 Proximity search cat << dog Before operator: cat has to precede dog Advanced (or guided) search # The other search interface is the advanced or guided search. It's a popup window you can get by clicking on either the down arrow in the right corner of the search field or the \u201cAdvanced search\u201d button. The quick search and the advanced search are equivalent, they give you the same possibilities to define a search query. The advanced search presents you a list of separated input fields giving a better visual view where you can specify the same fields (From, To, dates, etc.) as with the quick search. Recall previous search queries # You may see a down arrow at the right side of the search field. Click on it to see your previous search queries, then select the search term you want to execute again. Save a search query # The GUI lets you save then load search queries. It's especially handy if you entered a longer search expression or if you have to perform some regular searches. To save the current search query, click on the \u201cOptions\u201d button, then select \u201cSave\u201d from the dropdown menu. Execute a saved search criteria # Click on the \u201cOptions\u201d button, then select \u201cLoad\u201d. You\u2019ll see your saved queries. Click on the appropriate search criteria to execute it. You may remove a saved query by clicking on the \u201cRemove\u201d link next to the search expression. Use the search results # If you have a search result then you can view any of the messages by clicking on the subject line or the serial number. The message is shown in the lower view pane. You don\u2019t have to open a message to view its contents. You may simply hover over the subject text in the upper pane to see the first few hundred bytes of the message. Tag messages # You may assign tags to selected emails. To do that perform a query providing the search results you want to tag, then select the appropriate messages you want to tag. Enter the tag name to the input field, and finally click on the tag icon. The search engine indexes the tags in regular intervals. Then you may use \u201ctag:mytag1\u201d search query to recall such tagged messages. You may also remove assigned tags. To do that select the messages you want to un-tag. Then simply click on the tag icon. Add notes to messages # You may assign notes to individual messages. To do that select the given message, and type your notes on the preview window in the lower pane, then finally click on the \u201cSave\u201d button. Just as with the tags, the search engine indexes your notes periodically as well. You may use the note: keyword to recall such a message, eg. note:important package bug Download messages # You may download individual emails by clicking on the Download link in the message preview pane. Click on the PDF icon to download the message as a PDF file. Notice the \u201cMessage is verified\u201d text and its icon proving the message hasn\u2019t been altered. It's also possible to download the search results from the current page as a zip file. To do so, select some or all messages in the upper search results window, then click on the download icon. Restore messages # You may restore a single message by clicking the message, and then in the lower pane click on the restore button. The message is restored to your mailbox. Just as with the download feature, you may also restore several messages at a time. The steps are the same, except the final step is to click on the restore icon in the middle bar. Exporting messages from the GUI # You may download 20-100 emails from the GUI at the same time by selecting them. What if you entered a search query, and it produced 5000 hits, and you need all of them? If the archive administrators enabled the export feature, you may click on the save icon (it looks like a floppy disc) at the right side of the middle bar to initiate a background process that exports all emails matching the search query. Then click on the export menu at the top, and you may download a zip file containing the emails. Be sure to click on the \"Remove\" link after you downloaded the zip file.","title":"End user guide to piler enterprise edition"},{"location":"enduser/#end-user-guide-to-piler-enterprise-edition","text":"This documentation applies to Piler enterprise edition 1.7.2 Revision #1 Publication date: Apr 20, 2023","title":"End user guide to piler enterprise edition"},{"location":"enduser/#overview-of-how-piler-works","text":"Piler is a secure email archive that keeps your messages in a central repository. Piler archives every email it receives whether it be an incoming, outgoing or even an internal email. An important part of the archiving process is called indexing. It allows you to find the archived emails later based on search terms. Piler provides a web based GUI that can be accessed using a web browser, eg. Firefox, Chrome, etc. The message indexing is not real time. It runs periodically on the archiving host every half hour. It means that you cannot see your messages instantly in the GUI as soon as they are archived. It may take up to 30 minutes until they appear in the search hits. The archived messages are encrypted in a tamper-proof manner. When you click on a message you should see a green tick sign with the \u201cMessage is verified\u201d text. It means that the retrieved message is exactly the same that was archived. Otherwise you may see a failure sign with the \u201cMessage Failed Verification\u201d text. See examples below. The GUI has a built-in access control to prevent a user from accessing others' messages. However, users with an auditor role can see every archived email. The GUI also creates an audit event each time a user performs an action, eg. enters a search query, downloads or restores a message, etc. Only auditors and administrators may search in the audit logs.","title":"Overview of how Piler works"},{"location":"enduser/#login","text":"Go to the archive URL, usually it\u2019s https://archive.yourdomain.com/ The archive is usually configured to allow you to use your email address, and your email password as login credentials. In case of an issue, ask your IT for help.","title":"Login"},{"location":"enduser/#settings","text":"After logging in you may view and edit your settings, eg. page length, date format and timezone. To get to the settings menu, click on your email address at the right side of the menu bar, then choose \u201cSettings\u201d from the dropdown menu. You may turn on two-factor authentication as well. If you do so, be sure to write down the backup codes.","title":"Settings"},{"location":"enduser/#search-for-emails","text":"When you enter the archive the GUI presents you the last 20 archived messages. To have more hits per page, go to the \u201cSettings\u201d menu in the upper right corner of the screen. You may use two search interfaces: - Quick search in the long text input field - Advanced (or guided) search","title":"Search for emails"},{"location":"enduser/#quick-search","text":"This is the default and the preferred way of searching. Just enter the search terms, and you get the last 10000 hits in a paged view. If there are more than 10000 hits, then the exact number is shown between parentheses. By default the GUI applies the search criteria to each field. Eg. if you type mycompany, then it searches for emails having mycompany in the sender email address, in the subject and in the body. Note that piler indexes the textual data of the attachments as well. If the GUI is instructed to search in the body, then it also searches in the attachments as well. The search is very intuitive. The GUI guesses the format of the words you type. If you type 2018-01-31 (2018.01.31 is also a valid date) then it knows it's a date. If it has a @ sign, then it's an email address. Otherwise it's a subject or body expression. You may enter a finer search query by specifying keywords that precisely identify the type of the given search word. Field Meaning from: Sender address to: Recipient address subject: Subject of the email body: Body of the email, including attachments date1: From (=not before) date (YYYY-MM-DD 00:00:00) date2: To (=not after) date (YYYY-MM-DD 23:59:59) size: Size of the message in bytes attachment: Attachment type. Possible values: word, excel, powerpoint, pdf, compressed, text, odf, image, audio, video, flash, other, any a: Same as attachment:","title":"Quick search"},{"location":"enduser/#quick-search-examples","text":"Emails from Gmail on 2018.02.28: 2018-02-28 @gmail.com Emails from Gmail before 2018.02.28 23:59:59: date2: 2018-02-28, from: @gmail.com Emails from the Matrix (Both sender email addresses and names are indexed): from: Agent Smith Emails to someone in Big company after 2018.01.31 00:00:00: date1: 2018-01-31, to: @bigcompany.com Emails from jane@aaa.fu OR bill@aaa.fu in 2018 March having any kind of attachment: date1:2018-03-01, date2:2018-03-31, from: jane@aaa.fu OR bill@aaa.fu a:any Emails from jane@aaa.fu OR bill@aaa.fu on 2018.02.15 having any kind of attachment: date1:2018-02-15, date2:2018-02-15, from: jane@aaa.fu OR bill@aaa.fu a:any Emails on 2018.02.15 that both jane@aaa.fu AND bill@aaa.fu received having any kind of attachment: date1:2018-02-15, date2:2018-02-15, to: jane@aaa.fu bill@aaa.fu a:any Viagra spam bigger than 200 kB spoofing my email address as the sender, and having 'order', then 'now' in the body: size:>.2M, subject: viagra OR cialis, body: order << now, from: my@email.address Emails with the following expression: \u2018you have to know\u2019: \u201cyou have to know\u201d Price list to jenny@aaa.fu, in pdf attachment(s) smaller than 150 kB: size:<150k, a: pdf, subject: price list, to: jenny@aaa.fu Price list to jenny@aaa.fu, in pdf attachment(s) not containing the word \u2018discount\u2019: a: pdf, subject: price list !discount, to: jenny@aaa.fu Search using a wildcard for words like permission, permissions, permissing, etc. (Note that you need at least 5 characters before the * symbol): permissi* See the following table on some additional search operators: Expression Meaning cat dog Having cat and dog (order is not important) cat OR dog Having cat or dog cat dog \u201ccat dog\u201d Having the expression \u201ccat dog\u201d !dog Not having dog -dog Not having dog \u201ccat dog\u201d ~10 Proximity search cat << dog Before operator: cat has to precede dog","title":"Quick search examples"},{"location":"enduser/#advanced-or-guided-search","text":"The other search interface is the advanced or guided search. It's a popup window you can get by clicking on either the down arrow in the right corner of the search field or the \u201cAdvanced search\u201d button. The quick search and the advanced search are equivalent, they give you the same possibilities to define a search query. The advanced search presents you a list of separated input fields giving a better visual view where you can specify the same fields (From, To, dates, etc.) as with the quick search.","title":"Advanced (or guided) search"},{"location":"enduser/#recall-previous-search-queries","text":"You may see a down arrow at the right side of the search field. Click on it to see your previous search queries, then select the search term you want to execute again.","title":"Recall previous search queries"},{"location":"enduser/#save-a-search-query","text":"The GUI lets you save then load search queries. It's especially handy if you entered a longer search expression or if you have to perform some regular searches. To save the current search query, click on the \u201cOptions\u201d button, then select \u201cSave\u201d from the dropdown menu.","title":"Save a search query"},{"location":"enduser/#execute-a-saved-search-criteria","text":"Click on the \u201cOptions\u201d button, then select \u201cLoad\u201d. You\u2019ll see your saved queries. Click on the appropriate search criteria to execute it. You may remove a saved query by clicking on the \u201cRemove\u201d link next to the search expression.","title":"Execute a saved search criteria"},{"location":"enduser/#use-the-search-results","text":"If you have a search result then you can view any of the messages by clicking on the subject line or the serial number. The message is shown in the lower view pane. You don\u2019t have to open a message to view its contents. You may simply hover over the subject text in the upper pane to see the first few hundred bytes of the message.","title":"Use the search results"},{"location":"enduser/#tag-messages","text":"You may assign tags to selected emails. To do that perform a query providing the search results you want to tag, then select the appropriate messages you want to tag. Enter the tag name to the input field, and finally click on the tag icon. The search engine indexes the tags in regular intervals. Then you may use \u201ctag:mytag1\u201d search query to recall such tagged messages. You may also remove assigned tags. To do that select the messages you want to un-tag. Then simply click on the tag icon.","title":"Tag messages"},{"location":"enduser/#add-notes-to-messages","text":"You may assign notes to individual messages. To do that select the given message, and type your notes on the preview window in the lower pane, then finally click on the \u201cSave\u201d button. Just as with the tags, the search engine indexes your notes periodically as well. You may use the note: keyword to recall such a message, eg. note:important package bug","title":"Add notes to messages"},{"location":"enduser/#download-messages","text":"You may download individual emails by clicking on the Download link in the message preview pane. Click on the PDF icon to download the message as a PDF file. Notice the \u201cMessage is verified\u201d text and its icon proving the message hasn\u2019t been altered. It's also possible to download the search results from the current page as a zip file. To do so, select some or all messages in the upper search results window, then click on the download icon.","title":"Download messages"},{"location":"enduser/#restore-messages","text":"You may restore a single message by clicking the message, and then in the lower pane click on the restore button. The message is restored to your mailbox. Just as with the download feature, you may also restore several messages at a time. The steps are the same, except the final step is to click on the restore icon in the middle bar.","title":"Restore messages"},{"location":"enduser/#exporting-messages-from-the-gui","text":"You may download 20-100 emails from the GUI at the same time by selecting them. What if you entered a search query, and it produced 5000 hits, and you need all of them? If the archive administrators enabled the export feature, you may click on the save icon (it looks like a floppy disc) at the right side of the middle bar to initiate a background process that exports all emails matching the search query. Then click on the export menu at the top, and you may download a zip file containing the emails. Be sure to click on the \"Remove\" link after you downloaded the zip file.","title":"Exporting messages from the GUI"},{"location":"fiber-ui-config-options/","text":"Piler enterprise Fiber UI configuration options # This documentation applies to Piler enterprise edition 2.0.0 Revision #1 Publication date: 2025-SEP-09 PILER_KEY # Default value: /etc/piler/piler.key Description: Path to the private key file used by Piler for signing and cryptographic operations. RETRIEVER_METHOD # Default value: direct Description: Defines how archived emails are retrieved. Options: direct : Read directly from storage socket : Use a UNIX domain socket connection s3 : Retrieve from Amazon S3 or compatible storage LOG_LEVEL # Default value: INFO Description: Sets the logging verbosity level. Possible values: DEBUG , INFO , WARN , ERROR . LOG_FORMAT # Default value: json Description: Output format of logs. Options: json , plain . USERNAME # Default value: \"\" Description: Username for the UI to run when started as root. LICENSE_FILE # Default value: ./license.jwt Description: Path to the license file containing a signed license token. LISTEN_ADDR # Default value: :3000 Description: Address and port where the Fiber web application will listen for HTTP requests. TRUSTED_PROXIES # Default value: 127.0.0.1 Description: Comma-separated list of trusted proxy IP addresses for handling forwarded headers. PROXY_HEADER # Default value: X-Forwarded-For Description: HTTP header used to extract the real client IP address when behind a proxy. RETRIEVER_SOCKET # Default value: /var/piler/sockets/retriever.sock Description: Path to the UNIX domain socket used when RETRIEVER_METHOD=socket . MYSQL_USER # Default value: piler Description: MySQL database username. MYSQL_PASSWORD # Default value: piler123 Description: MySQL database password. MYSQL_HOST # Default value: localhost:3306 Description: Host and port of the MySQL server. MYSQL_MAX_OPEN_CONN # Default value: 50 Description: Maximum number of open MySQL connections per child process. MYSQL_MAX_IDLE_CONN # Default value: 20 Description: Maximum number of idle MySQL connections in the connection pool. MYSQL_CONN_MAX_LIFETIME # Default value: 300s Description: Maximum lifetime of a MySQL connection before it is recycled. MANTICORE_DSN # Default value: piler:piler123@tcp(localhost:9306)/?parseTime=true Description: DSN for connecting to Manticore search engine (read/write). MANTICORE_READONLY_DSN # Default value: piler:piler123@tcp(localhost:9307)/?parseTime=true Description: DSN for connecting to Manticore search engine (read-only). REDIS_ADDR # Default value: 127.0.0.1:6379 Description: Redis server address. TENANT_RATE_LIMIT_PER_MINUTE # Default value: 20000 Description: Maximum number of requests allowed per tenant per minute. IO_RATE_LIMIT_PER_ROUTE # Default value: 200 Description: I/O rate limit for routes that retrieves emails or attachments from the storage, eg. view, download, attachments (requests per second). DEV_MODE # Default value: false Description: Enables development mode with relaxed security and verbose logging. NODE_TYPE # Default value: master Description: Role of the current node in a multi-node setup. Options: master , worker . WORKERS # Default value: \"\" Description: List of worker node addresses (for multi-node setups). JWT_SECRET # Default value: \"\" Description: Secret key used to sign JWT tokens. ENABLE_CATEGORY # Default value: true Description: Enable or disable category handling in the UI. ENABLE_REDACT # Default value: true Description: Enable or disable text redaction in the UI. LANGUAGES # Default value: de,en,es,fr,zh Description: List of supported UI languages. LOCALE # Default value: en-US Description: Default locale used for formatting dates and text. LOGIN_LOGO # Default value: /assets/images/login-logo.svg Description: Path to the logo displayed on the login page. HEADER_LOGO # Default value: /assets/images/logo-header.svg Description: Path to the logo displayed in the application header. TOAST_LOGO # Default value: /assets/images/logo-round.svg Description: Path to the logo used in toast notifications. HEADER_LINK # Default value: \"\" Description: Custom link displayed in the application header. HEADER_LINK_TITLE # Default value: \"\" Description: Title text for the header link. MAX_CONTENT_LENGTH_TO_DISPLAY # Default value: 30000 Description: Maximum content size (in bytes) to render in the UI. Longer messages are truncated in the message preview, but other than that the message is still intact. RT_INDEX # Default value: true Description: Enable or disable real-time indexing. EXTRA_NOTES # Default value: \"\" Description: Custom notes displayed in the login page. MULTITENANCY # Default value: false Description: Enable or disable multi-tenant mode. MULTINODES # Default value: false Description: Enable or disable multi-node mode. CSS # Default value: <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\"> <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css\"> <link rel=\"stylesheet\" href=\"/assets/css/style.css\"> Description: Built-in CSS includes for styling the UI. CUSTOM_CSS # Default value: \"\" Description: Custom CSS overrides for the UI. ADMIN_GROUP # Default value: \"\" Description: LDAP or SSO group mapped to administrators. AUDITOR_GROUP # Default value: \"\" Description: LDAP or SSO group mapped to auditors. RESTRICTED_AUDITOR_GROUP # Default value: \"\" Description: LDAP or SSO group mapped to restricted auditors. DATAOFFICER_GROUP # Default value: \"\" Description: LDAP or SSO group mapped to data officers. ENABLE_GOOGLE_AUTH # Default value: false Description: Enable Google OAuth2 authentication. GOOGLE_CLIENT_ID # Default value: \"\" Description: Google OAuth2 client ID. GOOGLE_CLIENT_SECRET # Default value: \"\" Description: Google OAuth2 client secret. GOOGLE_REDIRECT_URL # Default value: \"\" Description: Redirect URL for Google OAuth2 login. ENABLE_AZURE_AUTH # Default value: false Description: Enable Microsoft Azure OAuth2 authentication. AZURE_CLIENT_ID # Default value: \"\" Description: Azure OAuth2 client ID. AZURE_CLIENT_SECRET # Default value: \"\" Description: Azure OAuth2 client secret. AZURE_TENANT_ID # Default value: \"\" Description: Azure Active Directory tenant ID. AZURE_REDIRECT_URL # Default value: \"\" Description: Redirect URL for Azure OAuth2 login. ENABLE_GENERIC_OAUTH_AUTH # Default value: false Description: Enable generic OAuth2 authentication. GENERIC_OAUTH_CLIENT_ID # Default value: \"\" Description: Client ID for generic OAuth2 provider. GENERIC_OAUTH_CLIENT_SECRET # Default value: \"\" Description: Client secret for generic OAuth2 provider. GENERIC_OAUTH_REDIRECT_URL # Default value: \"\" Description: Redirect URL for generic OAuth2 login. GENERIC_OAUTH_AUTH_URL # Default value: \"\" Description: Authorization URL for generic OAuth2 provider. GENERIC_OAUTH_TOKEN_URL # Default value: \"\" Description: Token URL for generic OAuth2 provider. GENERIC_OAUTH_USERINFO_URL # Default value: \"\" Description: User info URL for generic OAuth2 provider. ENABLE_AUTHENTICATOR # Default value: true Description: Enable TOTP authenticator usage for 2FA. DATE_FORMAT # Default value: YYYY/MM/DD Description: Default date format used in the UI. TIMEZONE # Default value: Europe/Budapest Description: Default timezone used by the application. MAX_DOWNLOAD_MESSAGES # Default value: 100 Description: Maximum number of messages that can be downloaded at once. SMARTHOST # Default value: \"\" Description: SMTP relay host (smarthost) used for restoring emails. SMARTHOST_PORT # Default value: \"\" Description: Port number for the smarthost. NOREPLY_EMAIL_ADDRESS # Default value: no-reply@archive.example.com Description: Default \"no-reply\" email address for the UI when restoring email messages. ENABLE_LDAP_AUTH # Default value: false Description: Enable LDAP authentication. LDAP_HOST # Default value: \"\" Description: LDAP server host and port. LDAP_BASE_DN # Default value: \"\" Description: Base DN for LDAP searches. LDAP_BIND_DN # Default value: \"\" Description: Bind DN used for LDAP authentication. LDAP_BIND_PASSWORD # Default value: \"\" Description: Password for LDAP bind DN. LDAP_ACCOUNT_OBJECTCLASS # Default value: \"\" Description: LDAP object class for user accounts. LDAP_ACCOUNT_MAIL_ATTR # Default value: \"\" Description: LDAP attribute for user email addresses. LDAP_ACCOUNT_USERID_ATTR # Default value: \"\" Description: LDAP attribute for user ID. LDAP_ACCOUNT_USERNAME_ATTR # Default value: \"\" Description: LDAP attribute for username. LDAP_DISTRIBUTIONLIST_OBJECTCLASS # Default value: \"\" Description: LDAP object class for distribution lists. LDAP_DISTRIBUTIONLIST_MAIL_ATTR # Default value: \"\" Description: LDAP attribute for distribution list email addresses. ENABLE_IMAP_AUTH # Default value: false Description: Enable IMAP authentication. RESTORE_OVER_IMAP # Default value: true Description: Allow restoring messages to user mailboxes over IMAP. IMAP_SERVER # Default value: \"\" Description: IMAP server address. IMAP_FOLDER # Default value: INBOX Description: IMAP folder where restored emails are delivered. IMAP_USE_TLS # Default value: true Description: Use TLS for IMAP connections. ENABLE_POP3_AUTH # Default value: false Description: Enable POP3 authentication. POP3_SERVER # Default value: \"\" Description: POP3 server address. POP3_USE_TLS # Default value: true Description: Use TLS for POP3 connections. MAILCOW_HOST # Default value: \"\" Description: Mailcow server address. MAILCOW_API_KEY # Default value: \"\" Description: API key for Mailcow integration. CAUTION_TEXT # Default value: Caution: This message was sent from outside the company.<br />Please do not click links or open attachments unless you<br />recognize the source of this email and know the content is safe! Description: Warning banner displayed on external messages. GOTENBERG_ADDR # Default value: \"\" Description: Address of Gotenberg service used for document PDF export. ENABLE_EXPORT # Default value: true Description: Enable export functionality for messages. MIN_SIZE_TO_ENABLE_EXPORT # Default value: 10000000000 Description: Minimum storage size (bytes) required before export is enabled. MAX_EXPORT_MESSAGES # Default value: 20000 Description: Maximum number of messages included in a single export. EXPORT_TIMEOUT # Default value: 300s Description: Timeout duration for export jobs. ADMIN_CAN_MANAGE_EXPORTS # Default value: true Description: Allow administrators to manage export jobs. DIR_EXPORT # Default value: /var/piler/export Description: Directory where exported files are stored. EXPORT_WARNING_TEXT # Default value: Exported files will be auto removed in 7 days. Please download them in their scheduled period Description: Warning text shown to users about export retention. ENABLE_DELETE # Default value: false Description: Enable delete functionality for messages. NEED_TO_APPROVE_DELETE # Default value: false Description: Require data officer approval before message deletion. APP_TRACE_NAME # Default value: \"\" Description: Application trace name (used for distributed tracing). TRACE_ADDR # Default value: \"\" Description: Trace collector address (e.g., OpenTelemetry backend). TURNSTILE_SITE_KEY # Default value: \"\" Description: Cloudflare Turnstile site key. TURNSTILE_SECRET_KEY # Default value: \"\" Description: Cloudflare Turnstile secret key. TIKA_URL # Default value: http://127.0.0.1:9998/tika Description: Apache Tika server endpoint for content extraction. HEADER_LINE_TO_HIDE # Default value: \"\" Description: Comma separated Email header lines (without the colon!) to hide in the UI. Example: HEADER_LINE_TO_HIDE=Received,Delivered-To # SAML_CERT_FILE # Default value: saml.crt Description: Path to the SAML certificate file. SAML_KEY_FILE # Default value: saml.key Description: Path to the SAML private key file. SAML_METADATA_URL # Default value: \"\" Description: Metadata URL for SAML IdP. TSA_PUBLIC_KEY_FILE # Default value: \"\" Description: Path to public key used to verify timestamp authority signatures. JWT_RSA_PUBLIC_KEYS_DIR # Default value: \"\" Description: Directory containing RSA public keys for JWT validation. CONTENT_SECURITY_POLICY # Default value: default-src 'self'; script-src 'self' 'unsafe-eval' 'sha256-ZswfTY7H35rbv8WC7NXBoiC7WNu86vSzCDChNWwZZDM=' 'sha256-Sc84R3QT4gTYLl5M2SIYCramZDi3OcEjJiog35/7ydU=' https://cdn.jsdelivr.net https://challenges.cloudflare.com ; style-src 'self' https://cdn.jsdelivr.net; img-src 'self' data: https://cdn.jsdelivr.net https://challenges.cloudflare.com; font-src 'self' https://cdn.jsdelivr.net; frame-src https://challenges.cloudflare.com; connect-src 'self'; object-src 'none'; base-uri 'none'; form-action 'self'; frame-ancestors 'none'; Description: Content Security Policy (CSP) header applied by the application. S3_ENDPOINT # Default value: \"\" Description: S3-compatible storage endpoint, eg. s3.eu-central-003.backblazeb2.com S3_ACCESS_KEY # Default value: \"\" Description: Access key for S3 storage. S3_SECRET_KEY # Default value: \"\" Description: Secret key for S3 storage. S3_USE_SSL # Default value: true Description: Enable SSL/TLS for S3 connections. S3_REGION # Default value: \"\" Description: S3 region name. S3_BUCKET_PREFIX # Default value: \"\" Description: Prefix applied to S3 buckets. S3_USE_SUBDIRS # Default value: true Description: Store objects in subdirectories within the S3 bucket. DEMO_MODE # Default value: false Description: Enable demo mode with restricted functionality. ALLOWED_CIDRS # Default value: 127.0.0.0/8,172.18.0.0/16,172.19.0.0/16,172.20.0.0/16 Description: Defines CIDR blocks allowed to access the /metrics and /healthz endpoints.","title":"Piler enterprise Fiber UI configuration options"},{"location":"fiber-ui-config-options/#piler-enterprise-fiber-ui-configuration-options","text":"This documentation applies to Piler enterprise edition 2.0.0 Revision #1 Publication date: 2025-SEP-09","title":"Piler enterprise Fiber UI configuration options"},{"location":"fiber-ui-config-options/#piler_key","text":"Default value: /etc/piler/piler.key Description: Path to the private key file used by Piler for signing and cryptographic operations.","title":"PILER_KEY"},{"location":"fiber-ui-config-options/#retriever_method","text":"Default value: direct Description: Defines how archived emails are retrieved. Options: direct : Read directly from storage socket : Use a UNIX domain socket connection s3 : Retrieve from Amazon S3 or compatible storage","title":"RETRIEVER_METHOD"},{"location":"fiber-ui-config-options/#log_level","text":"Default value: INFO Description: Sets the logging verbosity level. Possible values: DEBUG , INFO , WARN , ERROR .","title":"LOG_LEVEL"},{"location":"fiber-ui-config-options/#log_format","text":"Default value: json Description: Output format of logs. Options: json , plain .","title":"LOG_FORMAT"},{"location":"fiber-ui-config-options/#username","text":"Default value: \"\" Description: Username for the UI to run when started as root.","title":"USERNAME"},{"location":"fiber-ui-config-options/#license_file","text":"Default value: ./license.jwt Description: Path to the license file containing a signed license token.","title":"LICENSE_FILE"},{"location":"fiber-ui-config-options/#listen_addr","text":"Default value: :3000 Description: Address and port where the Fiber web application will listen for HTTP requests.","title":"LISTEN_ADDR"},{"location":"fiber-ui-config-options/#trusted_proxies","text":"Default value: 127.0.0.1 Description: Comma-separated list of trusted proxy IP addresses for handling forwarded headers.","title":"TRUSTED_PROXIES"},{"location":"fiber-ui-config-options/#proxy_header","text":"Default value: X-Forwarded-For Description: HTTP header used to extract the real client IP address when behind a proxy.","title":"PROXY_HEADER"},{"location":"fiber-ui-config-options/#retriever_socket","text":"Default value: /var/piler/sockets/retriever.sock Description: Path to the UNIX domain socket used when RETRIEVER_METHOD=socket .","title":"RETRIEVER_SOCKET"},{"location":"fiber-ui-config-options/#mysql_user","text":"Default value: piler Description: MySQL database username.","title":"MYSQL_USER"},{"location":"fiber-ui-config-options/#mysql_password","text":"Default value: piler123 Description: MySQL database password.","title":"MYSQL_PASSWORD"},{"location":"fiber-ui-config-options/#mysql_host","text":"Default value: localhost:3306 Description: Host and port of the MySQL server.","title":"MYSQL_HOST"},{"location":"fiber-ui-config-options/#mysql_max_open_conn","text":"Default value: 50 Description: Maximum number of open MySQL connections per child process.","title":"MYSQL_MAX_OPEN_CONN"},{"location":"fiber-ui-config-options/#mysql_max_idle_conn","text":"Default value: 20 Description: Maximum number of idle MySQL connections in the connection pool.","title":"MYSQL_MAX_IDLE_CONN"},{"location":"fiber-ui-config-options/#mysql_conn_max_lifetime","text":"Default value: 300s Description: Maximum lifetime of a MySQL connection before it is recycled.","title":"MYSQL_CONN_MAX_LIFETIME"},{"location":"fiber-ui-config-options/#manticore_dsn","text":"Default value: piler:piler123@tcp(localhost:9306)/?parseTime=true Description: DSN for connecting to Manticore search engine (read/write).","title":"MANTICORE_DSN"},{"location":"fiber-ui-config-options/#manticore_readonly_dsn","text":"Default value: piler:piler123@tcp(localhost:9307)/?parseTime=true Description: DSN for connecting to Manticore search engine (read-only).","title":"MANTICORE_READONLY_DSN"},{"location":"fiber-ui-config-options/#redis_addr","text":"Default value: 127.0.0.1:6379 Description: Redis server address.","title":"REDIS_ADDR"},{"location":"fiber-ui-config-options/#tenant_rate_limit_per_minute","text":"Default value: 20000 Description: Maximum number of requests allowed per tenant per minute.","title":"TENANT_RATE_LIMIT_PER_MINUTE"},{"location":"fiber-ui-config-options/#io_rate_limit_per_route","text":"Default value: 200 Description: I/O rate limit for routes that retrieves emails or attachments from the storage, eg. view, download, attachments (requests per second).","title":"IO_RATE_LIMIT_PER_ROUTE"},{"location":"fiber-ui-config-options/#dev_mode","text":"Default value: false Description: Enables development mode with relaxed security and verbose logging.","title":"DEV_MODE"},{"location":"fiber-ui-config-options/#node_type","text":"Default value: master Description: Role of the current node in a multi-node setup. Options: master , worker .","title":"NODE_TYPE"},{"location":"fiber-ui-config-options/#workers","text":"Default value: \"\" Description: List of worker node addresses (for multi-node setups).","title":"WORKERS"},{"location":"fiber-ui-config-options/#jwt_secret","text":"Default value: \"\" Description: Secret key used to sign JWT tokens.","title":"JWT_SECRET"},{"location":"fiber-ui-config-options/#enable_category","text":"Default value: true Description: Enable or disable category handling in the UI.","title":"ENABLE_CATEGORY"},{"location":"fiber-ui-config-options/#enable_redact","text":"Default value: true Description: Enable or disable text redaction in the UI.","title":"ENABLE_REDACT"},{"location":"fiber-ui-config-options/#languages","text":"Default value: de,en,es,fr,zh Description: List of supported UI languages.","title":"LANGUAGES"},{"location":"fiber-ui-config-options/#locale","text":"Default value: en-US Description: Default locale used for formatting dates and text.","title":"LOCALE"},{"location":"fiber-ui-config-options/#login_logo","text":"Default value: /assets/images/login-logo.svg Description: Path to the logo displayed on the login page.","title":"LOGIN_LOGO"},{"location":"fiber-ui-config-options/#header_logo","text":"Default value: /assets/images/logo-header.svg Description: Path to the logo displayed in the application header.","title":"HEADER_LOGO"},{"location":"fiber-ui-config-options/#toast_logo","text":"Default value: /assets/images/logo-round.svg Description: Path to the logo used in toast notifications.","title":"TOAST_LOGO"},{"location":"fiber-ui-config-options/#header_link","text":"Default value: \"\" Description: Custom link displayed in the application header.","title":"HEADER_LINK"},{"location":"fiber-ui-config-options/#header_link_title","text":"Default value: \"\" Description: Title text for the header link.","title":"HEADER_LINK_TITLE"},{"location":"fiber-ui-config-options/#max_content_length_to_display","text":"Default value: 30000 Description: Maximum content size (in bytes) to render in the UI. Longer messages are truncated in the message preview, but other than that the message is still intact.","title":"MAX_CONTENT_LENGTH_TO_DISPLAY"},{"location":"fiber-ui-config-options/#rt_index","text":"Default value: true Description: Enable or disable real-time indexing.","title":"RT_INDEX"},{"location":"fiber-ui-config-options/#extra_notes","text":"Default value: \"\" Description: Custom notes displayed in the login page.","title":"EXTRA_NOTES"},{"location":"fiber-ui-config-options/#multitenancy","text":"Default value: false Description: Enable or disable multi-tenant mode.","title":"MULTITENANCY"},{"location":"fiber-ui-config-options/#multinodes","text":"Default value: false Description: Enable or disable multi-node mode.","title":"MULTINODES"},{"location":"fiber-ui-config-options/#css","text":"Default value: <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\"> <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css\"> <link rel=\"stylesheet\" href=\"/assets/css/style.css\"> Description: Built-in CSS includes for styling the UI.","title":"CSS"},{"location":"fiber-ui-config-options/#custom_css","text":"Default value: \"\" Description: Custom CSS overrides for the UI.","title":"CUSTOM_CSS"},{"location":"fiber-ui-config-options/#admin_group","text":"Default value: \"\" Description: LDAP or SSO group mapped to administrators.","title":"ADMIN_GROUP"},{"location":"fiber-ui-config-options/#auditor_group","text":"Default value: \"\" Description: LDAP or SSO group mapped to auditors.","title":"AUDITOR_GROUP"},{"location":"fiber-ui-config-options/#restricted_auditor_group","text":"Default value: \"\" Description: LDAP or SSO group mapped to restricted auditors.","title":"RESTRICTED_AUDITOR_GROUP"},{"location":"fiber-ui-config-options/#dataofficer_group","text":"Default value: \"\" Description: LDAP or SSO group mapped to data officers.","title":"DATAOFFICER_GROUP"},{"location":"fiber-ui-config-options/#enable_google_auth","text":"Default value: false Description: Enable Google OAuth2 authentication.","title":"ENABLE_GOOGLE_AUTH"},{"location":"fiber-ui-config-options/#google_client_id","text":"Default value: \"\" Description: Google OAuth2 client ID.","title":"GOOGLE_CLIENT_ID"},{"location":"fiber-ui-config-options/#google_client_secret","text":"Default value: \"\" Description: Google OAuth2 client secret.","title":"GOOGLE_CLIENT_SECRET"},{"location":"fiber-ui-config-options/#google_redirect_url","text":"Default value: \"\" Description: Redirect URL for Google OAuth2 login.","title":"GOOGLE_REDIRECT_URL"},{"location":"fiber-ui-config-options/#enable_azure_auth","text":"Default value: false Description: Enable Microsoft Azure OAuth2 authentication.","title":"ENABLE_AZURE_AUTH"},{"location":"fiber-ui-config-options/#azure_client_id","text":"Default value: \"\" Description: Azure OAuth2 client ID.","title":"AZURE_CLIENT_ID"},{"location":"fiber-ui-config-options/#azure_client_secret","text":"Default value: \"\" Description: Azure OAuth2 client secret.","title":"AZURE_CLIENT_SECRET"},{"location":"fiber-ui-config-options/#azure_tenant_id","text":"Default value: \"\" Description: Azure Active Directory tenant ID.","title":"AZURE_TENANT_ID"},{"location":"fiber-ui-config-options/#azure_redirect_url","text":"Default value: \"\" Description: Redirect URL for Azure OAuth2 login.","title":"AZURE_REDIRECT_URL"},{"location":"fiber-ui-config-options/#enable_generic_oauth_auth","text":"Default value: false Description: Enable generic OAuth2 authentication.","title":"ENABLE_GENERIC_OAUTH_AUTH"},{"location":"fiber-ui-config-options/#generic_oauth_client_id","text":"Default value: \"\" Description: Client ID for generic OAuth2 provider.","title":"GENERIC_OAUTH_CLIENT_ID"},{"location":"fiber-ui-config-options/#generic_oauth_client_secret","text":"Default value: \"\" Description: Client secret for generic OAuth2 provider.","title":"GENERIC_OAUTH_CLIENT_SECRET"},{"location":"fiber-ui-config-options/#generic_oauth_redirect_url","text":"Default value: \"\" Description: Redirect URL for generic OAuth2 login.","title":"GENERIC_OAUTH_REDIRECT_URL"},{"location":"fiber-ui-config-options/#generic_oauth_auth_url","text":"Default value: \"\" Description: Authorization URL for generic OAuth2 provider.","title":"GENERIC_OAUTH_AUTH_URL"},{"location":"fiber-ui-config-options/#generic_oauth_token_url","text":"Default value: \"\" Description: Token URL for generic OAuth2 provider.","title":"GENERIC_OAUTH_TOKEN_URL"},{"location":"fiber-ui-config-options/#generic_oauth_userinfo_url","text":"Default value: \"\" Description: User info URL for generic OAuth2 provider.","title":"GENERIC_OAUTH_USERINFO_URL"},{"location":"fiber-ui-config-options/#enable_authenticator","text":"Default value: true Description: Enable TOTP authenticator usage for 2FA.","title":"ENABLE_AUTHENTICATOR"},{"location":"fiber-ui-config-options/#date_format","text":"Default value: YYYY/MM/DD Description: Default date format used in the UI.","title":"DATE_FORMAT"},{"location":"fiber-ui-config-options/#timezone","text":"Default value: Europe/Budapest Description: Default timezone used by the application.","title":"TIMEZONE"},{"location":"fiber-ui-config-options/#max_download_messages","text":"Default value: 100 Description: Maximum number of messages that can be downloaded at once.","title":"MAX_DOWNLOAD_MESSAGES"},{"location":"fiber-ui-config-options/#smarthost","text":"Default value: \"\" Description: SMTP relay host (smarthost) used for restoring emails.","title":"SMARTHOST"},{"location":"fiber-ui-config-options/#smarthost_port","text":"Default value: \"\" Description: Port number for the smarthost.","title":"SMARTHOST_PORT"},{"location":"fiber-ui-config-options/#noreply_email_address","text":"Default value: no-reply@archive.example.com Description: Default \"no-reply\" email address for the UI when restoring email messages.","title":"NOREPLY_EMAIL_ADDRESS"},{"location":"fiber-ui-config-options/#enable_ldap_auth","text":"Default value: false Description: Enable LDAP authentication.","title":"ENABLE_LDAP_AUTH"},{"location":"fiber-ui-config-options/#ldap_host","text":"Default value: \"\" Description: LDAP server host and port.","title":"LDAP_HOST"},{"location":"fiber-ui-config-options/#ldap_base_dn","text":"Default value: \"\" Description: Base DN for LDAP searches.","title":"LDAP_BASE_DN"},{"location":"fiber-ui-config-options/#ldap_bind_dn","text":"Default value: \"\" Description: Bind DN used for LDAP authentication.","title":"LDAP_BIND_DN"},{"location":"fiber-ui-config-options/#ldap_bind_password","text":"Default value: \"\" Description: Password for LDAP bind DN.","title":"LDAP_BIND_PASSWORD"},{"location":"fiber-ui-config-options/#ldap_account_objectclass","text":"Default value: \"\" Description: LDAP object class for user accounts.","title":"LDAP_ACCOUNT_OBJECTCLASS"},{"location":"fiber-ui-config-options/#ldap_account_mail_attr","text":"Default value: \"\" Description: LDAP attribute for user email addresses.","title":"LDAP_ACCOUNT_MAIL_ATTR"},{"location":"fiber-ui-config-options/#ldap_account_userid_attr","text":"Default value: \"\" Description: LDAP attribute for user ID.","title":"LDAP_ACCOUNT_USERID_ATTR"},{"location":"fiber-ui-config-options/#ldap_account_username_attr","text":"Default value: \"\" Description: LDAP attribute for username.","title":"LDAP_ACCOUNT_USERNAME_ATTR"},{"location":"fiber-ui-config-options/#ldap_distributionlist_objectclass","text":"Default value: \"\" Description: LDAP object class for distribution lists.","title":"LDAP_DISTRIBUTIONLIST_OBJECTCLASS"},{"location":"fiber-ui-config-options/#ldap_distributionlist_mail_attr","text":"Default value: \"\" Description: LDAP attribute for distribution list email addresses.","title":"LDAP_DISTRIBUTIONLIST_MAIL_ATTR"},{"location":"fiber-ui-config-options/#enable_imap_auth","text":"Default value: false Description: Enable IMAP authentication.","title":"ENABLE_IMAP_AUTH"},{"location":"fiber-ui-config-options/#restore_over_imap","text":"Default value: true Description: Allow restoring messages to user mailboxes over IMAP.","title":"RESTORE_OVER_IMAP"},{"location":"fiber-ui-config-options/#imap_server","text":"Default value: \"\" Description: IMAP server address.","title":"IMAP_SERVER"},{"location":"fiber-ui-config-options/#imap_folder","text":"Default value: INBOX Description: IMAP folder where restored emails are delivered.","title":"IMAP_FOLDER"},{"location":"fiber-ui-config-options/#imap_use_tls","text":"Default value: true Description: Use TLS for IMAP connections.","title":"IMAP_USE_TLS"},{"location":"fiber-ui-config-options/#enable_pop3_auth","text":"Default value: false Description: Enable POP3 authentication.","title":"ENABLE_POP3_AUTH"},{"location":"fiber-ui-config-options/#pop3_server","text":"Default value: \"\" Description: POP3 server address.","title":"POP3_SERVER"},{"location":"fiber-ui-config-options/#pop3_use_tls","text":"Default value: true Description: Use TLS for POP3 connections.","title":"POP3_USE_TLS"},{"location":"fiber-ui-config-options/#mailcow_host","text":"Default value: \"\" Description: Mailcow server address.","title":"MAILCOW_HOST"},{"location":"fiber-ui-config-options/#mailcow_api_key","text":"Default value: \"\" Description: API key for Mailcow integration.","title":"MAILCOW_API_KEY"},{"location":"fiber-ui-config-options/#caution_text","text":"Default value: Caution: This message was sent from outside the company.<br />Please do not click links or open attachments unless you<br />recognize the source of this email and know the content is safe! Description: Warning banner displayed on external messages.","title":"CAUTION_TEXT"},{"location":"fiber-ui-config-options/#gotenberg_addr","text":"Default value: \"\" Description: Address of Gotenberg service used for document PDF export.","title":"GOTENBERG_ADDR"},{"location":"fiber-ui-config-options/#enable_export","text":"Default value: true Description: Enable export functionality for messages.","title":"ENABLE_EXPORT"},{"location":"fiber-ui-config-options/#min_size_to_enable_export","text":"Default value: 10000000000 Description: Minimum storage size (bytes) required before export is enabled.","title":"MIN_SIZE_TO_ENABLE_EXPORT"},{"location":"fiber-ui-config-options/#max_export_messages","text":"Default value: 20000 Description: Maximum number of messages included in a single export.","title":"MAX_EXPORT_MESSAGES"},{"location":"fiber-ui-config-options/#export_timeout","text":"Default value: 300s Description: Timeout duration for export jobs.","title":"EXPORT_TIMEOUT"},{"location":"fiber-ui-config-options/#admin_can_manage_exports","text":"Default value: true Description: Allow administrators to manage export jobs.","title":"ADMIN_CAN_MANAGE_EXPORTS"},{"location":"fiber-ui-config-options/#dir_export","text":"Default value: /var/piler/export Description: Directory where exported files are stored.","title":"DIR_EXPORT"},{"location":"fiber-ui-config-options/#export_warning_text","text":"Default value: Exported files will be auto removed in 7 days. Please download them in their scheduled period Description: Warning text shown to users about export retention.","title":"EXPORT_WARNING_TEXT"},{"location":"fiber-ui-config-options/#enable_delete","text":"Default value: false Description: Enable delete functionality for messages.","title":"ENABLE_DELETE"},{"location":"fiber-ui-config-options/#need_to_approve_delete","text":"Default value: false Description: Require data officer approval before message deletion.","title":"NEED_TO_APPROVE_DELETE"},{"location":"fiber-ui-config-options/#app_trace_name","text":"Default value: \"\" Description: Application trace name (used for distributed tracing).","title":"APP_TRACE_NAME"},{"location":"fiber-ui-config-options/#trace_addr","text":"Default value: \"\" Description: Trace collector address (e.g., OpenTelemetry backend).","title":"TRACE_ADDR"},{"location":"fiber-ui-config-options/#turnstile_site_key","text":"Default value: \"\" Description: Cloudflare Turnstile site key.","title":"TURNSTILE_SITE_KEY"},{"location":"fiber-ui-config-options/#turnstile_secret_key","text":"Default value: \"\" Description: Cloudflare Turnstile secret key.","title":"TURNSTILE_SECRET_KEY"},{"location":"fiber-ui-config-options/#tika_url","text":"Default value: http://127.0.0.1:9998/tika Description: Apache Tika server endpoint for content extraction.","title":"TIKA_URL"},{"location":"fiber-ui-config-options/#header_line_to_hide","text":"Default value: \"\" Description: Comma separated Email header lines (without the colon!) to hide in the UI.","title":"HEADER_LINE_TO_HIDE"},{"location":"fiber-ui-config-options/#example-header_line_to_hidereceiveddelivered-to","text":"","title":"Example: HEADER_LINE_TO_HIDE=Received,Delivered-To"},{"location":"fiber-ui-config-options/#saml_cert_file","text":"Default value: saml.crt Description: Path to the SAML certificate file.","title":"SAML_CERT_FILE"},{"location":"fiber-ui-config-options/#saml_key_file","text":"Default value: saml.key Description: Path to the SAML private key file.","title":"SAML_KEY_FILE"},{"location":"fiber-ui-config-options/#saml_metadata_url","text":"Default value: \"\" Description: Metadata URL for SAML IdP.","title":"SAML_METADATA_URL"},{"location":"fiber-ui-config-options/#tsa_public_key_file","text":"Default value: \"\" Description: Path to public key used to verify timestamp authority signatures.","title":"TSA_PUBLIC_KEY_FILE"},{"location":"fiber-ui-config-options/#jwt_rsa_public_keys_dir","text":"Default value: \"\" Description: Directory containing RSA public keys for JWT validation.","title":"JWT_RSA_PUBLIC_KEYS_DIR"},{"location":"fiber-ui-config-options/#content_security_policy","text":"Default value: default-src 'self'; script-src 'self' 'unsafe-eval' 'sha256-ZswfTY7H35rbv8WC7NXBoiC7WNu86vSzCDChNWwZZDM=' 'sha256-Sc84R3QT4gTYLl5M2SIYCramZDi3OcEjJiog35/7ydU=' https://cdn.jsdelivr.net https://challenges.cloudflare.com ; style-src 'self' https://cdn.jsdelivr.net; img-src 'self' data: https://cdn.jsdelivr.net https://challenges.cloudflare.com; font-src 'self' https://cdn.jsdelivr.net; frame-src https://challenges.cloudflare.com; connect-src 'self'; object-src 'none'; base-uri 'none'; form-action 'self'; frame-ancestors 'none'; Description: Content Security Policy (CSP) header applied by the application.","title":"CONTENT_SECURITY_POLICY"},{"location":"fiber-ui-config-options/#s3_endpoint","text":"Default value: \"\" Description: S3-compatible storage endpoint, eg. s3.eu-central-003.backblazeb2.com","title":"S3_ENDPOINT"},{"location":"fiber-ui-config-options/#s3_access_key","text":"Default value: \"\" Description: Access key for S3 storage.","title":"S3_ACCESS_KEY"},{"location":"fiber-ui-config-options/#s3_secret_key","text":"Default value: \"\" Description: Secret key for S3 storage.","title":"S3_SECRET_KEY"},{"location":"fiber-ui-config-options/#s3_use_ssl","text":"Default value: true Description: Enable SSL/TLS for S3 connections.","title":"S3_USE_SSL"},{"location":"fiber-ui-config-options/#s3_region","text":"Default value: \"\" Description: S3 region name.","title":"S3_REGION"},{"location":"fiber-ui-config-options/#s3_bucket_prefix","text":"Default value: \"\" Description: Prefix applied to S3 buckets.","title":"S3_BUCKET_PREFIX"},{"location":"fiber-ui-config-options/#s3_use_subdirs","text":"Default value: true Description: Store objects in subdirectories within the S3 bucket.","title":"S3_USE_SUBDIRS"},{"location":"fiber-ui-config-options/#demo_mode","text":"Default value: false Description: Enable demo mode with restricted functionality.","title":"DEMO_MODE"},{"location":"fiber-ui-config-options/#allowed_cidrs","text":"Default value: 127.0.0.0/8,172.18.0.0/16,172.19.0.0/16,172.20.0.0/16 Description: Defines CIDR blocks allowed to access the /metrics and /healthz endpoints.","title":"ALLOWED_CIDRS"},{"location":"import-export/","text":"Importing / exporting emails # This documentation applies to Piler enterprise edition 1.7.2 Revision #1 Publication date: Apr 20, 2023 Exporting emails # The GUI allows users to export their emails they can see in the search results. It\u2019s suited to download one page of emails at a time, usually 20, 30, 50 or even 100 depending on the page length set for the given users. However, occasionally more emails needed to be exported. The pilerexport CLI utility can be used by administrators with shell access to the archive host. The pilerexport CLI utility allows you to export messages from the archive to EML files to the current directory. Each exported message is written to a distinct RFC-2822 formatted EML file, so expect lots of EML files in the current directory. IMPORTANT! The pilerexport utility is setuid to the piler user, and to let it create the EML files you have to cd to a directory where the piler user has write access. usage: pilerexport [-c <config file>] Config file to use if not the default -a <start date> Start date in YYYY.MM.DD format -b <stop date> Stop date in YYYY.MM.DD format -f <email@address.com> From address -r <email@address.com> Recipient address -e <email@address.com> Export both sent and received emails -F <domain.com> From domain -R <domain.com> Recipient domain -s <size> Min. size -S <size> Max. size -w <where condition> Where condition to pass to sphinx, eg. \"match('@subject: piler')\" -m <max. matches> Max. matches to apply to sphinx query (default: 1000) -i <index list> Sphinx indices to use (default: main1,dailydelta1,delta1) -A Export all emails from archive -W <customer> Customer -z <zip file> Write exported EML files to a zip file -Z <batch size> Zip batch size. Valid range: 10-10000, default: 2000 -D <max files> Max. number of files to put in a single directory, default: 2000 -p <private key> Sign the created zip file with <private key> -E <export dir> Dump emails to this directory -o Export emails to stdout -q Quiet, print only errors -d Dry run If you want to see what messages piler would export, then use the -d (or -dryrun) command line option. It will print a list of IDs associated with each message. To prevent you dumping the whole archive you have to specify the from addresses and/or the recipient addresses and/or the start/stop dates. If you really want to export the whole archive, then use the -A (or --all) command line option. You may need lots of disk space and time to do so. You may specify more email addresses, see the examples below. The conditions are in Boolean AND relation with each other. A few examples using the customer called \u201cfictive\u201d* : export all emails sent on 2015.11.24 (aka a daily backup): pilerexport -W fictive --start-date 2015.11.24 --stop-date 2015.11.24 export all emails sent on 2015.11.24 bigger than 10 kB: pilerexport -W fictive --start-date 2015.11.24 --stop-date 2015.11.24 -s 10000 export all emails if size is between 100k and 2MB AND the sender is any of aaa@aaa.fu,bbb@aaa.fu AND the recipient is you@example.com: pilerexport -W fictive --start-date 2015.11.24 --stop-date 2015.11.24 -s 10000 -S 200000 -f aaa@aaa.fu -f bbb@aaa.fu -r you@example.com export all emails sent to Gmail: pilerexport -W fictive -R gmail.com export all emails received from Yahoo: pilerexport -W fictive -F yahoo.com export all emails matching the sphinx query \u201csubject: test\u201d: pilerexport -W fictive -w \"match('@subject test')\" -i fictive_main1,fictive_dailydelta1 * : For no-tenant installations you don\u2019t have to specify the customer. Importing emails # The pilerimport utility allows you to import legacy emails. It supports a wide variety of sources, eg. imap, pop3 accounts, directories with EML files, MBOX files. IMPORTANT! The pilerimport utility is setuid to the piler user, and to let it create some temporary files you have to cd to a directory where the piler user has write access. usage: pilerimport [-c <config file>] Config file to use if not the default -e <eml file> EML file to import -m <mailbox file> Mbox file to import -d <dir> Directory with EML files to import -i <imap server> IMAP server to connect -K <pop3 server> POP3 server to connect -u <username> Username for imap/pop3 import -p <password> Password for imap/pop3 import -P <port> Port for imap/pop3 import (default: 143/110 -t <timeout> Timeout in sec for imap/pop3 import -x <folder1,folder2,....folderN,> Comma separated list of imap folders to skip. Add the trailing comma! -f <imap folder> IMAP folder name to import -g <imap folder> Move email after import to this IMAP folder -b <batch limit> mport only this many emails -s <start position> Start importing POP3 emails from this position -W <customer> -D Dry-run, do not import anything -o Only download emails for POP3/IMAP import -O <move dir> Move downloaded only emails to this directory (applies to imap/pop3) -r Remove imported emails -y Read emails from export -q Quiet mode A few examples using the customer called \u201cfictive\u201d* : import a single EML file: pilerimport -W fictive -e message-from-jack.eml Import a single EML file from STDIN: cat some.eml | pilerimport -W fictive -e - Import all messages from a Unix mbox file: pilerimport -W fictive -m /path/to/202008.mbox Import all messages from a directory having EML messages (it\u2019s recursive): pilerimport -W fictive -d /path/to/dir Import all messages from a directory having EML messages and remove all successfully imported eml files: pilerimport -W fictive -d /path/to/dir -r Import messages from a POP3 server: pilerimport -K pop3.yourdomain.com -u username -p password Importing from an IMAP server # Though the pilerimport utility can import emails from imap servers, it might have a hard time with some imap server implementations. The recommended method is to use the imapfetch.py utility to download the emails from the imap servers, then run pilerimport -d to process emails in the directory, eg. pilerimport -d /path/to/dir -r export PATH=$PATH:/usr/libexec/piler imapfetch.py -s imap.yourdomain.com -u username -p password pilerimport -W fictive -d . -r Download emails from the IMAP folders \u201c2019\u201d and \u201c2020\u201d only: imapfetch.py -s imap.yourdomain.com -u username -p password -f 2019,2020 By default imapfetch.py excludes the following IMAP folders: junk,trash,spam,draft Skip only the \u201cjunk\u201d and \u201cdraft\u201d IMAP folders: imapfetch.py -s imap.yourdomain.com -u username -p password --skip-list junk,draft How to import a PST file # The pilerimport can process only EML files directly. However, the readpst utility from the libpst package can extract the contents of a legacy PST file created with Outlook 2003. Unfortunately this tool may provide bogus email headers, eg. From: <MAILER-DAEMON> , missing To: address(es), Date:, Message-ID: headers, and even Received: lines. These are crucial for piler, and you will have problems without them, so be sure to verify the extracted files before you import them if these mentioned email headers are fine. You may use the following command: readpst -M -b /path/to/file.pst For PST files created with a more recent version of Outlook try the Bitrecover Pro edition . Once you have the RFC-2822 formatted EML files extracted from the PST file, import them with the pilerimport command. How to use impersonation with Exchange # add-mailboxpermission username -AccessRights FullAccess -user superuser pilerimport -i mail.domain.com -u domain.com/superuser/username -p superpassword remove-mailboxpermission username -AccessRights FullAccess -user superuser Replace 'username' with your email user (no @domain necessary), 'superuser' with your import user, and 'superpassword' with your import user's password, and 'domain.com' with your domain. Importing IMAP accounts over the GUI # To enable the import menu in the GUI, set the following in /etc/piler/config-site.php: $config['ENABLE_IMPORT'] = 1; For multitenant installations you may enable it selectively for certain customers when putting the above line to a per customer config file. The administrators may go to the administration / import menu, and add an import job by specifying the imap connection type (ssl or not), the imap server name, and the username and password. Visit https://mailpiler.com/import-over-the-gui/ for screenshots.","title":"Importing / exporting emails"},{"location":"import-export/#importing-exporting-emails","text":"This documentation applies to Piler enterprise edition 1.7.2 Revision #1 Publication date: Apr 20, 2023","title":"Importing / exporting emails"},{"location":"import-export/#exporting-emails","text":"The GUI allows users to export their emails they can see in the search results. It\u2019s suited to download one page of emails at a time, usually 20, 30, 50 or even 100 depending on the page length set for the given users. However, occasionally more emails needed to be exported. The pilerexport CLI utility can be used by administrators with shell access to the archive host. The pilerexport CLI utility allows you to export messages from the archive to EML files to the current directory. Each exported message is written to a distinct RFC-2822 formatted EML file, so expect lots of EML files in the current directory. IMPORTANT! The pilerexport utility is setuid to the piler user, and to let it create the EML files you have to cd to a directory where the piler user has write access. usage: pilerexport [-c <config file>] Config file to use if not the default -a <start date> Start date in YYYY.MM.DD format -b <stop date> Stop date in YYYY.MM.DD format -f <email@address.com> From address -r <email@address.com> Recipient address -e <email@address.com> Export both sent and received emails -F <domain.com> From domain -R <domain.com> Recipient domain -s <size> Min. size -S <size> Max. size -w <where condition> Where condition to pass to sphinx, eg. \"match('@subject: piler')\" -m <max. matches> Max. matches to apply to sphinx query (default: 1000) -i <index list> Sphinx indices to use (default: main1,dailydelta1,delta1) -A Export all emails from archive -W <customer> Customer -z <zip file> Write exported EML files to a zip file -Z <batch size> Zip batch size. Valid range: 10-10000, default: 2000 -D <max files> Max. number of files to put in a single directory, default: 2000 -p <private key> Sign the created zip file with <private key> -E <export dir> Dump emails to this directory -o Export emails to stdout -q Quiet, print only errors -d Dry run If you want to see what messages piler would export, then use the -d (or -dryrun) command line option. It will print a list of IDs associated with each message. To prevent you dumping the whole archive you have to specify the from addresses and/or the recipient addresses and/or the start/stop dates. If you really want to export the whole archive, then use the -A (or --all) command line option. You may need lots of disk space and time to do so. You may specify more email addresses, see the examples below. The conditions are in Boolean AND relation with each other. A few examples using the customer called \u201cfictive\u201d* : export all emails sent on 2015.11.24 (aka a daily backup): pilerexport -W fictive --start-date 2015.11.24 --stop-date 2015.11.24 export all emails sent on 2015.11.24 bigger than 10 kB: pilerexport -W fictive --start-date 2015.11.24 --stop-date 2015.11.24 -s 10000 export all emails if size is between 100k and 2MB AND the sender is any of aaa@aaa.fu,bbb@aaa.fu AND the recipient is you@example.com: pilerexport -W fictive --start-date 2015.11.24 --stop-date 2015.11.24 -s 10000 -S 200000 -f aaa@aaa.fu -f bbb@aaa.fu -r you@example.com export all emails sent to Gmail: pilerexport -W fictive -R gmail.com export all emails received from Yahoo: pilerexport -W fictive -F yahoo.com export all emails matching the sphinx query \u201csubject: test\u201d: pilerexport -W fictive -w \"match('@subject test')\" -i fictive_main1,fictive_dailydelta1 * : For no-tenant installations you don\u2019t have to specify the customer.","title":"Exporting emails"},{"location":"import-export/#importing-emails","text":"The pilerimport utility allows you to import legacy emails. It supports a wide variety of sources, eg. imap, pop3 accounts, directories with EML files, MBOX files. IMPORTANT! The pilerimport utility is setuid to the piler user, and to let it create some temporary files you have to cd to a directory where the piler user has write access. usage: pilerimport [-c <config file>] Config file to use if not the default -e <eml file> EML file to import -m <mailbox file> Mbox file to import -d <dir> Directory with EML files to import -i <imap server> IMAP server to connect -K <pop3 server> POP3 server to connect -u <username> Username for imap/pop3 import -p <password> Password for imap/pop3 import -P <port> Port for imap/pop3 import (default: 143/110 -t <timeout> Timeout in sec for imap/pop3 import -x <folder1,folder2,....folderN,> Comma separated list of imap folders to skip. Add the trailing comma! -f <imap folder> IMAP folder name to import -g <imap folder> Move email after import to this IMAP folder -b <batch limit> mport only this many emails -s <start position> Start importing POP3 emails from this position -W <customer> -D Dry-run, do not import anything -o Only download emails for POP3/IMAP import -O <move dir> Move downloaded only emails to this directory (applies to imap/pop3) -r Remove imported emails -y Read emails from export -q Quiet mode A few examples using the customer called \u201cfictive\u201d* : import a single EML file: pilerimport -W fictive -e message-from-jack.eml Import a single EML file from STDIN: cat some.eml | pilerimport -W fictive -e - Import all messages from a Unix mbox file: pilerimport -W fictive -m /path/to/202008.mbox Import all messages from a directory having EML messages (it\u2019s recursive): pilerimport -W fictive -d /path/to/dir Import all messages from a directory having EML messages and remove all successfully imported eml files: pilerimport -W fictive -d /path/to/dir -r Import messages from a POP3 server: pilerimport -K pop3.yourdomain.com -u username -p password","title":"Importing emails"},{"location":"import-export/#importing-from-an-imap-server","text":"Though the pilerimport utility can import emails from imap servers, it might have a hard time with some imap server implementations. The recommended method is to use the imapfetch.py utility to download the emails from the imap servers, then run pilerimport -d to process emails in the directory, eg. pilerimport -d /path/to/dir -r export PATH=$PATH:/usr/libexec/piler imapfetch.py -s imap.yourdomain.com -u username -p password pilerimport -W fictive -d . -r Download emails from the IMAP folders \u201c2019\u201d and \u201c2020\u201d only: imapfetch.py -s imap.yourdomain.com -u username -p password -f 2019,2020 By default imapfetch.py excludes the following IMAP folders: junk,trash,spam,draft Skip only the \u201cjunk\u201d and \u201cdraft\u201d IMAP folders: imapfetch.py -s imap.yourdomain.com -u username -p password --skip-list junk,draft","title":"Importing from an IMAP server"},{"location":"import-export/#how-to-import-a-pst-file","text":"The pilerimport can process only EML files directly. However, the readpst utility from the libpst package can extract the contents of a legacy PST file created with Outlook 2003. Unfortunately this tool may provide bogus email headers, eg. From: <MAILER-DAEMON> , missing To: address(es), Date:, Message-ID: headers, and even Received: lines. These are crucial for piler, and you will have problems without them, so be sure to verify the extracted files before you import them if these mentioned email headers are fine. You may use the following command: readpst -M -b /path/to/file.pst For PST files created with a more recent version of Outlook try the Bitrecover Pro edition . Once you have the RFC-2822 formatted EML files extracted from the PST file, import them with the pilerimport command.","title":"How to import a PST file"},{"location":"import-export/#how-to-use-impersonation-with-exchange","text":"add-mailboxpermission username -AccessRights FullAccess -user superuser pilerimport -i mail.domain.com -u domain.com/superuser/username -p superpassword remove-mailboxpermission username -AccessRights FullAccess -user superuser Replace 'username' with your email user (no @domain necessary), 'superuser' with your import user, and 'superpassword' with your import user's password, and 'domain.com' with your domain.","title":"How to use impersonation with Exchange"},{"location":"import-export/#importing-imap-accounts-over-the-gui","text":"To enable the import menu in the GUI, set the following in /etc/piler/config-site.php: $config['ENABLE_IMPORT'] = 1; For multitenant installations you may enable it selectively for certain customers when putting the above line to a per customer config file. The administrators may go to the administration / import menu, and add an import job by specifying the imap connection type (ssl or not), the imap server name, and the username and password. Visit https://mailpiler.com/import-over-the-gui/ for screenshots.","title":"Importing IMAP accounts over the GUI"},{"location":"installation/","text":"Installing piler enterprise edition # This documentation applies to Piler enterprise edition 1.7.2 Revision #1 Publication date: Apr 20, 2023 Piler architecture overview # Piler is flexible enough to support several configurations and layouts. Use one of the following layouts matching your environment. Single node layout # Figure 1. Single node installation This is the simplest layout, when you have a single node running piler enterprise. It allows you to start small, and expand later as you grow. Piler receives the emails directly, and archives them. The Piler node also runs the GUI. To restore the emails it uses the smtp smarthost (smtp.aaa.fu) to deliver emails to the users\u2019 mailboxes. The layout doesn\u2019t include any firewalls, however you are encouraged to use a firewall, etc. to secure the Piler network. Multiple nodes layout # Figure 2. Multiple nodes layout A typical installation may consist of two (or more) piler nodes (worker0 and worker1 in the example), an SMTP gateway, and a GUI node. SMTP gateway : receives emails from customer SMTP servers, and acts as a smarthost forwarding the restored emails to the customer SMTP servers. Worker nodes : runs the Piler daemon, archiving incoming emails. Requires a valid license. GUI node : runs the Piler gui allowing the customers to view their emails. You may have more GUI nodes for larger installations, however in this case make sure that all GUI nodes use the same MySQL server. Doesn't require a license. The emails from customer SMTP servers are received by the SMTP gateway which relays them to one of the worker nodes based on your preferences. The GUI node runs the piler gui allowing the customers to view their emails. The SMTP gateway should act as a smarthost and forward the restored emails to the customer SMTP servers. The layout doesn\u2019t include any firewalls, however you are encouraged to use a firewall, etc. to secure the piler network. Platform requirements # Piler enterprise supports Ubuntu 22.04 LTS (Jammy) x64 and Centos 9 x64 Hardware requirements # Piler can be installed on physical hardware, virtual machine (VMware, etc), in the cloud (AWS, etc) or in a Docker container. Piler requires: 2+ GB memory 2+ (v)CPU 200+ GB disk space Note that piler stores its data in /var/piler directory, mysql keeps the piler database in /var/lib/mysql by default. Make sure you have enough disk space under these directories. See the disk sizing guide below. The used filesystem is not a concern, however note that piler stores emails as encrypted and compressed files in the filesystem, so prepare for having millions of files in the directories under /var/piler/store and /var/piler/astore . Piler also supports S3 compatible object stores, see section S3 object store for more details. Disk sizing guide # The disk size required for piler enterprise varies greatly on the usage patterns of your organization or customers. Here are a few numbers to give you a hint. Site Messages Manticore/sphinx MySQL Emails Attachments Demo site ~500,000 0.93 GB 1.4 GB 2.4 GB 0.21 GB Personal archive 76,000 0.2 GB 0.67 GB 0.64 GB 1.7 GB Another organization ~9,000,000 25 GB 23 GB 200 GB N/A The demo site has emails from mailing lists mostly and some spam, so it stores small emails, and few attachments only. If you expect such email patterns, then it\u2019s worth formatting the partition with a smaller block size in mind. The mentioned personal archive contains various size emails, more attachments. The last organization has almost 9 million messages stored 200 GB on disk (=emails + deduplicated attachments) Installing Piler (single node layout) # The hardware and platform requirements are the same as the multiple nodes layout. Prerequisites # You have a working DNS entry for each node. We use the aaa.fu domain in the example (be sure to use your own real domain names!): smtp.aaa.fu IN A 1.2.3.4 *.aaa.fu IN A 1.2.3.5 You may also have a wildcard certificate for your domain, eg. *.aaa.fu. Installing piler # curl -o noble.sh https://download.mailpiler.com/noble.sh chmod +x noble.sh Before running the installer (=noble.sh or centos9.sh for Redhat 9/Centos 9/Oracle Linux 9), be sure to revise the parameters, and fix them (especially MYSQL_ROOT_PASSWORD and MYSQL_PILER_PASSWORD) if necessary. By default the installer sets up encryption at rest for mysql data. For multitenant deployments be sure to set MULTITENANCY=1 Run the following command on your host: PILER_HOSTNAME=archive.aaa.fu ./noble.sh After the installation copy the licence for each worker node accordingly: cp piler.lic /etc/piler/piler.lic Make sure all the required services are running: The installer creates systemd services for piler, piler-smtp, pilersearch and tika. Add the worker node list to the site config: echo '$config1[\"WORKER\"] = array(\"archive.aaa.fu\");' >> /etc/piler/config-site.php Configuring the SMTP gateway is similar to the multiple node layout except you don\u2019t have an internal network. Installing Piler (multiple nodes layout) # Prerequisites # You have a working DNS entry for each node. We use the aaa.fu domain in the example (be sure to use your own domain names!): smtp.aaa.fu IN A 1.2.3.4 smtp-int.aaa.fu IN A 10.1.1.10 gui-int.aaa.fu IN A 10.1.1.11 *.aaa.fu IN A 1.2.3.5 worker0.aaa.fu IN A 10.1.1.100 worker1.aaa.fu IN A 10.1.1.101 worker.aaa.fu IN MX 10 worker0.aaa.fu. IN MX 10 worker1.aaa.fu. You may also have a wildcard certificate for your domain, eg. *.aaa.fu, see the explanation below. Be sure to have the curl package installed. Installing the worker nodes # curl -o noble.sh https://download.mailpiler.com/noble.sh chmod +x noble.sh Centos 9 users should get and use the centos9.sh script, and be sure to check out the Centos 9 specific notes section below. curl -o centos9.sh https://download.mailpiler.com/centos9.sh chmod +x centos9.sh Before running the installer (noble.sh or centos9.sh), be sure to revise the parameters, and fix them (especially MYSQL_ROOT_PASSWORD, MYSQL_PILER_PASSWORD and AUTH_CODE) if necessary. For multitenant deployments be sure to set MULTITENANCY=1 AUTH_CODE must be the same on all nodes, it acts as a password. Also MYSQL_PILER_PASSWORD should be the same on all Piler nodes. By default the installer sets up encryption at rest for mysql data. Run the following on worker0.aaa.fu: PILER_HOSTNAME=worker0.aaa.fu MULTINODES=1 MASTER_NODE=gui-int.aaa.fu ./noble.sh Run the following on worker1.aaa.fu: PILER_HOSTNAME=worker1.aaa.fu MULTINODES=1 MASTER_NODE=gui-int.aaa.fu ./noble.sh Notice that the PILER_HOSTNAME parameter is unique for each worker node. After the installation copy the license for each worker node accordingly: cp piler.lic /etc/piler/piler.lic If you want the reach the GUI node via https, then fix /etc/piler/config-site.php on the worker, and set: $config['API_PROTO'] = 'https://'; The installer adds systemd services for piler, piler-smtp, pilersearch and tika. Note that each worker node requires a dedicated mysql server, so the installer script installs mysql daemon on each worker node. Installing the GUI node # curl -o noble.sh download.mailpiler.com/noble.sh chmod +x noble.sh Before running the installer (=noble.sh), be sure to revise the parameters, and fix them (especially MYSQL_ROOT_PASSWORD, MYSQL_PILER_PASSWORD and AUTH_CODE) if necessary. AUTH_CODE must be the same as on the worker nodes. If you plan to install the smtp gateway, then set USE_SMTP_GATEWAY=1 in the installer script (by default it\u2019s not set). For multitenant deployments be sure to set MULTITENANCY=1 Run the following command: PILER_HOSTNAME=gui-int.aaa.fu MULTINODES=1 PRIMARY_MASTER=1 NODE_TYPE=MASTER ./noble.sh Add the worker node list to the site config: echo '$config1[\"WORKER\"] = array(\"worker0.aaa.fu\", \"worker1.aaa.fu\");' >> /etc/piler/config-site.php If you want the reach the worker node via https, then fix /etc/piler/config-site.php on the GUI node, and set: $config['API_PROTO'] = 'https://'; Note that the GUI node does NOT need a license file. Make sure that the worker nodes are able to access mysql server running on the GUI node! Centos 9 specific notes # On Centos 9 SELinux is enabled by default. This may interfere with the proper work of the GUI, so you need to either disable SELinux or configure it properly. Centos 9 usually installs postfix, and makes it listen on the localhost. The piler-smtp daemon listens on all interfaces by default. Be sure to edit /etc/piler/piler.conf and fix listen_addr parameter to listen on the public address of the worker node. Self signed certificate # When using a self signed certificate, be sure to add the following to /etc/piler/config-site.php: $config[\u2018ENABLE_SSL_VERIFY\u2019] = 0; Configuring the SMTP gateway # The SMTP gateway should have two instances of postfix (you may choose another MTA of your choice). Instance #1 (the outer instance) runs on the outer interface (smtp.aaa.fu), and instance #2 (the inner instance) runs on the internal interface (smtp-int.aaa.fu). Setting up the outer instance # Postfix should accept only recipients for @smtp.aaa.fu only, and reject everything else. All customer id (see section \u201cAdding customers\u201d for more on the customer id) must be present in the postfix database (/etc/postfix/customers). Make sure that smtp.aaa.fu (in this example) is not set to myhostname as well! myhostname = smtp-gw.aaa.fu smtpd_recipient_restrictions = check_recipient_access proxy:mysql:/etc/postfix/customers.cf, reject virtual_mailbox_domains = smtp.aaa.fu virtual_alias_maps = proxy:mysql:/etc/postfix/virtual.cf /etc/postfix/customers.cf: hosts = gui-int.aaa.fu user = piler password = piler123 dbname = piler query = SELECT 'OK' FROM customer_settings WHERE customer_address='%s' AND enabled=1; /etc/postfix/virtual.cf: hosts = gui-int.aaa.fu user = piler password = piler123 dbname = piler query = SELECT CONCAT(customer_id, '@', worker) FROM customer_settings WHERE customer_address='%s' AND enabled=1; The above config pulls the customers data from MySQL database. To make this work, be sure to fix the mysql configuration on the GUI node to allow access from the smtp gateway. Note that the query in virtual.cf rewrites the email address to point to the worker node you selected when creating the given customer. It also means that a received email goes to one specific worker node only. Setting up the internal instance # Postfix should simply relay emails from the GUI node to the customer SMTP server. No special configuration is needed to achieve this other than adding the GUI node address to the mynetwork section in main.cf. S3 object store # By default the piler worker node stores email files on the local filesystem under /var/piler/store, thus requiring lots of disk space. Piler is able to store files on S3 compatible object stores, eg. Amazon S3, Wasabi, Exoscale, etc. Or you can even set up your own S3 object store with 3rd party software like Minio. To enable using an S3 store, set the following in piler.conf: s3_hostname=your-s3-host.domain.com:9000 s3_region=us-east-1 s3_access_key=youraccesskey s3_secret_key=yoursecretkey s3_bucket_prefix= s3_use_subdirs=1 s3_secure=1 s3_hostname should be the S3 hostname and port. Eg. Minio uses port 9000. For Wasabi, it might be s3.us-west-1.wasabisys.com. Set s3_secure=0 if your S3 host does NOT support TLS. S3 settings for oracle cloud: s3_access_key=youraccesskey s3_bucket_prefix= s3_dir=/var/piler/s3 s3_hostname=frnsjgsfvvgl.compat.objectstorage.eu-frankfurt-1.oraclecloud.com s3_region=eu-frankfurt-1 s3_secret_key=yoursecretkey s3_secure=1 s3_threads=10 s3_use_subdirs=1 S3 settings for Cloudflare bucket using EU jurisdiction: s3_access_key=xxxxxxxxxxxxxxxxxx s3_bucket_prefix= s3_dir=/var/piler/s3 s3_hostname=zzzzzzzzzzzzzzzzz.eu.r2.cloudflarestorage.com s3_region=auto s3_secret_key=yyyyyyyyyyyyyyyyyyyyyyyyyyyyy s3_secure=1 s3_threads=10 s3_use_subdirs=1 S3 settings for Backblaze bucket using EU-central: (Note: Backblaze doesn't accept dot (.) in the bucket name!) s3_access_key=xxxxxxxxxxxxxxxxxx s3_bucket_prefix= s3_dir=/var/piler/s3 s3_hostname=s3.eu-central-003.backblazeb2.com s3_region=us-east-1 s3_secret_key=yyyyyyyyyyyyyyyyyyyyyyyyyyyyy s3_secure=1 s3_threads=10 s3_use_subdirs=1 S3 settings for Hetzner object store at fsn1 location: s3_access_key=xxxxxxxxxxxxxxxxxx s3_bucket_prefix= s3_dir=/var/piler/s3 s3_hostname=<your hetzner id>.fsn1.your-objectstorage.com s3_region=us-east-1 s3_secret_key=yyyyyyyyyyyyyyyyyyyyyyyyyyyyy s3_secure=1 s3_threads=10 s3_use_subdirs=1 Note that you should decide where to store the email files before starting archiving. Piler doesn\u2019t support a mixed mode where some emails are stored locally, and some emails on an S3 object store. When using S3 storage the piler daemon writes all files to /var/piler/store/00 directory. There\u2019s a tool to process these files, and upload them to the S3 store. Piler will upload all files for a given customer to a single bucket only. However, it\u2019s possible to spread the files among 255 subdirectories. To enable this feature, set s3_use_subdirs=1. The names of the created subdirectories will be two hexadecimal characters, eg. \u201c00\u201d, \u201c01\u201d, \u2026 \u201cff\u201d. By default s3_bucket_prefix is empty. If you need to specify one, then make sure it conforms to domain names. Notes: you must NOT use the dash (-) character, however you may use a trailing dot, eg. s3_bucket_prefix=someprefix. Before starting the S3 upload tool, make sure to you have the minio pip package: root@archivehost:/# pip list Package Version ----------- ----------- certifi 2022.6.15.1 IMAPClient 2.2.0 minio 7.1.5 mysqlclient 1.4.6 pip 22.0.2 setuptools 59.6.0 six 1.16.0 urllib3 1.26.12 wheel 0.37.1 Finally enable the piler-s3 service: cd /etc/systemd/system ln -sf /usr/libexec/piler/piler-s3.service . systemctl daemon-reload systemctl enable piler-s3 systemctl start piler-s3 Notes # The s3_spread_in_buckets variable will be obsoleted in future releases, please don't use it. S3 statistics # To allow S3 statistics you need to install the minio client: curl -o /usr/local/bin/mc https://dl.min.io/client/mc/release/linux-amd64/mc chmod +x /usr/local/bin/mc Then create a config file for minio: su - piler mkdir -p /var/piler/.mc/ Create /var/piler/.mc/config.json. In the below example we used the following parameters (be sure to use your own settings): s3_hostname=https://zzzzzzzzzzzzzzzzz.eu.r2.cloudflarestorage.com s3_access_key=aabbaabbaabb s3_secret_key=deadbeef0123456789abcdef /var/piler/.mc/config.json: {\"version\":\"10\", \"aliases\": {\"minio\": {\"url\":\"https://zzzzzzzzzzzzzzzzz.eu.r2.cloudflarestorage.com\",\"accessKey\":\"aabbaabbaabb\", \"secretKey\": \"deadbeef0123456789abcdef\", \"api\": \"S3v4\", \"path\": \"auto\"}}} Then finally add the following to piler's crontab entries: 30 * * * * /usr/libexec/piler/s3-bucket-stat.sh minio This will update the s3_bucket_stats table in the mysql piler database every hour. The result looks like the following. These details will be displayed at the tenant listing. MariaDB [piler]> select * from s3_bucket_stat; +---------+----------+---------+---------------------+ | bucket | size | objects | t | +---------+----------+---------+---------------------+ | fictive | 20481360 | 2978 | 2024-02-06 10:30:08 | +---------+----------+---------+---------------------+ 1 row in set (0.001 sec) MySQL settings # The MySQL database stores essential data, eg. metadata and other settings, so it\u2019s very important that the MySQL server operates properly on both the worker and gui nodes. Therefore you must give MySQL proper resources. A small personal archive may be fine with the following settings: innodb_buffer_pool_size=256M innodb_flush_log_at_trx_commit=1 innodb_log_buffer_size=64M innodb_log_file_size=64M innodb_read_io_threads=4 innodb_write_io_threads=4 innodb_log_files_in_group=2 innodb_file_per_table Your mileage may vary, the more data is stored in SQL, the more resources the mysql server requires. Be sure to check out the mysql documentation, too. You may use https://github.com/major/MySQLTuner-perl to fine tune the database settings for improved performance. Security considerations # Multiple nodes layout # As it\u2019s seen in Figure 1, there are two networks used. An internal network using a private address space (eg. 10.x.x.x/24) for communication between the gui node, smtp gateway and the worker nodes. The worker nodes listen on port 25, 80 (or 443) and 9312. The smtp gateway should access only port 25, while the gui node needs access to all these ports. The gui node listens on port 80 (or 443) and 3306 on the internal network. All worker node must be able to access the gui node on these ports on the internal network. The smtp gateway should access the gui node on port 3306 on the internal network. The gui node should be accessed from the Internet only on port 443. Port 80 is also possible, however it\u2019s best to offer TLS security for users. The smtp node is accessed on port 25 both on the internal and the outer network. Single node layout # As it\u2019s seen in Figure 2, there\u2019s only a single network used. The piler node should be accessed on port 80 (or 443) from the Internet (https:// protocol is preferred just as with the multiple nodes layout). Port 25 and 3306 should be accessed by the smtp gateway only. The smtp gateway is accessed on port 25 only. STARTTLS support # By default the installer creates a key and a self-signed certificate (/etc/piler/piler.pem) to support STARTTLS providing encrypted message transfer between the smtp client and the Piler smtp server. You are free to fix piler.pem to use your signed CA. SMTP ACL lists # Piler supports an smtp acl list similar to postscreen. See https://mailpiler.com/smtp-acl-list/ for more. Antivirus and antispam support # Piler expects clean emails only. Spam and other malware occupy valuable disk space and other resources on the piler host, not to mention that it might pose other problems. So you should do the heavy lifting of scanning and filtering of any spam and malware on your MX servers. However, Piler is able to use the result of any antispam application, provided that it sets a specific email header to mark spam emails. If you used SpamAssassin, then you may use the following setting in /etc/piler/piler.conf, then piler can recognize when it receives a spam: spam_header_line=X-Spam-Flag: YES If piler recognizes a spam, then you may set a policy to discard it (preventing from getting to the archive) or archive it for a shorter time, eg. 30 days or so. Note that piler supports a single spam header line, ie. you cannot specify the anti-spam headers of several anti-spam products. However, by using an SMTP it\u2019s possible to rewrite several kind of antispam headers to a unified value. See https://mailpiler.com/consolidating-several-anti-spam-message-headers-on-the-smtp-gateway/ for more.","title":"Installing piler enterprise edition"},{"location":"installation/#installing-piler-enterprise-edition","text":"This documentation applies to Piler enterprise edition 1.7.2 Revision #1 Publication date: Apr 20, 2023","title":"Installing piler enterprise edition"},{"location":"installation/#piler-architecture-overview","text":"Piler is flexible enough to support several configurations and layouts. Use one of the following layouts matching your environment.","title":"Piler architecture overview"},{"location":"installation/#single-node-layout","text":"Figure 1. Single node installation This is the simplest layout, when you have a single node running piler enterprise. It allows you to start small, and expand later as you grow. Piler receives the emails directly, and archives them. The Piler node also runs the GUI. To restore the emails it uses the smtp smarthost (smtp.aaa.fu) to deliver emails to the users\u2019 mailboxes. The layout doesn\u2019t include any firewalls, however you are encouraged to use a firewall, etc. to secure the Piler network.","title":"Single node layout"},{"location":"installation/#multiple-nodes-layout","text":"Figure 2. Multiple nodes layout A typical installation may consist of two (or more) piler nodes (worker0 and worker1 in the example), an SMTP gateway, and a GUI node. SMTP gateway : receives emails from customer SMTP servers, and acts as a smarthost forwarding the restored emails to the customer SMTP servers. Worker nodes : runs the Piler daemon, archiving incoming emails. Requires a valid license. GUI node : runs the Piler gui allowing the customers to view their emails. You may have more GUI nodes for larger installations, however in this case make sure that all GUI nodes use the same MySQL server. Doesn't require a license. The emails from customer SMTP servers are received by the SMTP gateway which relays them to one of the worker nodes based on your preferences. The GUI node runs the piler gui allowing the customers to view their emails. The SMTP gateway should act as a smarthost and forward the restored emails to the customer SMTP servers. The layout doesn\u2019t include any firewalls, however you are encouraged to use a firewall, etc. to secure the piler network.","title":"Multiple nodes layout"},{"location":"installation/#platform-requirements","text":"Piler enterprise supports Ubuntu 22.04 LTS (Jammy) x64 and Centos 9 x64","title":"Platform requirements"},{"location":"installation/#hardware-requirements","text":"Piler can be installed on physical hardware, virtual machine (VMware, etc), in the cloud (AWS, etc) or in a Docker container. Piler requires: 2+ GB memory 2+ (v)CPU 200+ GB disk space Note that piler stores its data in /var/piler directory, mysql keeps the piler database in /var/lib/mysql by default. Make sure you have enough disk space under these directories. See the disk sizing guide below. The used filesystem is not a concern, however note that piler stores emails as encrypted and compressed files in the filesystem, so prepare for having millions of files in the directories under /var/piler/store and /var/piler/astore . Piler also supports S3 compatible object stores, see section S3 object store for more details.","title":"Hardware requirements"},{"location":"installation/#disk-sizing-guide","text":"The disk size required for piler enterprise varies greatly on the usage patterns of your organization or customers. Here are a few numbers to give you a hint. Site Messages Manticore/sphinx MySQL Emails Attachments Demo site ~500,000 0.93 GB 1.4 GB 2.4 GB 0.21 GB Personal archive 76,000 0.2 GB 0.67 GB 0.64 GB 1.7 GB Another organization ~9,000,000 25 GB 23 GB 200 GB N/A The demo site has emails from mailing lists mostly and some spam, so it stores small emails, and few attachments only. If you expect such email patterns, then it\u2019s worth formatting the partition with a smaller block size in mind. The mentioned personal archive contains various size emails, more attachments. The last organization has almost 9 million messages stored 200 GB on disk (=emails + deduplicated attachments)","title":"Disk sizing guide"},{"location":"installation/#installing-piler-single-node-layout","text":"The hardware and platform requirements are the same as the multiple nodes layout.","title":"Installing Piler (single node layout)"},{"location":"installation/#prerequisites","text":"You have a working DNS entry for each node. We use the aaa.fu domain in the example (be sure to use your own real domain names!): smtp.aaa.fu IN A 1.2.3.4 *.aaa.fu IN A 1.2.3.5 You may also have a wildcard certificate for your domain, eg. *.aaa.fu.","title":"Prerequisites"},{"location":"installation/#installing-piler","text":"curl -o noble.sh https://download.mailpiler.com/noble.sh chmod +x noble.sh Before running the installer (=noble.sh or centos9.sh for Redhat 9/Centos 9/Oracle Linux 9), be sure to revise the parameters, and fix them (especially MYSQL_ROOT_PASSWORD and MYSQL_PILER_PASSWORD) if necessary. By default the installer sets up encryption at rest for mysql data. For multitenant deployments be sure to set MULTITENANCY=1 Run the following command on your host: PILER_HOSTNAME=archive.aaa.fu ./noble.sh After the installation copy the licence for each worker node accordingly: cp piler.lic /etc/piler/piler.lic Make sure all the required services are running: The installer creates systemd services for piler, piler-smtp, pilersearch and tika. Add the worker node list to the site config: echo '$config1[\"WORKER\"] = array(\"archive.aaa.fu\");' >> /etc/piler/config-site.php Configuring the SMTP gateway is similar to the multiple node layout except you don\u2019t have an internal network.","title":"Installing piler"},{"location":"installation/#installing-piler-multiple-nodes-layout","text":"","title":"Installing Piler (multiple nodes layout)"},{"location":"installation/#prerequisites_1","text":"You have a working DNS entry for each node. We use the aaa.fu domain in the example (be sure to use your own domain names!): smtp.aaa.fu IN A 1.2.3.4 smtp-int.aaa.fu IN A 10.1.1.10 gui-int.aaa.fu IN A 10.1.1.11 *.aaa.fu IN A 1.2.3.5 worker0.aaa.fu IN A 10.1.1.100 worker1.aaa.fu IN A 10.1.1.101 worker.aaa.fu IN MX 10 worker0.aaa.fu. IN MX 10 worker1.aaa.fu. You may also have a wildcard certificate for your domain, eg. *.aaa.fu, see the explanation below. Be sure to have the curl package installed.","title":"Prerequisites"},{"location":"installation/#installing-the-worker-nodes","text":"curl -o noble.sh https://download.mailpiler.com/noble.sh chmod +x noble.sh Centos 9 users should get and use the centos9.sh script, and be sure to check out the Centos 9 specific notes section below. curl -o centos9.sh https://download.mailpiler.com/centos9.sh chmod +x centos9.sh Before running the installer (noble.sh or centos9.sh), be sure to revise the parameters, and fix them (especially MYSQL_ROOT_PASSWORD, MYSQL_PILER_PASSWORD and AUTH_CODE) if necessary. For multitenant deployments be sure to set MULTITENANCY=1 AUTH_CODE must be the same on all nodes, it acts as a password. Also MYSQL_PILER_PASSWORD should be the same on all Piler nodes. By default the installer sets up encryption at rest for mysql data. Run the following on worker0.aaa.fu: PILER_HOSTNAME=worker0.aaa.fu MULTINODES=1 MASTER_NODE=gui-int.aaa.fu ./noble.sh Run the following on worker1.aaa.fu: PILER_HOSTNAME=worker1.aaa.fu MULTINODES=1 MASTER_NODE=gui-int.aaa.fu ./noble.sh Notice that the PILER_HOSTNAME parameter is unique for each worker node. After the installation copy the license for each worker node accordingly: cp piler.lic /etc/piler/piler.lic If you want the reach the GUI node via https, then fix /etc/piler/config-site.php on the worker, and set: $config['API_PROTO'] = 'https://'; The installer adds systemd services for piler, piler-smtp, pilersearch and tika. Note that each worker node requires a dedicated mysql server, so the installer script installs mysql daemon on each worker node.","title":"Installing the worker nodes"},{"location":"installation/#installing-the-gui-node","text":"curl -o noble.sh download.mailpiler.com/noble.sh chmod +x noble.sh Before running the installer (=noble.sh), be sure to revise the parameters, and fix them (especially MYSQL_ROOT_PASSWORD, MYSQL_PILER_PASSWORD and AUTH_CODE) if necessary. AUTH_CODE must be the same as on the worker nodes. If you plan to install the smtp gateway, then set USE_SMTP_GATEWAY=1 in the installer script (by default it\u2019s not set). For multitenant deployments be sure to set MULTITENANCY=1 Run the following command: PILER_HOSTNAME=gui-int.aaa.fu MULTINODES=1 PRIMARY_MASTER=1 NODE_TYPE=MASTER ./noble.sh Add the worker node list to the site config: echo '$config1[\"WORKER\"] = array(\"worker0.aaa.fu\", \"worker1.aaa.fu\");' >> /etc/piler/config-site.php If you want the reach the worker node via https, then fix /etc/piler/config-site.php on the GUI node, and set: $config['API_PROTO'] = 'https://'; Note that the GUI node does NOT need a license file. Make sure that the worker nodes are able to access mysql server running on the GUI node!","title":"Installing the GUI node"},{"location":"installation/#centos-9-specific-notes","text":"On Centos 9 SELinux is enabled by default. This may interfere with the proper work of the GUI, so you need to either disable SELinux or configure it properly. Centos 9 usually installs postfix, and makes it listen on the localhost. The piler-smtp daemon listens on all interfaces by default. Be sure to edit /etc/piler/piler.conf and fix listen_addr parameter to listen on the public address of the worker node.","title":"Centos 9 specific notes"},{"location":"installation/#self-signed-certificate","text":"When using a self signed certificate, be sure to add the following to /etc/piler/config-site.php: $config[\u2018ENABLE_SSL_VERIFY\u2019] = 0;","title":"Self signed certificate"},{"location":"installation/#configuring-the-smtp-gateway","text":"The SMTP gateway should have two instances of postfix (you may choose another MTA of your choice). Instance #1 (the outer instance) runs on the outer interface (smtp.aaa.fu), and instance #2 (the inner instance) runs on the internal interface (smtp-int.aaa.fu).","title":"Configuring the SMTP gateway"},{"location":"installation/#setting-up-the-outer-instance","text":"Postfix should accept only recipients for @smtp.aaa.fu only, and reject everything else. All customer id (see section \u201cAdding customers\u201d for more on the customer id) must be present in the postfix database (/etc/postfix/customers). Make sure that smtp.aaa.fu (in this example) is not set to myhostname as well! myhostname = smtp-gw.aaa.fu smtpd_recipient_restrictions = check_recipient_access proxy:mysql:/etc/postfix/customers.cf, reject virtual_mailbox_domains = smtp.aaa.fu virtual_alias_maps = proxy:mysql:/etc/postfix/virtual.cf /etc/postfix/customers.cf: hosts = gui-int.aaa.fu user = piler password = piler123 dbname = piler query = SELECT 'OK' FROM customer_settings WHERE customer_address='%s' AND enabled=1; /etc/postfix/virtual.cf: hosts = gui-int.aaa.fu user = piler password = piler123 dbname = piler query = SELECT CONCAT(customer_id, '@', worker) FROM customer_settings WHERE customer_address='%s' AND enabled=1; The above config pulls the customers data from MySQL database. To make this work, be sure to fix the mysql configuration on the GUI node to allow access from the smtp gateway. Note that the query in virtual.cf rewrites the email address to point to the worker node you selected when creating the given customer. It also means that a received email goes to one specific worker node only.","title":"Setting up the outer instance"},{"location":"installation/#setting-up-the-internal-instance","text":"Postfix should simply relay emails from the GUI node to the customer SMTP server. No special configuration is needed to achieve this other than adding the GUI node address to the mynetwork section in main.cf.","title":"Setting up the internal instance"},{"location":"installation/#s3-object-store","text":"By default the piler worker node stores email files on the local filesystem under /var/piler/store, thus requiring lots of disk space. Piler is able to store files on S3 compatible object stores, eg. Amazon S3, Wasabi, Exoscale, etc. Or you can even set up your own S3 object store with 3rd party software like Minio. To enable using an S3 store, set the following in piler.conf: s3_hostname=your-s3-host.domain.com:9000 s3_region=us-east-1 s3_access_key=youraccesskey s3_secret_key=yoursecretkey s3_bucket_prefix= s3_use_subdirs=1 s3_secure=1 s3_hostname should be the S3 hostname and port. Eg. Minio uses port 9000. For Wasabi, it might be s3.us-west-1.wasabisys.com. Set s3_secure=0 if your S3 host does NOT support TLS. S3 settings for oracle cloud: s3_access_key=youraccesskey s3_bucket_prefix= s3_dir=/var/piler/s3 s3_hostname=frnsjgsfvvgl.compat.objectstorage.eu-frankfurt-1.oraclecloud.com s3_region=eu-frankfurt-1 s3_secret_key=yoursecretkey s3_secure=1 s3_threads=10 s3_use_subdirs=1 S3 settings for Cloudflare bucket using EU jurisdiction: s3_access_key=xxxxxxxxxxxxxxxxxx s3_bucket_prefix= s3_dir=/var/piler/s3 s3_hostname=zzzzzzzzzzzzzzzzz.eu.r2.cloudflarestorage.com s3_region=auto s3_secret_key=yyyyyyyyyyyyyyyyyyyyyyyyyyyyy s3_secure=1 s3_threads=10 s3_use_subdirs=1 S3 settings for Backblaze bucket using EU-central: (Note: Backblaze doesn't accept dot (.) in the bucket name!) s3_access_key=xxxxxxxxxxxxxxxxxx s3_bucket_prefix= s3_dir=/var/piler/s3 s3_hostname=s3.eu-central-003.backblazeb2.com s3_region=us-east-1 s3_secret_key=yyyyyyyyyyyyyyyyyyyyyyyyyyyyy s3_secure=1 s3_threads=10 s3_use_subdirs=1 S3 settings for Hetzner object store at fsn1 location: s3_access_key=xxxxxxxxxxxxxxxxxx s3_bucket_prefix= s3_dir=/var/piler/s3 s3_hostname=<your hetzner id>.fsn1.your-objectstorage.com s3_region=us-east-1 s3_secret_key=yyyyyyyyyyyyyyyyyyyyyyyyyyyyy s3_secure=1 s3_threads=10 s3_use_subdirs=1 Note that you should decide where to store the email files before starting archiving. Piler doesn\u2019t support a mixed mode where some emails are stored locally, and some emails on an S3 object store. When using S3 storage the piler daemon writes all files to /var/piler/store/00 directory. There\u2019s a tool to process these files, and upload them to the S3 store. Piler will upload all files for a given customer to a single bucket only. However, it\u2019s possible to spread the files among 255 subdirectories. To enable this feature, set s3_use_subdirs=1. The names of the created subdirectories will be two hexadecimal characters, eg. \u201c00\u201d, \u201c01\u201d, \u2026 \u201cff\u201d. By default s3_bucket_prefix is empty. If you need to specify one, then make sure it conforms to domain names. Notes: you must NOT use the dash (-) character, however you may use a trailing dot, eg. s3_bucket_prefix=someprefix. Before starting the S3 upload tool, make sure to you have the minio pip package: root@archivehost:/# pip list Package Version ----------- ----------- certifi 2022.6.15.1 IMAPClient 2.2.0 minio 7.1.5 mysqlclient 1.4.6 pip 22.0.2 setuptools 59.6.0 six 1.16.0 urllib3 1.26.12 wheel 0.37.1 Finally enable the piler-s3 service: cd /etc/systemd/system ln -sf /usr/libexec/piler/piler-s3.service . systemctl daemon-reload systemctl enable piler-s3 systemctl start piler-s3","title":"S3 object store"},{"location":"installation/#notes","text":"The s3_spread_in_buckets variable will be obsoleted in future releases, please don't use it.","title":"Notes"},{"location":"installation/#s3-statistics","text":"To allow S3 statistics you need to install the minio client: curl -o /usr/local/bin/mc https://dl.min.io/client/mc/release/linux-amd64/mc chmod +x /usr/local/bin/mc Then create a config file for minio: su - piler mkdir -p /var/piler/.mc/ Create /var/piler/.mc/config.json. In the below example we used the following parameters (be sure to use your own settings): s3_hostname=https://zzzzzzzzzzzzzzzzz.eu.r2.cloudflarestorage.com s3_access_key=aabbaabbaabb s3_secret_key=deadbeef0123456789abcdef /var/piler/.mc/config.json: {\"version\":\"10\", \"aliases\": {\"minio\": {\"url\":\"https://zzzzzzzzzzzzzzzzz.eu.r2.cloudflarestorage.com\",\"accessKey\":\"aabbaabbaabb\", \"secretKey\": \"deadbeef0123456789abcdef\", \"api\": \"S3v4\", \"path\": \"auto\"}}} Then finally add the following to piler's crontab entries: 30 * * * * /usr/libexec/piler/s3-bucket-stat.sh minio This will update the s3_bucket_stats table in the mysql piler database every hour. The result looks like the following. These details will be displayed at the tenant listing. MariaDB [piler]> select * from s3_bucket_stat; +---------+----------+---------+---------------------+ | bucket | size | objects | t | +---------+----------+---------+---------------------+ | fictive | 20481360 | 2978 | 2024-02-06 10:30:08 | +---------+----------+---------+---------------------+ 1 row in set (0.001 sec)","title":"S3 statistics"},{"location":"installation/#mysql-settings","text":"The MySQL database stores essential data, eg. metadata and other settings, so it\u2019s very important that the MySQL server operates properly on both the worker and gui nodes. Therefore you must give MySQL proper resources. A small personal archive may be fine with the following settings: innodb_buffer_pool_size=256M innodb_flush_log_at_trx_commit=1 innodb_log_buffer_size=64M innodb_log_file_size=64M innodb_read_io_threads=4 innodb_write_io_threads=4 innodb_log_files_in_group=2 innodb_file_per_table Your mileage may vary, the more data is stored in SQL, the more resources the mysql server requires. Be sure to check out the mysql documentation, too. You may use https://github.com/major/MySQLTuner-perl to fine tune the database settings for improved performance.","title":"MySQL settings"},{"location":"installation/#security-considerations","text":"","title":"Security considerations"},{"location":"installation/#multiple-nodes-layout_1","text":"As it\u2019s seen in Figure 1, there are two networks used. An internal network using a private address space (eg. 10.x.x.x/24) for communication between the gui node, smtp gateway and the worker nodes. The worker nodes listen on port 25, 80 (or 443) and 9312. The smtp gateway should access only port 25, while the gui node needs access to all these ports. The gui node listens on port 80 (or 443) and 3306 on the internal network. All worker node must be able to access the gui node on these ports on the internal network. The smtp gateway should access the gui node on port 3306 on the internal network. The gui node should be accessed from the Internet only on port 443. Port 80 is also possible, however it\u2019s best to offer TLS security for users. The smtp node is accessed on port 25 both on the internal and the outer network.","title":"Multiple nodes layout"},{"location":"installation/#single-node-layout_1","text":"As it\u2019s seen in Figure 2, there\u2019s only a single network used. The piler node should be accessed on port 80 (or 443) from the Internet (https:// protocol is preferred just as with the multiple nodes layout). Port 25 and 3306 should be accessed by the smtp gateway only. The smtp gateway is accessed on port 25 only.","title":"Single node layout"},{"location":"installation/#starttls-support","text":"By default the installer creates a key and a self-signed certificate (/etc/piler/piler.pem) to support STARTTLS providing encrypted message transfer between the smtp client and the Piler smtp server. You are free to fix piler.pem to use your signed CA.","title":"STARTTLS support"},{"location":"installation/#smtp-acl-lists","text":"Piler supports an smtp acl list similar to postscreen. See https://mailpiler.com/smtp-acl-list/ for more.","title":"SMTP ACL lists"},{"location":"installation/#antivirus-and-antispam-support","text":"Piler expects clean emails only. Spam and other malware occupy valuable disk space and other resources on the piler host, not to mention that it might pose other problems. So you should do the heavy lifting of scanning and filtering of any spam and malware on your MX servers. However, Piler is able to use the result of any antispam application, provided that it sets a specific email header to mark spam emails. If you used SpamAssassin, then you may use the following setting in /etc/piler/piler.conf, then piler can recognize when it receives a spam: spam_header_line=X-Spam-Flag: YES If piler recognizes a spam, then you may set a policy to discard it (preventing from getting to the archive) or archive it for a shorter time, eg. 30 days or so. Note that piler supports a single spam header line, ie. you cannot specify the anti-spam headers of several anti-spam products. However, by using an SMTP it\u2019s possible to rewrite several kind of antispam headers to a unified value. See https://mailpiler.com/consolidating-several-anti-spam-message-headers-on-the-smtp-gateway/ for more.","title":"Antivirus and antispam support"},{"location":"migrate-sphinx-to-manticore/","text":"Migrating from sphinx to manticore real-time index # This documentation applies to Piler enterprise edition 1.7.2 Revision #1 Publication date: May 5, 2023 Introduction # This document describes to how migrate sphinx index data to manticore real-time index on Ubuntu Linux. Upgrade to 1.7.2+ # Follow the upgrade docs for the details Uninstall sphinxsearch # systemctl stop pilersearch rm -f /usr/bin/index* /usr/bin/searchd /usr/bin/wordbreaker Install manticore # wget https://repo.manticoresearch.com/manticore-repo.noarch.deb dpkg -i manticore-repo.noarch.deb apt-get update apt-get install -y manticore manticore-columnar-lib manticore-extra systemctl stop manticore systemctl disable manticore touch /etc/piler/MANTICORE Create the default tenant in manticore # mkdir /var/piler/manticore/piler chown piler:piler /var/piler/manticore/piler For multi-tenant installations: create the tenant dirs in manticore, eg. mkdir /var/piler/manticore/customer1 chown piler:piler /var/piler/manticore/customer1 ... Fix config-site.php # Add the following to /etc/piler/config-site.php $config['RT_INDEX'] = 1; Start pilersearch service # systemctl start pilersearch Verify the following files in /var/piler/manticore/piler # -rw------- 1 piler piler 0 May 5 12:25 main.lock -rw------- 1 piler piler 962 May 5 12:25 main.meta -rw------- 1 piler piler 68 May 5 12:25 main.ram -rw------- 1 piler piler 0 May 5 12:25 note1.lock -rw------- 1 piler piler 648 May 5 12:25 note1.meta -rw------- 1 piler piler 20 May 5 12:25 note1.ram -rw------- 1 piler piler 0 May 5 12:25 tag1.lock -rw------- 1 piler piler 647 May 5 12:25 tag1.meta -rw------- 1 piler piler 20 May 5 12:25 tag1.ram For multi-tenant installations: check files in the tenant dirs, eg. /var/piler/manticore/customer1 Fix piler.conf # Edit /etc/piler/piler.conf, and add (or set) the following: rtindex=1 Restart the piler service # systemctl restart piler Reindex emails # cd /var/piler/imap reindex -a -p For multi-tenant deployments: reindex for all tenants Remove the indexer jobs in piler's crontab # When using real-time (rt) index, there's no need to run the period indexer cron jobs. sed -i 's/.*indexer.*\\.sh/###/g' /var/spool/cron/crontabs/piler Remove sphinx data # rm -rf /var/piler/sphinx/","title":"Migrating from sphinx to manticore real-time index"},{"location":"migrate-sphinx-to-manticore/#migrating-from-sphinx-to-manticore-real-time-index","text":"This documentation applies to Piler enterprise edition 1.7.2 Revision #1 Publication date: May 5, 2023","title":"Migrating from sphinx to manticore real-time index"},{"location":"migrate-sphinx-to-manticore/#introduction","text":"This document describes to how migrate sphinx index data to manticore real-time index on Ubuntu Linux.","title":"Introduction"},{"location":"migrate-sphinx-to-manticore/#upgrade-to-172","text":"Follow the upgrade docs for the details","title":"Upgrade to 1.7.2+"},{"location":"migrate-sphinx-to-manticore/#uninstall-sphinxsearch","text":"systemctl stop pilersearch rm -f /usr/bin/index* /usr/bin/searchd /usr/bin/wordbreaker","title":"Uninstall sphinxsearch"},{"location":"migrate-sphinx-to-manticore/#install-manticore","text":"wget https://repo.manticoresearch.com/manticore-repo.noarch.deb dpkg -i manticore-repo.noarch.deb apt-get update apt-get install -y manticore manticore-columnar-lib manticore-extra systemctl stop manticore systemctl disable manticore touch /etc/piler/MANTICORE","title":"Install manticore"},{"location":"migrate-sphinx-to-manticore/#create-the-default-tenant-in-manticore","text":"mkdir /var/piler/manticore/piler chown piler:piler /var/piler/manticore/piler For multi-tenant installations: create the tenant dirs in manticore, eg. mkdir /var/piler/manticore/customer1 chown piler:piler /var/piler/manticore/customer1 ...","title":"Create the default tenant in manticore"},{"location":"migrate-sphinx-to-manticore/#fix-config-sitephp","text":"Add the following to /etc/piler/config-site.php $config['RT_INDEX'] = 1;","title":"Fix config-site.php"},{"location":"migrate-sphinx-to-manticore/#start-pilersearch-service","text":"systemctl start pilersearch","title":"Start pilersearch service"},{"location":"migrate-sphinx-to-manticore/#verify-the-following-files-in-varpilermanticorepiler","text":"-rw------- 1 piler piler 0 May 5 12:25 main.lock -rw------- 1 piler piler 962 May 5 12:25 main.meta -rw------- 1 piler piler 68 May 5 12:25 main.ram -rw------- 1 piler piler 0 May 5 12:25 note1.lock -rw------- 1 piler piler 648 May 5 12:25 note1.meta -rw------- 1 piler piler 20 May 5 12:25 note1.ram -rw------- 1 piler piler 0 May 5 12:25 tag1.lock -rw------- 1 piler piler 647 May 5 12:25 tag1.meta -rw------- 1 piler piler 20 May 5 12:25 tag1.ram For multi-tenant installations: check files in the tenant dirs, eg. /var/piler/manticore/customer1","title":"Verify the following files in /var/piler/manticore/piler"},{"location":"migrate-sphinx-to-manticore/#fix-pilerconf","text":"Edit /etc/piler/piler.conf, and add (or set) the following: rtindex=1","title":"Fix piler.conf"},{"location":"migrate-sphinx-to-manticore/#restart-the-piler-service","text":"systemctl restart piler","title":"Restart the piler service"},{"location":"migrate-sphinx-to-manticore/#reindex-emails","text":"cd /var/piler/imap reindex -a -p For multi-tenant deployments: reindex for all tenants","title":"Reindex emails"},{"location":"migrate-sphinx-to-manticore/#remove-the-indexer-jobs-in-pilers-crontab","text":"When using real-time (rt) index, there's no need to run the period indexer cron jobs. sed -i 's/.*indexer.*\\.sh/###/g' /var/spool/cron/crontabs/piler","title":"Remove the indexer jobs in piler's crontab"},{"location":"migrate-sphinx-to-manticore/#remove-sphinx-data","text":"rm -rf /var/piler/sphinx/","title":"Remove sphinx data"},{"location":"new-features-in-1.8.0/","text":"New features in 1.8.0 # This documentation applies to Piler enterprise edition 1.8.0 Revision #2 Publication date: Oct 5, 2024 Reworked the GUI using bootstrap 5.3 and vue.js 3 # Modernized the GUI using the latest bootstrap and vue.js. The new GUI is responsive, supports mobile devices, and finally we have dark mode as well. Better CSS customization # You can easily override any CSS formatting, eg. change colours, font types, etc. To do that add the following to /etc/piler/config-site.php: $config['CUSTOM_CSS'] = '<link rel=\"stylesheet\" href=\"/assets/css/my.css\">'; Then add your CSS definitions to /var/piler/www/assets/css/my.css file. You may use your own images, favicons, etc. as well. Feel free to customize the following variables, then write them to config-site.php: $config['TOAST_LOGO'] = '/assets/images/logo-round.svg'; $config['SITE_LOGO'] = '/assets/images/login-logo.svg'; $config['BRANDING_LOGO'] = '/assets/images/logo-header.svg'; $config['NOT_FOUND_404_IMAGE'] = '/assets/images/404.svg'; $config['PLACEHOLDER_IMAGE'] = '/assets/images/50x50.png'; $config['PLACEHOLDER_ZIP'] = '/assets/misc/1.zip'; $config['PLACEHOLDER_PDF'] = '/assets/misc/1.pdf'; $config['REMOTE_IMAGE_REPLACEMENT'] = '/assets/images/remote.gif'; $config['BRANDING_FAVICON'] = ' <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/assets/ico/apple-touch-icon.png\"> <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/ico/favicon-32x32.png\"> <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/ico/favicon-16x16.png\"> <link rel=\"manifest\" href=\"/assets/ico/site.webmanifest\"> <link rel=\"mask-icon\" href=\"/assets/ico/safari-pinned-tab.svg\" color=\"#5bbad5\"> <link rel=\"shortcut icon\" href=\"/assets/ico/favicon.ico\"> <meta name=\"msapplication-TileColor\" content=\"#da532c\"> <meta name=\"msapplication-config\" content=\"/assets/ico/browserconfig.xml\"> <meta name=\"theme-color\" content=\"#ffffff\"> '; $config['BRANDING_URL'] = ''; // the URL when hovering over the logo Inactivity timeouts # The GUI automatically logs the current user out after 1 hour inactivity. Also the user's session expires and thus forces a logout after 2 hours. These are both configurable variables, set the following in /etc/piler/config-site.php, and fix the values to your needs: $config['$ESSION_INACTIVITY_TIMEOUT'] = 3600; $config['SESSION_EXPIRY_TIMEOUT'] = 7200; Cloudflare Turnstile # Added support for Cloudflare Turnstile, a smart captcha alternative, with much better user experience. From their website: \"Turnstile delivers frustration-free, CAPTCHA-free web experiences to website visitors - with just a simple snippet of free code. Moreover, Turnstile stops abuse and confirms visitors are real without the data privacy concerns or awful user experience of CAPTCHAs.\" See https://www.cloudflare.com/products/turnstile/ for more. After registering a free account at Cloudflare, you may setup Turnstile. Then add the following variables to /etc/piler/config-site.php (be sure to use your values): $config['CF_TURNSTILE_SITEKEY'] = '0x4AAAAAAAXXXX-XXXXXXXX'; $config['CF_TURNSTILE_SECRET'] = '0x4AAAAAAAXXXXYYYYYYYYYYYYYYYYY'; Authentication against Keycloak # See https://mailpiler.com/keycloak-authentication/ for the details how to setup. Authentication against OKTA oidc # See https://mailpiler.com/okta-oidc-authentication/ for the details how to setup. Authentication against linkedin # Visit https://developer.linkedin.com/ and create an app. You need a company linkedin page, a logo, and preferably a link to your privacy policy. Accept the legal agreement, then click \"Create app\" On the \"Products\" page locate the \"Sign In with LinkedIn using OpenID connect\" product, then click on the \"Request access\" button. Finally on the \"Auth\" tab locate the \"Authorized redirect URLs for you app\" settings, and type https://archive.example.com/callback-linkedin (be sure to use your archive's URL). Edit /etc/piler/config-site.php, and add the following. Use your client id and secret values. $config['ENABLE_LINKEDIN'] = 1; $config['LINKEDIN_CLIENT_ID'] = 'xxxxxxxxxxxxx'; $config['LINKEDIN_CLIENT_SECRET'] = 'yyyyyyyyyyyyyy'; $config['LINKEDIN_REDIRECT_URI'] = 'https://archive.example.com/callback-linkedin'; Exporting huge number of emails from the archive # See https://mailpiler.com/exporting-emails/ for the details how to setup and use.","title":"New features in 1.8.0"},{"location":"new-features-in-1.8.0/#new-features-in-180","text":"This documentation applies to Piler enterprise edition 1.8.0 Revision #2 Publication date: Oct 5, 2024","title":"New features in 1.8.0"},{"location":"new-features-in-1.8.0/#reworked-the-gui-using-bootstrap-53-and-vuejs-3","text":"Modernized the GUI using the latest bootstrap and vue.js. The new GUI is responsive, supports mobile devices, and finally we have dark mode as well.","title":"Reworked the GUI using bootstrap 5.3 and vue.js 3"},{"location":"new-features-in-1.8.0/#better-css-customization","text":"You can easily override any CSS formatting, eg. change colours, font types, etc. To do that add the following to /etc/piler/config-site.php: $config['CUSTOM_CSS'] = '<link rel=\"stylesheet\" href=\"/assets/css/my.css\">'; Then add your CSS definitions to /var/piler/www/assets/css/my.css file. You may use your own images, favicons, etc. as well. Feel free to customize the following variables, then write them to config-site.php: $config['TOAST_LOGO'] = '/assets/images/logo-round.svg'; $config['SITE_LOGO'] = '/assets/images/login-logo.svg'; $config['BRANDING_LOGO'] = '/assets/images/logo-header.svg'; $config['NOT_FOUND_404_IMAGE'] = '/assets/images/404.svg'; $config['PLACEHOLDER_IMAGE'] = '/assets/images/50x50.png'; $config['PLACEHOLDER_ZIP'] = '/assets/misc/1.zip'; $config['PLACEHOLDER_PDF'] = '/assets/misc/1.pdf'; $config['REMOTE_IMAGE_REPLACEMENT'] = '/assets/images/remote.gif'; $config['BRANDING_FAVICON'] = ' <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/assets/ico/apple-touch-icon.png\"> <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/ico/favicon-32x32.png\"> <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/ico/favicon-16x16.png\"> <link rel=\"manifest\" href=\"/assets/ico/site.webmanifest\"> <link rel=\"mask-icon\" href=\"/assets/ico/safari-pinned-tab.svg\" color=\"#5bbad5\"> <link rel=\"shortcut icon\" href=\"/assets/ico/favicon.ico\"> <meta name=\"msapplication-TileColor\" content=\"#da532c\"> <meta name=\"msapplication-config\" content=\"/assets/ico/browserconfig.xml\"> <meta name=\"theme-color\" content=\"#ffffff\"> '; $config['BRANDING_URL'] = ''; // the URL when hovering over the logo","title":"Better CSS customization"},{"location":"new-features-in-1.8.0/#inactivity-timeouts","text":"The GUI automatically logs the current user out after 1 hour inactivity. Also the user's session expires and thus forces a logout after 2 hours. These are both configurable variables, set the following in /etc/piler/config-site.php, and fix the values to your needs: $config['$ESSION_INACTIVITY_TIMEOUT'] = 3600; $config['SESSION_EXPIRY_TIMEOUT'] = 7200;","title":"Inactivity timeouts"},{"location":"new-features-in-1.8.0/#cloudflare-turnstile","text":"Added support for Cloudflare Turnstile, a smart captcha alternative, with much better user experience. From their website: \"Turnstile delivers frustration-free, CAPTCHA-free web experiences to website visitors - with just a simple snippet of free code. Moreover, Turnstile stops abuse and confirms visitors are real without the data privacy concerns or awful user experience of CAPTCHAs.\" See https://www.cloudflare.com/products/turnstile/ for more. After registering a free account at Cloudflare, you may setup Turnstile. Then add the following variables to /etc/piler/config-site.php (be sure to use your values): $config['CF_TURNSTILE_SITEKEY'] = '0x4AAAAAAAXXXX-XXXXXXXX'; $config['CF_TURNSTILE_SECRET'] = '0x4AAAAAAAXXXXYYYYYYYYYYYYYYYYY';","title":"Cloudflare Turnstile"},{"location":"new-features-in-1.8.0/#authentication-against-keycloak","text":"See https://mailpiler.com/keycloak-authentication/ for the details how to setup.","title":"Authentication against Keycloak"},{"location":"new-features-in-1.8.0/#authentication-against-okta-oidc","text":"See https://mailpiler.com/okta-oidc-authentication/ for the details how to setup.","title":"Authentication against OKTA oidc"},{"location":"new-features-in-1.8.0/#authentication-against-linkedin","text":"Visit https://developer.linkedin.com/ and create an app. You need a company linkedin page, a logo, and preferably a link to your privacy policy. Accept the legal agreement, then click \"Create app\" On the \"Products\" page locate the \"Sign In with LinkedIn using OpenID connect\" product, then click on the \"Request access\" button. Finally on the \"Auth\" tab locate the \"Authorized redirect URLs for you app\" settings, and type https://archive.example.com/callback-linkedin (be sure to use your archive's URL). Edit /etc/piler/config-site.php, and add the following. Use your client id and secret values. $config['ENABLE_LINKEDIN'] = 1; $config['LINKEDIN_CLIENT_ID'] = 'xxxxxxxxxxxxx'; $config['LINKEDIN_CLIENT_SECRET'] = 'yyyyyyyyyyyyyy'; $config['LINKEDIN_REDIRECT_URI'] = 'https://archive.example.com/callback-linkedin';","title":"Authentication against linkedin"},{"location":"new-features-in-1.8.0/#exporting-huge-number-of-emails-from-the-archive","text":"See https://mailpiler.com/exporting-emails/ for the details how to setup and use.","title":"Exporting huge number of emails from the archive"},{"location":"new-features-in-1.8.2/","text":"New features in 1.8.2 # This documentation applies to Piler enterprise edition 1.8.2 Revision #1 Publication date: Jun 24, 2024 Improved piler-smtp performance # There are 2 new variables in /etc/piler/piler.conf. max_message_size sets the max. message size that piler-smtp accepts The default value is 50000000 bytes (~50 MB) max_smtp_memory limits the max. available memory to buffer messages. when this limit is exceeded, no new emails will be accepted until the used memory for all in progress emails decreases below this level. The default value is 500000000 bytes (~500 MB) Be sure to adjust these values to your environment! Improved displaying of large messages # If the textual part of the message to display is larger then 100 kB, then truncate the displayed content at 100kB. To override the threshold value use the following config entry in /etc/piler/config-site.php: $config['MAX_CONTENT_LENGTH_TO_DISPLAY'] = 100000; New authentication providers # SAML 2.0 support Ping identity support Redact messages # The feature allows you to replace certain words or phrases with a predefined text, eg. !REDACTEDTEXT! . See https://mailpiler.com/redact-feature/ for more. Fine grained permissions # You may grant permission for actions on messages (view, headers, journal, download/restore, export, pdf) for users in order to restrict what they can do with the messages, eg. only view and download, but not forward it, etc. See https://mailpiler.com/permission-profiles/ for more. External warning # You may show a warning to the preview window when displaying an external email. Note that it requires you to add all your company domains on the gui. Also be sure to customize the EXTERNAL_EMAIL_WARNING_TEXT variable, see the default in /var/piler/www/config.php. Set the following in /etc/piler/config-site.php to disable this warning: $config['EXTERNAL_EMAIL_WARNING_TEXT'] = '';","title":"New features in 1.8.2"},{"location":"new-features-in-1.8.2/#new-features-in-182","text":"This documentation applies to Piler enterprise edition 1.8.2 Revision #1 Publication date: Jun 24, 2024","title":"New features in 1.8.2"},{"location":"new-features-in-1.8.2/#improved-piler-smtp-performance","text":"There are 2 new variables in /etc/piler/piler.conf. max_message_size sets the max. message size that piler-smtp accepts The default value is 50000000 bytes (~50 MB) max_smtp_memory limits the max. available memory to buffer messages. when this limit is exceeded, no new emails will be accepted until the used memory for all in progress emails decreases below this level. The default value is 500000000 bytes (~500 MB) Be sure to adjust these values to your environment!","title":"Improved piler-smtp performance"},{"location":"new-features-in-1.8.2/#improved-displaying-of-large-messages","text":"If the textual part of the message to display is larger then 100 kB, then truncate the displayed content at 100kB. To override the threshold value use the following config entry in /etc/piler/config-site.php: $config['MAX_CONTENT_LENGTH_TO_DISPLAY'] = 100000;","title":"Improved displaying of large messages"},{"location":"new-features-in-1.8.2/#new-authentication-providers","text":"SAML 2.0 support Ping identity support","title":"New authentication providers"},{"location":"new-features-in-1.8.2/#redact-messages","text":"The feature allows you to replace certain words or phrases with a predefined text, eg. !REDACTEDTEXT! . See https://mailpiler.com/redact-feature/ for more.","title":"Redact messages"},{"location":"new-features-in-1.8.2/#fine-grained-permissions","text":"You may grant permission for actions on messages (view, headers, journal, download/restore, export, pdf) for users in order to restrict what they can do with the messages, eg. only view and download, but not forward it, etc. See https://mailpiler.com/permission-profiles/ for more.","title":"Fine grained permissions"},{"location":"new-features-in-1.8.2/#external-warning","text":"You may show a warning to the preview window when displaying an external email. Note that it requires you to add all your company domains on the gui. Also be sure to customize the EXTERNAL_EMAIL_WARNING_TEXT variable, see the default in /var/piler/www/config.php. Set the following in /etc/piler/config-site.php to disable this warning: $config['EXTERNAL_EMAIL_WARNING_TEXT'] = '';","title":"External warning"},{"location":"new-features-in-1.8.4/","text":"New features in 1.8.4 # This documentation applies to Piler enterprise edition 1.8.4 Revision #1 Publication date: Jan 17, 2025 Limit how many emails a user can download by selecting them # Introduced $config['MAX_DOWNLOAD_MESSAGES'] variable to limit how many emails a user can download by selecting them in the left pane. Set to 0 in /etc/piler/config-site.php to disable this feature and let the user download as many as he likes. The default value is 500. Note that the first N messages are selected based on the order the user selects them. Limit how many emails a user can export from a search query # Introduced $config['MAX_EXPORT_MESSAGES'] variable to limit how many emails a user can export from a search query. Set to 0 in /etc/piler/config-site.php to disable this feature and let the user export all emails that matches his query. The default value is 20000. Note that the first N messages are selected based on the sort order the user has set (by default in descending order by sent date). Apply IMAP flags to restored emails # You may apply IMAP flags to restored emails, eg. $config['IMAP_FLAGS'] = ['\\Seen']; PDF export shall include the message headers # PDF export adds the from, to, cc, subject, date headers Improved audit search # Note that the audit is moved to manticore real time index Added mailcow support # See https://mailpiler.com/mailcow-support/ for more. Mass download emails from Microsoft365 (formerly Office365) # See https://mailpiler.com/importing-legacy-emails-from-o365/ for more.","title":"New features in 1.8.4"},{"location":"new-features-in-1.8.4/#new-features-in-184","text":"This documentation applies to Piler enterprise edition 1.8.4 Revision #1 Publication date: Jan 17, 2025","title":"New features in 1.8.4"},{"location":"new-features-in-1.8.4/#limit-how-many-emails-a-user-can-download-by-selecting-them","text":"Introduced $config['MAX_DOWNLOAD_MESSAGES'] variable to limit how many emails a user can download by selecting them in the left pane. Set to 0 in /etc/piler/config-site.php to disable this feature and let the user download as many as he likes. The default value is 500. Note that the first N messages are selected based on the order the user selects them.","title":"Limit how many emails a user can download by selecting them"},{"location":"new-features-in-1.8.4/#limit-how-many-emails-a-user-can-export-from-a-search-query","text":"Introduced $config['MAX_EXPORT_MESSAGES'] variable to limit how many emails a user can export from a search query. Set to 0 in /etc/piler/config-site.php to disable this feature and let the user export all emails that matches his query. The default value is 20000. Note that the first N messages are selected based on the sort order the user has set (by default in descending order by sent date).","title":"Limit how many emails a user can export from a search query"},{"location":"new-features-in-1.8.4/#apply-imap-flags-to-restored-emails","text":"You may apply IMAP flags to restored emails, eg. $config['IMAP_FLAGS'] = ['\\Seen'];","title":"Apply IMAP flags to restored emails"},{"location":"new-features-in-1.8.4/#pdf-export-shall-include-the-message-headers","text":"PDF export adds the from, to, cc, subject, date headers","title":"PDF export shall include the message headers"},{"location":"new-features-in-1.8.4/#improved-audit-search","text":"Note that the audit is moved to manticore real time index","title":"Improved audit search"},{"location":"new-features-in-1.8.4/#added-mailcow-support","text":"See https://mailpiler.com/mailcow-support/ for more.","title":"Added mailcow support"},{"location":"new-features-in-1.8.4/#mass-download-emails-from-microsoft365-formerly-office365","text":"See https://mailpiler.com/importing-legacy-emails-from-o365/ for more.","title":"Mass download emails from Microsoft365 (formerly Office365)"},{"location":"performance/","text":"Performance tuning # This documentation applies to Piler enterprise edition 1.8.x Revision #1 Publication date: 2025-09-26 In the below example, we optimise for a 2 vCPU + 2 GB RAM box for high concurrency without exhausting memory Tuning nginx # /etc/nginx/nginx.conf: events { worker_connections 4096; # worker_connections * worker_processes = max simultaneous connections multi_accept on; # accept as many as possible use epoll; # (Linux only, usually auto-detected) } http { sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; keepalive_requests 10000; client_max_body_size 4M; client_body_buffer_size 128k; client_header_buffer_size 4k; large_client_header_buffers 4 16k; # Buffers for fastcgi (PHP-FPM) fastcgi_buffers 16 16k; fastcgi_buffer_size 32k; fastcgi_busy_buffers_size 64k; fastcgi_temp_file_write_size 64k; fastcgi_connect_timeout 30s; fastcgi_send_timeout 30s; fastcgi_read_timeout 30s; } Tuning PHP # /etc/php/8.3/fpm/pool.d/www.conf: ; --- Process management --- pm = dynamic pm.max_children = 40 ; hard cap on workers, prevents OOM pm.start_servers = 6 ; reasonable initial pool pm.min_spare_servers = 6 pm.max_spare_servers = 20 ; --- Recycling --- pm.max_requests = 500 ; recycle workers to avoid leaks ; --- Timeouts --- request_terminate_timeout = 30s request_slowlog_timeout = 10s slowlog = /var/log/php8.3-fpm.slow.log ; --- Logging --- catch_workers_output = yes ; --- Resource limits --- rlimit_files = 65535 rlimit_core = 0 ; --- PHP INI overrides (per pool) --- php_admin_value[memory_limit] = 256M ; cap memory per worker php_admin_value[max_execution_time] = 30 php_admin_value[post_max_size] = 4M php_admin_value[upload_max_filesize] = 4M php_admin_value[expose_php] = 0 ; PHP-FPM status page pm.status_path = /php-fpm-status ping.path = /ping ping.response = pong /etc/php/8.3/fpm/php.ini: opcache.enable=1 opcache.enable_cli=1 opcache.memory_consumption=256 ; shared memory in MB opcache.interned_strings_buffer=16 opcache.max_accelerated_files=20000 opcache.validate_timestamps=1 ; check file changes opcache.revalidate_freq=2 opcache.fast_shutdown=1 realpath_cache_size=4096k realpath_cache_ttl=600 Key points: # pm.max_children = 40 \u2192 with 2 GB RAM and ~30\u201340 MB per worker under search load, this is safe. pm.max_requests = 500 \u2192 prevents long-lived workers from fragmenting memory. Memory cap (memory_limit = 256M) \u2192 ensures no runaway scripts eat too much. rlimit_files raised \u2192 nginx + php-fpm under load can otherwise hit \"Too many open files\" error. Enable php-fpm status # /etc/piler/piler-nginx: location ~ ^/(php-fpm-status|ping)$ { fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_pass unix:/run/php/php8.3-fpm.sock; allow 127.0.0.1; deny all; } Check metrics: curl http://127.0.0.1/php-fpm-status The result is something like pool: www process manager: dynamic start time: 15/Sep/2025:12:00:00 +0000 accepted conn: 10234 listen queue: 0 max children reached: 0 active processes: 12 idle processes: 8 Key fields: listen queue > 0 \u2192 requests are waiting (too few workers). max children reached > 0 \u2192 all workers were busy (raise pm.max_children). active processes close to max_children under load \u2192 you\u2019re at capacity.","title":"Performance tuning"},{"location":"performance/#performance-tuning","text":"This documentation applies to Piler enterprise edition 1.8.x Revision #1 Publication date: 2025-09-26 In the below example, we optimise for a 2 vCPU + 2 GB RAM box for high concurrency without exhausting memory","title":"Performance tuning"},{"location":"performance/#tuning-nginx","text":"/etc/nginx/nginx.conf: events { worker_connections 4096; # worker_connections * worker_processes = max simultaneous connections multi_accept on; # accept as many as possible use epoll; # (Linux only, usually auto-detected) } http { sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; keepalive_requests 10000; client_max_body_size 4M; client_body_buffer_size 128k; client_header_buffer_size 4k; large_client_header_buffers 4 16k; # Buffers for fastcgi (PHP-FPM) fastcgi_buffers 16 16k; fastcgi_buffer_size 32k; fastcgi_busy_buffers_size 64k; fastcgi_temp_file_write_size 64k; fastcgi_connect_timeout 30s; fastcgi_send_timeout 30s; fastcgi_read_timeout 30s; }","title":"Tuning nginx"},{"location":"performance/#tuning-php","text":"/etc/php/8.3/fpm/pool.d/www.conf: ; --- Process management --- pm = dynamic pm.max_children = 40 ; hard cap on workers, prevents OOM pm.start_servers = 6 ; reasonable initial pool pm.min_spare_servers = 6 pm.max_spare_servers = 20 ; --- Recycling --- pm.max_requests = 500 ; recycle workers to avoid leaks ; --- Timeouts --- request_terminate_timeout = 30s request_slowlog_timeout = 10s slowlog = /var/log/php8.3-fpm.slow.log ; --- Logging --- catch_workers_output = yes ; --- Resource limits --- rlimit_files = 65535 rlimit_core = 0 ; --- PHP INI overrides (per pool) --- php_admin_value[memory_limit] = 256M ; cap memory per worker php_admin_value[max_execution_time] = 30 php_admin_value[post_max_size] = 4M php_admin_value[upload_max_filesize] = 4M php_admin_value[expose_php] = 0 ; PHP-FPM status page pm.status_path = /php-fpm-status ping.path = /ping ping.response = pong /etc/php/8.3/fpm/php.ini: opcache.enable=1 opcache.enable_cli=1 opcache.memory_consumption=256 ; shared memory in MB opcache.interned_strings_buffer=16 opcache.max_accelerated_files=20000 opcache.validate_timestamps=1 ; check file changes opcache.revalidate_freq=2 opcache.fast_shutdown=1 realpath_cache_size=4096k realpath_cache_ttl=600","title":"Tuning PHP"},{"location":"performance/#key-points","text":"pm.max_children = 40 \u2192 with 2 GB RAM and ~30\u201340 MB per worker under search load, this is safe. pm.max_requests = 500 \u2192 prevents long-lived workers from fragmenting memory. Memory cap (memory_limit = 256M) \u2192 ensures no runaway scripts eat too much. rlimit_files raised \u2192 nginx + php-fpm under load can otherwise hit \"Too many open files\" error.","title":"Key points:"},{"location":"performance/#enable-php-fpm-status","text":"/etc/piler/piler-nginx: location ~ ^/(php-fpm-status|ping)$ { fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_pass unix:/run/php/php8.3-fpm.sock; allow 127.0.0.1; deny all; } Check metrics: curl http://127.0.0.1/php-fpm-status The result is something like pool: www process manager: dynamic start time: 15/Sep/2025:12:00:00 +0000 accepted conn: 10234 listen queue: 0 max children reached: 0 active processes: 12 idle processes: 8 Key fields: listen queue > 0 \u2192 requests are waiting (too few workers). max children reached > 0 \u2192 all workers were busy (raise pm.max_children). active processes close to max_children under load \u2192 you\u2019re at capacity.","title":"Enable php-fpm status"},{"location":"procedural/","text":"Procedural documentation of piler enterprise edition # This documentation applies to Piler enterprise edition 1.7.2 Revision #2 Publication date: Apr 22, 2023 What\u2019s piler enterprise? # Piler enterprise is an email archiving product. This document also applies to the open source edition . Receiving emails # Piler receives emails via the smtp protocol. The piler-smtp daemon listens on port 25 by default (it\u2019s a configurable value) and accepts all emails from any remote smtp client that is able to reach port 25. You may use the smtp acl feature or appropriate firewall rules to ensure no malicious host can send emails to the archive. Note that even though the piler-smtp daemon accepts all connections on its own, it\u2019s not an open relay. It only receives emails, but doesn\u2019t send any. Piler-smtp syslogs a variable amount of data of the smtp transaction, eg. remote host IP address, date and time, envelope sender, message size and a unique ID assigned to the smtp transaction. Some typical syslog entries for an smtp transaction (the open source edition doesn\u2019t have the customer label): Apr 18 07:45:08 myarchive piler-smtp[481]: connected from 172.21.0.8:40910 on fd=7 (active connections: 2) Apr 18 07:45:08 myarchive piler-smtp[481]: received: 06L4YG5CJVVYXVK0, customer=aaa, from=sender@aaa.fu, size=29083, client=172.21.0.8, fd=7 Apr 18 07:45:08 myarchive piler-smtp[481]: disconnected from 172.21.0.8 on fd=7, reason=finished (3 active connections) Note that a more verbose logging is possible by increasing the verbosity value in piler.conf During the smtp transaction the piler-smtp daemon writes the email to a temporary file in /var/piler/tmp directory. The file name is the same as the internal id ( 06L4YG5CJVVYXVK0 in the above example). Both the directory and the file permissions allow only the user piler to have access to this file. (Note that the root user explicitly has access to the whole system). After safely writing the email to the disk the piler-smtp daemon sends back the internal ID to the smtp client with the 250 OK reply, eg. 250 OK <06L4YG5CJVVYXVK0> . If there\u2019s an error during the smtp transaction, then the piler-smtp daemon returns an appropriate error code to the smtp client and syslogs the issue thus making sure no email is lost. The piler-smtp daemon supports the STARTTLS SMTP extension to encrypt emails while transmitted over the network. Processing emails # The piler-smtp daemon drops new emails inside the piler tmp folder (/var/piler/tmp). The piler daemon reads this directory for new emails, and processes them as soon as possible. After processing a new email, its temporary file is removed from disk. Parsing the email # Piler parses the email, and extracts its metadata, eg. sender, recipients, date, size, message id, etc. as well as the attachment metadata (eg. filename, size, etc). All metadata is written to the piler mysql database. Single instance copy # Piler stores an email in a single copy only, even if it\u2019s sent to the archive several times. According to RFC 2822 \u201cevery message SHOULD have a \"Message-ID:\" field.\u201d. The Message-ID header is important for piler. Because it\u2019s a unique value for every sent email, piler uses this information to determine if the message is duplicate, ie. whether it\u2019s already stored in the archive. If that\u2019s the case, then piler discards the duplicated email and syslogs that it\u2019s a duplicate. Piler also deduplicates the attachments. To do so it extracts the attachment from the email body, and stores it separately. The email is reassembled transparently before presenting it to the user. Eg. if the employees of a company send the company logo in their signatures, then the company logo is stored only in one copy in the archive. Storing emails and attachments # To save even more disk space, piler compresses each stored file (both emails and attachments) using zlib. After compressing the files they are also encrypted using the AES-256 algorithm. The encryption key is accessible only by user piler. Without the encryption key even a privileged user is not able to retrieve the contents of the emails. Note that piler can put emails and attachments to an S3 compatible object store. When doing so only the encrypted data is sent to the S3 object store. Other than the compression and encryption no format transformation is applied, eg. a Word document is not converted to a text or PDF file. Attachments are stored in their original format. Also there\u2019s no encoding transformation, eg. a base64 encoded attachment is stored as base64 encoded. After storing the email and its attachments any temporary files are removed. In case of any internal error the temporary file piler-smtp created is saved to the error directory (/var/piler/error) for later inspection. The GUI displays the number of error emails for administrators. Piler also syslogs the result of its action. The status can be \u2018stored\u2019, \u2018discarded\u2019, \u2018duplicate\u2019 or \u2018error\u2019. The log entry for a successfully stored message: Apr 13 18:11:36 a455f3977b50 piler[836]: 1/aaa-ABFPBO56SDC73TB6: 400000005e9ab00e034d67d400832338dd28, size=29080/12352, attachments=2, reference=, message-id=<6YLOQLOLF7R07WVJE1FS64QTW1U7FF5OMM0Y67XE@myhost.aaa.fu>, retention=2557, delay=0.04, delays=0.01/0.01/0.00/0.00/0.02/0.00, status=stored Indexing emails # Piler relies on a 3rd party software ( manticore or sphinx search ) to provide a searchable archive. The parser extracts the textual information of the email including the attachments, and some information from the email headers, eg. subject, sender, recipients, date and the message id. The textual data to be indexed are written to a mysql table (sph_index). The sphinx or manticore indexer is called periodically to read the sph_index table, and updates the index files. After processing the sph_index table the indexer removes all processed rows from the table. The cleartext data stays in the sph_index table for up to 30 minutes. The index data directories have 0700 permissions to make sure only the piler user can access the index data. Note that the data in the index database are not encrypted. Starting from version 1.7.2, piler supports manticore realtime (rt) indexes as well. In that case the index data is written to the manticore daemon directly. The installer script (starting from version 1.7.2) by default enables encryption at rest for the mysql data. Rules # Exclusion rules (formely archiving rules) # Administrators may set up rules to discard specific emails based on subject, size, sender, recipient, etc. After parsing the email, piler iterates over the exclusion rules, and checks if the given message matches any of them. If so, then piler discards the email, and syslogs the event as well as the matching policy rule, eg. Apr 18 07:43:41 myarchive piler[836]: 1/aaa-S22SZU3URP71GW9T: discarding: archiving policy: *customer=fictive,domain=,from=newsletters@aaa.fu,to=,subject=,body=,size0,att.name=,att.type=,att.size0,spam=-1,days=0* Apr 18 07:43:41 myarchive piler[836]: 1/aaa-S22SZU3URP71GW9T: 400000005e9aafb70dd6464400fe5a46aa1d, size=110529/0, attachments=1, reference=, message-id=<20151120041635.1D16E68BB67DD947@aaa.fu>, retention=0, delay=0.00, delays=0.00/0.00/0.00/0.00/0.00/0.00, status=discarded Retention rules # Piler assigns a retention value to each archived message when the message is being stored. The retention timestamp is stored in the metadata table. The default value is set in the default_retention_days parameter in piler.conf. However this value can be overridden by using the retention rules. It\u2019s important to know that if you changed the retention value either in the piler config file or in the retention rules it wouldn\u2019t affect the retention values of the already stored messages. The new retention values would apply to new messages only. The calculated retention value (in days) is also syslogged. Administrators should follow both company and industry standards when setting the retention policy for the archive. Data integrity # Besides the AES-256 encryption the file and directory permissions ensure that only the user piler can access the stored emails and attachments. Also while storing the emails and files an SHA256 hash value is computed and stored for the given message and its attachments. When the email is retrieved from the archive its SHA256 hash value is computed then compared against the stored hash value in the mysql database. If they don\u2019t match, then the fact that the retrieved message is not the same that was stored is displayed to the end user. Piler stores various timestamps in the metadata table, eg. when the message was sent, when it arrived and was archived, as well as the retention time. Note that piler enterprise doesn\u2019t allow any user including the administrators to alter any archived message. Purging emails # Piler retains messages until their retention value expires. Piler runs a daily task to get rid of aged or otherwise unwanted emails (see the GDPR related notes below). The purge tool queries the metadata table to find out what emails to remove from the archive based on their retention timestamp. Then it physically removes them from the system, and updates the \u2018deleted\u2019 column in the metadata. The \u2018deleted\u2019 column instructs sphinx search to exclude the deleted emails from any search results. When using realtime index, then the email is deleted from manticore's own database. Note that if the attachment in the email to be removed is present in other emails, too, then the given attachment is not removed to ensure the integrity of the remaining emails. Also there might be cases when you want to preserve someone\u2019s all emails even if some of their emails\u2019 retention is expired. To do so administrators may add those email addresses to the legal hold table on the GUI, and the purging tool will exclude such emails no matter if the user\u2019s emails are expired or not. Authentication # The GUI allows access to emails only after authentication. The archive administrator may set up several authentication methods, eg. local database, LDAP, Active Directory, Azure AD, Single Sign-On (SSO), etc. Two factor authentication is also supported to enhance security. In that case the recovery codes are stored in the piler mysql database. All login attempts are syslogged. Bellow is a successful login against an LDAP database: Apr 18 10:31:50 myarchive piler-webui[432]: ldap query: base dn='ou=usersF,dc=nodomain', filter='(&(objectClass=inetOrgPerson)(mail=jim@fictive.com))', attr='', 1 hits Apr 18 10:31:50 myarchive piler-webui[432]: ldap auth against 'ldap.fictive.com', dn: 'cn=Jim Jones,ou=usersF,dc=nodomain', result: 1 Apr 18 10:31:50 myarchive piler-webui[432]: ldap query: base dn='ou=usersF,dc=nodomain', filter='(|(&(objectClass=inetOrgPerson)(mail=jim@fictive.com))(&(objectClass=posixGroup)(memberuid=jim@fictive.com))(&(objectClass=posixGroup)(memberuid=cn=Jim Jones,ou=usersF,dc=nodomain)))', attr='', 2 hits Apr 18 10:31:50 myarchive piler-webui[432]: ldap auth result against ldap.fictive.com / generic_ldap: 1 Apr 18 10:31:50 myarchive piler-webui[432]: username=jim@fictive.com, customer=fictive, event='logged in', ip=172.20.0.1 This is a failed login attempt: Apr 18 10:38:07 myarchive piler-webui[431]: ldap query: base dn='ou=usersF,dc=nodomain', filter='(&(objectClass=inetOrgPerson)(mail=jim@fictive.com))', attr='', 1 hits Apr 18 10:38:07 myarchive piler-webui[431]: ldap auth against 'ldap.fictive.com', dn: 'cn=Jim Jones,ou=usersF,dc=nodomain', result: 0 Apr 18 10:38:07 myarchive piler-webui[431]: ldap auth result against ldap.fictive.com / generic_ldap: 0 Apr 18 10:38:09 myarchive piler-webui[431]: username=jim@fictive.com, customer=fictive, event='login failed', ip=172.20.0.1 The GUI supports CAPTCHA to slow down a brute force login attack. Also single sign-on (SSO) is supported for passwordless access. Accessing the emails # Piler provides a web based GUI to users accessing their emails. The search engine provides the search results in seconds, provided it\u2019s allocated enough resources to serve requests. To ensure maximum security administrators should set up TLS for the virtual host serving the archive. They may also apply other restrictions to the GUI, eg. limit the access to a range of IP-addresses only. The GUI has a built-in access control to prevent a regular user from accessing others' messages. Auditors can see every archived email within the same organization. If such a user is not needed, then remove this user. From version 1.4.9 there\u2019s no default auditor user that was created at the installation of the archive. Note that administrators may create groups in the piler GUI. The groups can be used to grant access to emails belonging to other email addresses. A typical usage of groups is to provide access to emails sent to a mailing list or distribution list address. Users may perform arbitrary search queries, however a filter is applied to the search query automatically by the GUI to limit access to their own emails only. This filter is compiled from the given user\u2019s email addresses. All search queries are logged to syslog, eg. Apr 18 10:51:42 myarchive piler-webui[433]: sphinx query: 'SELECT id FROM fictive_main1,fictive_dailydelta1,fictive_delta1 WHERE MATCH(' (@from jimXfictiveXcom | @to jimXfictiveXcom) ') ORDER BY `sent` DESC LIMIT 0,20 OPTION max_matches=1000' in 0.00 s, 15 hits, 15 total found Additional notes on the GUI # A user may assign tags and notes to his own emails. These metadata are stored in the mysql database, and also indexed and then can be searched. Each user can search and see his own tags and notes only. Users can save search queries. The saved queries are stored in mysql database and in memcached if memcached support is enabled. The administrator account (eg. admin@local) is used only to administer piler. It's not a super powerful account to see anyone's emails that's why an admin user can't see the search menu at all. The administrator role may see system statistics, accounting summary, edit user / group settings, policies, see audit logs, etc. Users are able to restore their own emails to their own mailboxes. To do so the GUI restores the selected emails by sending them to the smarthost. Currently this traffic is not encrypted, however administrators may deploy a local smtp relay on the localhost, then use 127.0.0.1 as the smarthost, so the restored email won\u2019t leave the archive host in cleartext, provided that the smarthost is configured to send using encryption. Users may download their emails in a zip or eml file. These files are created in /var/piler/www/tmp directory during the process, and removed immediately after sent to the user for download. These zip and eml files are not encrypted. Auditing # The GUI keeps track of what users do and when they do. Every user's action involves an audit record that the GUI stores in the audit mysql table creating an audit trail of every user activity, eg. searching for some messages, viewing a message, downloading another one, etc. Also the GUI records when a user logs in or logs out. The following information is logged: timestamp username (email) action (eg. view, search, download) IP-address message serial number \u2013 if there\u2019s any optional description Administrators and auditors are able to search within the audit logs, and even export the audit trail as a CSV file. Auditing is enabled by default, however administrators may turn it off if it\u2019s not necessary. GDPR related notes # Piler can be configured by setting ENABLE_DELETE flag in the config-site.php file to allow auditors to remove certain emails from the archive, eg. when a user receives an email with sensitive personal data. If the Data Officer feature is also enabled, then auditors may only mark messages for removal, and the data officer must either to accept the removal request, and delete the given message or to reject the removal request. An auditor must provide a short explanation, a reason why he wants the given message to be removed. Also the data officer must provide the rejection reason if he rejects the removal. Both actions are logged to the mysql database table called \u201cdeleted\u201d. Note that the data officer has permissions to see any email marked for removal before he removes the message to ensure it\u2019s a valid request. If the message is removed in the GUI, then it gets grayed out and visually displays the fact. However, the message is still in the archive. Only the purge utility removes the stored message and its attachments physically from the disk. See the notes for purging emails above for more. Disaster recovery # It\u2019s the archive administrators' liability to perform regular backups of the archived data in a safe manner following the regulations of both the company and the relevant industry. The legal framework # The legal basis for mail archiving varies from country to country and from industry to industry. Please consult with your attorney if you are subject to a mandatory email archiving. You may find some laws, acts and regulations below demanding for an audit-proof email archive. Commercial Code (HGB) \u00a7\u00a7238, 239, 257 Tax Code (AO) \u00a7147 Principles for data access and the verifiability of digital documents (GDPdU) Principles of proper DV-based memory accounting (GoBS) Sales tax law (UStG) Federal and state data protection laws (BDSG, LDSG) Signature Act \u00a715 Law on control and transparency in the company (KonTraG) Sarbanes-Oxley Act (SOX) Federal Rules of Civil Procedure (FRCP) Basel II directive","title":"Procedural documentation of piler enterprise edition"},{"location":"procedural/#procedural-documentation-of-piler-enterprise-edition","text":"This documentation applies to Piler enterprise edition 1.7.2 Revision #2 Publication date: Apr 22, 2023","title":"Procedural documentation of piler enterprise edition"},{"location":"procedural/#whats-piler-enterprise","text":"Piler enterprise is an email archiving product. This document also applies to the open source edition .","title":"What\u2019s piler enterprise?"},{"location":"procedural/#receiving-emails","text":"Piler receives emails via the smtp protocol. The piler-smtp daemon listens on port 25 by default (it\u2019s a configurable value) and accepts all emails from any remote smtp client that is able to reach port 25. You may use the smtp acl feature or appropriate firewall rules to ensure no malicious host can send emails to the archive. Note that even though the piler-smtp daemon accepts all connections on its own, it\u2019s not an open relay. It only receives emails, but doesn\u2019t send any. Piler-smtp syslogs a variable amount of data of the smtp transaction, eg. remote host IP address, date and time, envelope sender, message size and a unique ID assigned to the smtp transaction. Some typical syslog entries for an smtp transaction (the open source edition doesn\u2019t have the customer label): Apr 18 07:45:08 myarchive piler-smtp[481]: connected from 172.21.0.8:40910 on fd=7 (active connections: 2) Apr 18 07:45:08 myarchive piler-smtp[481]: received: 06L4YG5CJVVYXVK0, customer=aaa, from=sender@aaa.fu, size=29083, client=172.21.0.8, fd=7 Apr 18 07:45:08 myarchive piler-smtp[481]: disconnected from 172.21.0.8 on fd=7, reason=finished (3 active connections) Note that a more verbose logging is possible by increasing the verbosity value in piler.conf During the smtp transaction the piler-smtp daemon writes the email to a temporary file in /var/piler/tmp directory. The file name is the same as the internal id ( 06L4YG5CJVVYXVK0 in the above example). Both the directory and the file permissions allow only the user piler to have access to this file. (Note that the root user explicitly has access to the whole system). After safely writing the email to the disk the piler-smtp daemon sends back the internal ID to the smtp client with the 250 OK reply, eg. 250 OK <06L4YG5CJVVYXVK0> . If there\u2019s an error during the smtp transaction, then the piler-smtp daemon returns an appropriate error code to the smtp client and syslogs the issue thus making sure no email is lost. The piler-smtp daemon supports the STARTTLS SMTP extension to encrypt emails while transmitted over the network.","title":"Receiving emails"},{"location":"procedural/#processing-emails","text":"The piler-smtp daemon drops new emails inside the piler tmp folder (/var/piler/tmp). The piler daemon reads this directory for new emails, and processes them as soon as possible. After processing a new email, its temporary file is removed from disk.","title":"Processing emails"},{"location":"procedural/#parsing-the-email","text":"Piler parses the email, and extracts its metadata, eg. sender, recipients, date, size, message id, etc. as well as the attachment metadata (eg. filename, size, etc). All metadata is written to the piler mysql database.","title":"Parsing the email"},{"location":"procedural/#single-instance-copy","text":"Piler stores an email in a single copy only, even if it\u2019s sent to the archive several times. According to RFC 2822 \u201cevery message SHOULD have a \"Message-ID:\" field.\u201d. The Message-ID header is important for piler. Because it\u2019s a unique value for every sent email, piler uses this information to determine if the message is duplicate, ie. whether it\u2019s already stored in the archive. If that\u2019s the case, then piler discards the duplicated email and syslogs that it\u2019s a duplicate. Piler also deduplicates the attachments. To do so it extracts the attachment from the email body, and stores it separately. The email is reassembled transparently before presenting it to the user. Eg. if the employees of a company send the company logo in their signatures, then the company logo is stored only in one copy in the archive.","title":"Single instance copy"},{"location":"procedural/#storing-emails-and-attachments","text":"To save even more disk space, piler compresses each stored file (both emails and attachments) using zlib. After compressing the files they are also encrypted using the AES-256 algorithm. The encryption key is accessible only by user piler. Without the encryption key even a privileged user is not able to retrieve the contents of the emails. Note that piler can put emails and attachments to an S3 compatible object store. When doing so only the encrypted data is sent to the S3 object store. Other than the compression and encryption no format transformation is applied, eg. a Word document is not converted to a text or PDF file. Attachments are stored in their original format. Also there\u2019s no encoding transformation, eg. a base64 encoded attachment is stored as base64 encoded. After storing the email and its attachments any temporary files are removed. In case of any internal error the temporary file piler-smtp created is saved to the error directory (/var/piler/error) for later inspection. The GUI displays the number of error emails for administrators. Piler also syslogs the result of its action. The status can be \u2018stored\u2019, \u2018discarded\u2019, \u2018duplicate\u2019 or \u2018error\u2019. The log entry for a successfully stored message: Apr 13 18:11:36 a455f3977b50 piler[836]: 1/aaa-ABFPBO56SDC73TB6: 400000005e9ab00e034d67d400832338dd28, size=29080/12352, attachments=2, reference=, message-id=<6YLOQLOLF7R07WVJE1FS64QTW1U7FF5OMM0Y67XE@myhost.aaa.fu>, retention=2557, delay=0.04, delays=0.01/0.01/0.00/0.00/0.02/0.00, status=stored","title":"Storing emails and attachments"},{"location":"procedural/#indexing-emails","text":"Piler relies on a 3rd party software ( manticore or sphinx search ) to provide a searchable archive. The parser extracts the textual information of the email including the attachments, and some information from the email headers, eg. subject, sender, recipients, date and the message id. The textual data to be indexed are written to a mysql table (sph_index). The sphinx or manticore indexer is called periodically to read the sph_index table, and updates the index files. After processing the sph_index table the indexer removes all processed rows from the table. The cleartext data stays in the sph_index table for up to 30 minutes. The index data directories have 0700 permissions to make sure only the piler user can access the index data. Note that the data in the index database are not encrypted. Starting from version 1.7.2, piler supports manticore realtime (rt) indexes as well. In that case the index data is written to the manticore daemon directly. The installer script (starting from version 1.7.2) by default enables encryption at rest for the mysql data.","title":"Indexing emails"},{"location":"procedural/#rules","text":"","title":"Rules"},{"location":"procedural/#exclusion-rules-formely-archiving-rules","text":"Administrators may set up rules to discard specific emails based on subject, size, sender, recipient, etc. After parsing the email, piler iterates over the exclusion rules, and checks if the given message matches any of them. If so, then piler discards the email, and syslogs the event as well as the matching policy rule, eg. Apr 18 07:43:41 myarchive piler[836]: 1/aaa-S22SZU3URP71GW9T: discarding: archiving policy: *customer=fictive,domain=,from=newsletters@aaa.fu,to=,subject=,body=,size0,att.name=,att.type=,att.size0,spam=-1,days=0* Apr 18 07:43:41 myarchive piler[836]: 1/aaa-S22SZU3URP71GW9T: 400000005e9aafb70dd6464400fe5a46aa1d, size=110529/0, attachments=1, reference=, message-id=<20151120041635.1D16E68BB67DD947@aaa.fu>, retention=0, delay=0.00, delays=0.00/0.00/0.00/0.00/0.00/0.00, status=discarded","title":"Exclusion rules (formely archiving rules)"},{"location":"procedural/#retention-rules","text":"Piler assigns a retention value to each archived message when the message is being stored. The retention timestamp is stored in the metadata table. The default value is set in the default_retention_days parameter in piler.conf. However this value can be overridden by using the retention rules. It\u2019s important to know that if you changed the retention value either in the piler config file or in the retention rules it wouldn\u2019t affect the retention values of the already stored messages. The new retention values would apply to new messages only. The calculated retention value (in days) is also syslogged. Administrators should follow both company and industry standards when setting the retention policy for the archive.","title":"Retention rules"},{"location":"procedural/#data-integrity","text":"Besides the AES-256 encryption the file and directory permissions ensure that only the user piler can access the stored emails and attachments. Also while storing the emails and files an SHA256 hash value is computed and stored for the given message and its attachments. When the email is retrieved from the archive its SHA256 hash value is computed then compared against the stored hash value in the mysql database. If they don\u2019t match, then the fact that the retrieved message is not the same that was stored is displayed to the end user. Piler stores various timestamps in the metadata table, eg. when the message was sent, when it arrived and was archived, as well as the retention time. Note that piler enterprise doesn\u2019t allow any user including the administrators to alter any archived message.","title":"Data integrity"},{"location":"procedural/#purging-emails","text":"Piler retains messages until their retention value expires. Piler runs a daily task to get rid of aged or otherwise unwanted emails (see the GDPR related notes below). The purge tool queries the metadata table to find out what emails to remove from the archive based on their retention timestamp. Then it physically removes them from the system, and updates the \u2018deleted\u2019 column in the metadata. The \u2018deleted\u2019 column instructs sphinx search to exclude the deleted emails from any search results. When using realtime index, then the email is deleted from manticore's own database. Note that if the attachment in the email to be removed is present in other emails, too, then the given attachment is not removed to ensure the integrity of the remaining emails. Also there might be cases when you want to preserve someone\u2019s all emails even if some of their emails\u2019 retention is expired. To do so administrators may add those email addresses to the legal hold table on the GUI, and the purging tool will exclude such emails no matter if the user\u2019s emails are expired or not.","title":"Purging emails"},{"location":"procedural/#authentication","text":"The GUI allows access to emails only after authentication. The archive administrator may set up several authentication methods, eg. local database, LDAP, Active Directory, Azure AD, Single Sign-On (SSO), etc. Two factor authentication is also supported to enhance security. In that case the recovery codes are stored in the piler mysql database. All login attempts are syslogged. Bellow is a successful login against an LDAP database: Apr 18 10:31:50 myarchive piler-webui[432]: ldap query: base dn='ou=usersF,dc=nodomain', filter='(&(objectClass=inetOrgPerson)(mail=jim@fictive.com))', attr='', 1 hits Apr 18 10:31:50 myarchive piler-webui[432]: ldap auth against 'ldap.fictive.com', dn: 'cn=Jim Jones,ou=usersF,dc=nodomain', result: 1 Apr 18 10:31:50 myarchive piler-webui[432]: ldap query: base dn='ou=usersF,dc=nodomain', filter='(|(&(objectClass=inetOrgPerson)(mail=jim@fictive.com))(&(objectClass=posixGroup)(memberuid=jim@fictive.com))(&(objectClass=posixGroup)(memberuid=cn=Jim Jones,ou=usersF,dc=nodomain)))', attr='', 2 hits Apr 18 10:31:50 myarchive piler-webui[432]: ldap auth result against ldap.fictive.com / generic_ldap: 1 Apr 18 10:31:50 myarchive piler-webui[432]: username=jim@fictive.com, customer=fictive, event='logged in', ip=172.20.0.1 This is a failed login attempt: Apr 18 10:38:07 myarchive piler-webui[431]: ldap query: base dn='ou=usersF,dc=nodomain', filter='(&(objectClass=inetOrgPerson)(mail=jim@fictive.com))', attr='', 1 hits Apr 18 10:38:07 myarchive piler-webui[431]: ldap auth against 'ldap.fictive.com', dn: 'cn=Jim Jones,ou=usersF,dc=nodomain', result: 0 Apr 18 10:38:07 myarchive piler-webui[431]: ldap auth result against ldap.fictive.com / generic_ldap: 0 Apr 18 10:38:09 myarchive piler-webui[431]: username=jim@fictive.com, customer=fictive, event='login failed', ip=172.20.0.1 The GUI supports CAPTCHA to slow down a brute force login attack. Also single sign-on (SSO) is supported for passwordless access.","title":"Authentication"},{"location":"procedural/#accessing-the-emails","text":"Piler provides a web based GUI to users accessing their emails. The search engine provides the search results in seconds, provided it\u2019s allocated enough resources to serve requests. To ensure maximum security administrators should set up TLS for the virtual host serving the archive. They may also apply other restrictions to the GUI, eg. limit the access to a range of IP-addresses only. The GUI has a built-in access control to prevent a regular user from accessing others' messages. Auditors can see every archived email within the same organization. If such a user is not needed, then remove this user. From version 1.4.9 there\u2019s no default auditor user that was created at the installation of the archive. Note that administrators may create groups in the piler GUI. The groups can be used to grant access to emails belonging to other email addresses. A typical usage of groups is to provide access to emails sent to a mailing list or distribution list address. Users may perform arbitrary search queries, however a filter is applied to the search query automatically by the GUI to limit access to their own emails only. This filter is compiled from the given user\u2019s email addresses. All search queries are logged to syslog, eg. Apr 18 10:51:42 myarchive piler-webui[433]: sphinx query: 'SELECT id FROM fictive_main1,fictive_dailydelta1,fictive_delta1 WHERE MATCH(' (@from jimXfictiveXcom | @to jimXfictiveXcom) ') ORDER BY `sent` DESC LIMIT 0,20 OPTION max_matches=1000' in 0.00 s, 15 hits, 15 total found","title":"Accessing the emails"},{"location":"procedural/#additional-notes-on-the-gui","text":"A user may assign tags and notes to his own emails. These metadata are stored in the mysql database, and also indexed and then can be searched. Each user can search and see his own tags and notes only. Users can save search queries. The saved queries are stored in mysql database and in memcached if memcached support is enabled. The administrator account (eg. admin@local) is used only to administer piler. It's not a super powerful account to see anyone's emails that's why an admin user can't see the search menu at all. The administrator role may see system statistics, accounting summary, edit user / group settings, policies, see audit logs, etc. Users are able to restore their own emails to their own mailboxes. To do so the GUI restores the selected emails by sending them to the smarthost. Currently this traffic is not encrypted, however administrators may deploy a local smtp relay on the localhost, then use 127.0.0.1 as the smarthost, so the restored email won\u2019t leave the archive host in cleartext, provided that the smarthost is configured to send using encryption. Users may download their emails in a zip or eml file. These files are created in /var/piler/www/tmp directory during the process, and removed immediately after sent to the user for download. These zip and eml files are not encrypted.","title":"Additional notes on the GUI"},{"location":"procedural/#auditing","text":"The GUI keeps track of what users do and when they do. Every user's action involves an audit record that the GUI stores in the audit mysql table creating an audit trail of every user activity, eg. searching for some messages, viewing a message, downloading another one, etc. Also the GUI records when a user logs in or logs out. The following information is logged: timestamp username (email) action (eg. view, search, download) IP-address message serial number \u2013 if there\u2019s any optional description Administrators and auditors are able to search within the audit logs, and even export the audit trail as a CSV file. Auditing is enabled by default, however administrators may turn it off if it\u2019s not necessary.","title":"Auditing"},{"location":"procedural/#gdpr-related-notes","text":"Piler can be configured by setting ENABLE_DELETE flag in the config-site.php file to allow auditors to remove certain emails from the archive, eg. when a user receives an email with sensitive personal data. If the Data Officer feature is also enabled, then auditors may only mark messages for removal, and the data officer must either to accept the removal request, and delete the given message or to reject the removal request. An auditor must provide a short explanation, a reason why he wants the given message to be removed. Also the data officer must provide the rejection reason if he rejects the removal. Both actions are logged to the mysql database table called \u201cdeleted\u201d. Note that the data officer has permissions to see any email marked for removal before he removes the message to ensure it\u2019s a valid request. If the message is removed in the GUI, then it gets grayed out and visually displays the fact. However, the message is still in the archive. Only the purge utility removes the stored message and its attachments physically from the disk. See the notes for purging emails above for more.","title":"GDPR related notes"},{"location":"procedural/#disaster-recovery","text":"It\u2019s the archive administrators' liability to perform regular backups of the archived data in a safe manner following the regulations of both the company and the relevant industry.","title":"Disaster recovery"},{"location":"procedural/#the-legal-framework","text":"The legal basis for mail archiving varies from country to country and from industry to industry. Please consult with your attorney if you are subject to a mandatory email archiving. You may find some laws, acts and regulations below demanding for an audit-proof email archive. Commercial Code (HGB) \u00a7\u00a7238, 239, 257 Tax Code (AO) \u00a7147 Principles for data access and the verifiability of digital documents (GDPdU) Principles of proper DV-based memory accounting (GoBS) Sales tax law (UStG) Federal and state data protection laws (BDSG, LDSG) Signature Act \u00a715 Law on control and transparency in the company (KonTraG) Sarbanes-Oxley Act (SOX) Federal Rules of Civil Procedure (FRCP) Basel II directive","title":"The legal framework"},{"location":"restapi/","text":"Using the REST API # This documentation applies to Piler enterprise edition 1.7.2 Revision #1 Publication date: Apr 20, 2023 Introduction # The REST API allows you to automate the most frequent operations for piler enterprise. You need to set the authentication header, in this tutorial we\u2019ll use the default admin account. The hostname will be archive.aaa.fu. Note that customer admins may also use the REST API to affect their organization. $ user='admin@local:pilerrocks' Domains # Get the domain list # curl -u \"$user\" archive.aaa.fu/api/v1/get_domains [{\"domain\":\"aaa.fu\",\"mapped\":\"aaa.fu\",\"ldap\":\"company A\"}, {\"domain\":\"acts.hu\",\"mapped\":\"fictive.com\",\"ldap\":\"company F\"}, {\"domain\":\"bbb.fu\",\"mapped\":\"bbb.fu\",\"ldap\":\"\"}, {\"domain\":\"fictive.com\",\"mapped\":\"fictive.com\",\"ldap\":\"company F\"}, {\"domain\":\"fictive.net\",\"mapped\":\"fictive.com\",\"ldap\":\"company F\"}, {\"domain\":\"fictive.org\",\"mapped\":\"fictive.com\",\"ldap\":\"company F\"}, {\"domain\":\"local\",\"mapped\":\"local\",\"ldap\":\"\"},{\"domain\":\"no.domain\",\"mapped\":\"bbb.fu\",\"ldap\":\"\"}] Add a domain # curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/add_domain data.json: [ {\"domain\":\"qqq.fu\",\"mapped\":\"qqq.fu\",\"ldap_id\":\"0\"}, {\"domain\":\"qqq.com\",\"mapped\":\"qqq.fu\",\"ldap_id\":\"0\"} ] Delete a domain # curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/delete_domain data.json: [ {\"domain\":\"qqq.fu\"}, {\"domain\":\"qqq.com\"} ] Customers # Get the customer id list # curl -u \"$user\" archive.aaa.fu/api/v1/get_customers [\"bbb\",\"fictive\",\"aaa\"] Get the customer settings # curl -u \"$user\" archive.aaa.fu/api/v1/get_customer_list [{\"id\":\"2\",\"customer_id\":\"aaa\",\"customer_address\":\"aaa@aaa.fu\",\"gui_url\":\"aaa1.acts.hu\",\"domain\":\"aaa.fu\",\"worker\":\"cust1.acts.hu\",\"quota\":\"100\",\"used\":\"0\",\"retention_days\":\"2557\",\"branding_url\":null,\"branding_logo\":null,\"support_link\":null,\"background_colour\":null,\"text_colour\":null,\"enable_purge\":\"0\",\"enabled\":\"1\",\"created\":\"1496555400\",\"status\":\"OK\"},{\"id\":\"3\",\"customer_id\":\"bbb\",\"customer_address\":\"bbb@aaa.fu\",\"gui_url\":\"bbb1.acts.hu\",\"domain\":\"bbb.fu\",\"worker\":\"cust1.acts.hu\",\"quota\":\"1\",\"used\":\"0\",\"retention_days\":\"730\",\"branding_url\":null,\"branding_logo\":null,\"support_link\":null,\"background_colour\":null,\"text_colour\":null,\"enable_purge\":\"1\",\"enabled\":\"1\",\"created\":\"1495555400\",\"status\":\"OK\"},{\"id\":\"1\",\"customer_id\":\"fictive\",\"customer_address\":\"fictive@aaa.fu\",\"gui_url\":\"cust1.acts.hu\",\"domain\":\"fictive.com\",\"worker\":\"cust1.acts.hu\",\"quota\":\"0\",\"used\":\"0\",\"retention_days\":\"30\",\"branding_url\":null,\"branding_logo\":null,\"support_link\":null,\"background_colour\":null,\"text_colour\":null,\"enable_purge\":\"1\",\"enabled\":\"1\",\"created\":\"1497291760\",\"status\":\"OK\"}] Get the customer settings for customer id=1 # curl -u \"$user\" archive.aaa.fu/api/v1/get_customer_list/id/1 {\"id\":\"1\",\"customer_id\":\"fictive\",\"customer_address\":\"fictive@aaa.fu\",\"gui_url\":\"cust1.acts.hu\",\"domain\":\"fictive.com\",\"worker\":\"cust1.acts.hu\",\"quota\":\"0\",\"used\":\"0\",\"retention_days\":\"30\",\"branding_url\":null,\"branding_logo\":null,\"support_link\":null,\"background_colour\":null,\"text_colour\":null,\"enable_purge\":\"1\",\"enabled\":\"1\",\"created\":\"1497291760\"} Add a customer # curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/add_customer data.json: [{ \"customer_id\": \"qqq\", \"customer_address\": \"qqq@aaa.fu\", \"worker\": \"cust1.aaa.fu\", \"quota\": 20, \"retention_days\": 45, \"gui_url\": \"qqq.aaa.fu\", \"domain\": \"qqq.fu\", \"admin_password\": \"$6$rounds=5000$7Sm7typK$UEjSSkYPNsPpv81Tv71NGAWCaSFprJz4b5YGFmRO640r9S8HohZlgYmjj5Qb7J08PQ4BzNFjKBqtLPv96Oxz90\", \"branding_url\": \"\", \"support_link\": \"\", \"enable_purge\": 1 }] Update customer settings # curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/update_customer [{ \"customer_id\": \"qqq\", \"customer_address\": \"qqq525@aaa.fu\", \"worker\": \"cust1.aaa.fu\", \"quota\": 20, \"retention_days\": 45, \"gui_url\": \"qqq.aaa.hu\", \"domain\": \"qqq.fu\", \"branding_url\": \"\", \"support_link\": \"\", \"text_colour\": \"\", \"background_colour\": \"\", \"branding_logo\": \"\", \"enable_purge\": 1 }] Delete customer settings from the database # curl -u \"$user\" -d \u2018[{\"customer_id\": \"bbb\"}]\u2019 archive.aaa.fu/api/v1/delete_customer Note that this removes only the customer reference from the customer_settings table. The customer\u2019s data (mysql, manticore/sphinx, and emails) are not affected. These must be deleted manually. Users # Add a user # curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/add_user data.json: [{ \"username\": \"bela\", \"realname\": \"bela baba\", \"email\": \"bela@local\", \"domain\": \"local\", \"password\": \"$6$rounds=5000$7Sm7typK$UEjSSkYPNsPpv81Tv71NGAWCaSFprJz4b5YGFmRO640r9S8HohZlgYmjj5Qb7J08PQ4BzNFjKBqtLPv96Oxz90\", \"isadmin\": \"0\", \"dn\": \"\", \"samaccountname\": \"\" }] Update a user # curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/update_user data.json: [{ \"uid\": \"2\", \"username\": \"bela\", \"realname\": \"bela babaaaaa\", \"password\": \"\", \"email\": \"bela@local\", \"domain\": \"local\", \"isadmin\": \"0\", \"group\": \"aaaa4\", \"dn\": \"\", \"samaccountname\": \"\" }] Delete a user # curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/delete_user data.json: [{ \"uid\": \"2\", \"username\": \"bela\" }] Groups # Get groups # curl -u \"$user\" cust1.aaa.fu/api/v1/get_groups [{\"id\":\"1\",\"groupname\":\"group1\"}] curl -u \"$user\" -d '[{\"id\":1}]' cust1.aaa.fu/api/v1/get_group Add group # curl -u \"$user\" -d @data.json cust1.aaa.fu/api/v1/add_group data.json: [{ \"groupname\":\"aaaa\", \"email\":\"bela@aaa.fu\\nsanyi@aaa.fu\", \"assigned_email\":\"jerry@aaa.fu\\naaaa@aaa.fu\" }] Update group # curl -u \"$user\" -d @data.json cust1.aaa.fu/api/v1/update_group data.json: [{ \"id\": 2, \"groupname\":\"aaaa4\", \"email\":\"belaja@aaa.fu\\nsanyi@aaa.fu\", \"assigned_email\":\"jerry@aaa.fu\\naaaa@aaa.fu\" }] Delete group # curl -u \"$user\" -d '[{\"id\": 1}]' archive.aaa.fu/api/v1/delete_group Header checks # Note that you need to reload the piler daemons to re-read the header checks. Get header checks # curl -u \"$user\" cust1.aaa.fu/api/v1/get_header_checks [{\"id\":\"1\",\"pattern\":\"subject:.*utf-8\\\\?Q\\\\?=E4=B[A-Z0-9]=[[:xdigit:]]{2}=E5\",\"tag\":\"TAG1\"}, {\"id\":\"2\",\"pattern\":\"(To:.*@aaa.fu|From: Alice)\",\"tag\":\"ALICE\"}, {\"id\":\"3\",\"pattern\":\"From:.*@yahoo.com\",\"tag\":\"YAHOO\"}, {\"id\":\"4\",\"pattern\":\"Authenticated sender: bob\",\"tag\":\"BOB\"}, {\"id\":\"5\",\"pattern\":\"Subject: \\\\[SPAM\\\\]\",\"tag\":\"SPAM\"}] Delete header check rule # curl -u \"$user\" -d '[{\"id\":1}]' cust1.aaa.fu/api/v1/delete_header_check Add a header check rule # curl -u \"$user\" -d @data.json cust1.aaa.fu/api/v1/add_header_check [{ \"pattern\":\"From:.*@yoyo.com\", \"tag\":\"KKKKKK\" }]","title":"Using the REST API"},{"location":"restapi/#using-the-rest-api","text":"This documentation applies to Piler enterprise edition 1.7.2 Revision #1 Publication date: Apr 20, 2023","title":"Using the REST API"},{"location":"restapi/#introduction","text":"The REST API allows you to automate the most frequent operations for piler enterprise. You need to set the authentication header, in this tutorial we\u2019ll use the default admin account. The hostname will be archive.aaa.fu. Note that customer admins may also use the REST API to affect their organization. $ user='admin@local:pilerrocks'","title":"Introduction"},{"location":"restapi/#domains","text":"","title":"Domains"},{"location":"restapi/#get-the-domain-list","text":"curl -u \"$user\" archive.aaa.fu/api/v1/get_domains [{\"domain\":\"aaa.fu\",\"mapped\":\"aaa.fu\",\"ldap\":\"company A\"}, {\"domain\":\"acts.hu\",\"mapped\":\"fictive.com\",\"ldap\":\"company F\"}, {\"domain\":\"bbb.fu\",\"mapped\":\"bbb.fu\",\"ldap\":\"\"}, {\"domain\":\"fictive.com\",\"mapped\":\"fictive.com\",\"ldap\":\"company F\"}, {\"domain\":\"fictive.net\",\"mapped\":\"fictive.com\",\"ldap\":\"company F\"}, {\"domain\":\"fictive.org\",\"mapped\":\"fictive.com\",\"ldap\":\"company F\"}, {\"domain\":\"local\",\"mapped\":\"local\",\"ldap\":\"\"},{\"domain\":\"no.domain\",\"mapped\":\"bbb.fu\",\"ldap\":\"\"}]","title":"Get the domain list"},{"location":"restapi/#add-a-domain","text":"curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/add_domain data.json: [ {\"domain\":\"qqq.fu\",\"mapped\":\"qqq.fu\",\"ldap_id\":\"0\"}, {\"domain\":\"qqq.com\",\"mapped\":\"qqq.fu\",\"ldap_id\":\"0\"} ]","title":"Add a domain"},{"location":"restapi/#delete-a-domain","text":"curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/delete_domain data.json: [ {\"domain\":\"qqq.fu\"}, {\"domain\":\"qqq.com\"} ]","title":"Delete a domain"},{"location":"restapi/#customers","text":"","title":"Customers"},{"location":"restapi/#get-the-customer-id-list","text":"curl -u \"$user\" archive.aaa.fu/api/v1/get_customers [\"bbb\",\"fictive\",\"aaa\"]","title":"Get the customer id list"},{"location":"restapi/#get-the-customer-settings","text":"curl -u \"$user\" archive.aaa.fu/api/v1/get_customer_list [{\"id\":\"2\",\"customer_id\":\"aaa\",\"customer_address\":\"aaa@aaa.fu\",\"gui_url\":\"aaa1.acts.hu\",\"domain\":\"aaa.fu\",\"worker\":\"cust1.acts.hu\",\"quota\":\"100\",\"used\":\"0\",\"retention_days\":\"2557\",\"branding_url\":null,\"branding_logo\":null,\"support_link\":null,\"background_colour\":null,\"text_colour\":null,\"enable_purge\":\"0\",\"enabled\":\"1\",\"created\":\"1496555400\",\"status\":\"OK\"},{\"id\":\"3\",\"customer_id\":\"bbb\",\"customer_address\":\"bbb@aaa.fu\",\"gui_url\":\"bbb1.acts.hu\",\"domain\":\"bbb.fu\",\"worker\":\"cust1.acts.hu\",\"quota\":\"1\",\"used\":\"0\",\"retention_days\":\"730\",\"branding_url\":null,\"branding_logo\":null,\"support_link\":null,\"background_colour\":null,\"text_colour\":null,\"enable_purge\":\"1\",\"enabled\":\"1\",\"created\":\"1495555400\",\"status\":\"OK\"},{\"id\":\"1\",\"customer_id\":\"fictive\",\"customer_address\":\"fictive@aaa.fu\",\"gui_url\":\"cust1.acts.hu\",\"domain\":\"fictive.com\",\"worker\":\"cust1.acts.hu\",\"quota\":\"0\",\"used\":\"0\",\"retention_days\":\"30\",\"branding_url\":null,\"branding_logo\":null,\"support_link\":null,\"background_colour\":null,\"text_colour\":null,\"enable_purge\":\"1\",\"enabled\":\"1\",\"created\":\"1497291760\",\"status\":\"OK\"}]","title":"Get the customer settings"},{"location":"restapi/#get-the-customer-settings-for-customer-id1","text":"curl -u \"$user\" archive.aaa.fu/api/v1/get_customer_list/id/1 {\"id\":\"1\",\"customer_id\":\"fictive\",\"customer_address\":\"fictive@aaa.fu\",\"gui_url\":\"cust1.acts.hu\",\"domain\":\"fictive.com\",\"worker\":\"cust1.acts.hu\",\"quota\":\"0\",\"used\":\"0\",\"retention_days\":\"30\",\"branding_url\":null,\"branding_logo\":null,\"support_link\":null,\"background_colour\":null,\"text_colour\":null,\"enable_purge\":\"1\",\"enabled\":\"1\",\"created\":\"1497291760\"}","title":"Get the customer settings for customer id=1"},{"location":"restapi/#add-a-customer","text":"curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/add_customer data.json: [{ \"customer_id\": \"qqq\", \"customer_address\": \"qqq@aaa.fu\", \"worker\": \"cust1.aaa.fu\", \"quota\": 20, \"retention_days\": 45, \"gui_url\": \"qqq.aaa.fu\", \"domain\": \"qqq.fu\", \"admin_password\": \"$6$rounds=5000$7Sm7typK$UEjSSkYPNsPpv81Tv71NGAWCaSFprJz4b5YGFmRO640r9S8HohZlgYmjj5Qb7J08PQ4BzNFjKBqtLPv96Oxz90\", \"branding_url\": \"\", \"support_link\": \"\", \"enable_purge\": 1 }]","title":"Add a customer"},{"location":"restapi/#update-customer-settings","text":"curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/update_customer [{ \"customer_id\": \"qqq\", \"customer_address\": \"qqq525@aaa.fu\", \"worker\": \"cust1.aaa.fu\", \"quota\": 20, \"retention_days\": 45, \"gui_url\": \"qqq.aaa.hu\", \"domain\": \"qqq.fu\", \"branding_url\": \"\", \"support_link\": \"\", \"text_colour\": \"\", \"background_colour\": \"\", \"branding_logo\": \"\", \"enable_purge\": 1 }]","title":"Update customer settings"},{"location":"restapi/#delete-customer-settings-from-the-database","text":"curl -u \"$user\" -d \u2018[{\"customer_id\": \"bbb\"}]\u2019 archive.aaa.fu/api/v1/delete_customer Note that this removes only the customer reference from the customer_settings table. The customer\u2019s data (mysql, manticore/sphinx, and emails) are not affected. These must be deleted manually.","title":"Delete customer settings from the database"},{"location":"restapi/#users","text":"","title":"Users"},{"location":"restapi/#add-a-user","text":"curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/add_user data.json: [{ \"username\": \"bela\", \"realname\": \"bela baba\", \"email\": \"bela@local\", \"domain\": \"local\", \"password\": \"$6$rounds=5000$7Sm7typK$UEjSSkYPNsPpv81Tv71NGAWCaSFprJz4b5YGFmRO640r9S8HohZlgYmjj5Qb7J08PQ4BzNFjKBqtLPv96Oxz90\", \"isadmin\": \"0\", \"dn\": \"\", \"samaccountname\": \"\" }]","title":"Add a user"},{"location":"restapi/#update-a-user","text":"curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/update_user data.json: [{ \"uid\": \"2\", \"username\": \"bela\", \"realname\": \"bela babaaaaa\", \"password\": \"\", \"email\": \"bela@local\", \"domain\": \"local\", \"isadmin\": \"0\", \"group\": \"aaaa4\", \"dn\": \"\", \"samaccountname\": \"\" }]","title":"Update a user"},{"location":"restapi/#delete-a-user","text":"curl -u \"$user\" -d @data.json archive.aaa.fu/api/v1/delete_user data.json: [{ \"uid\": \"2\", \"username\": \"bela\" }]","title":"Delete a user"},{"location":"restapi/#groups","text":"","title":"Groups"},{"location":"restapi/#get-groups","text":"curl -u \"$user\" cust1.aaa.fu/api/v1/get_groups [{\"id\":\"1\",\"groupname\":\"group1\"}] curl -u \"$user\" -d '[{\"id\":1}]' cust1.aaa.fu/api/v1/get_group","title":"Get groups"},{"location":"restapi/#add-group","text":"curl -u \"$user\" -d @data.json cust1.aaa.fu/api/v1/add_group data.json: [{ \"groupname\":\"aaaa\", \"email\":\"bela@aaa.fu\\nsanyi@aaa.fu\", \"assigned_email\":\"jerry@aaa.fu\\naaaa@aaa.fu\" }]","title":"Add group"},{"location":"restapi/#update-group","text":"curl -u \"$user\" -d @data.json cust1.aaa.fu/api/v1/update_group data.json: [{ \"id\": 2, \"groupname\":\"aaaa4\", \"email\":\"belaja@aaa.fu\\nsanyi@aaa.fu\", \"assigned_email\":\"jerry@aaa.fu\\naaaa@aaa.fu\" }]","title":"Update group"},{"location":"restapi/#delete-group","text":"curl -u \"$user\" -d '[{\"id\": 1}]' archive.aaa.fu/api/v1/delete_group","title":"Delete group"},{"location":"restapi/#header-checks","text":"Note that you need to reload the piler daemons to re-read the header checks.","title":"Header checks"},{"location":"restapi/#get-header-checks","text":"curl -u \"$user\" cust1.aaa.fu/api/v1/get_header_checks [{\"id\":\"1\",\"pattern\":\"subject:.*utf-8\\\\?Q\\\\?=E4=B[A-Z0-9]=[[:xdigit:]]{2}=E5\",\"tag\":\"TAG1\"}, {\"id\":\"2\",\"pattern\":\"(To:.*@aaa.fu|From: Alice)\",\"tag\":\"ALICE\"}, {\"id\":\"3\",\"pattern\":\"From:.*@yahoo.com\",\"tag\":\"YAHOO\"}, {\"id\":\"4\",\"pattern\":\"Authenticated sender: bob\",\"tag\":\"BOB\"}, {\"id\":\"5\",\"pattern\":\"Subject: \\\\[SPAM\\\\]\",\"tag\":\"SPAM\"}]","title":"Get header checks"},{"location":"restapi/#delete-header-check-rule","text":"curl -u \"$user\" -d '[{\"id\":1}]' cust1.aaa.fu/api/v1/delete_header_check","title":"Delete header check rule"},{"location":"restapi/#add-a-header-check-rule","text":"curl -u \"$user\" -d @data.json cust1.aaa.fu/api/v1/add_header_check [{ \"pattern\":\"From:.*@yoyo.com\", \"tag\":\"KKKKKK\" }]","title":"Add a header check rule"},{"location":"troubleshooting/","text":"Troubleshooting # Check your license # Run \"piler -V\" and verify the Expiry line Note that the license expiry displayed on the UI is updated every hour Check the running piler processes # # ps uaxw|grep piler piler 179 0.0 0.0 55172 3260 ? S 08:26 0:00 searchd --config /etc/piler/manticore.conf piler 180 0.4 0.7 319108 30900 ? Sl 08:26 3:03 searchd --config /etc/piler/manticore.conf piler 195 0.0 0.0 17728 2752 ? Ss 08:26 0:14 /usr/sbin/piler-smtp -d piler 197 0.0 0.0 22392 3732 ? Ss 08:26 0:02 /usr/sbin/piler -d piler 721 0.2 0.2 98756 8400 ? S 08:28 1:54 /usr/sbin/piler -d piler 745 0.2 0.1 22448 3944 ? S 08:28 1:53 /usr/sbin/piler -d Verify that manticore (sphinx) serves tables # # mysql -h0 -P9306 MySQL [(none)]> show tables; +---------------+-----------+ | Index | Type | +---------------+-----------+ | aaa | rt | | aaa_cat1 | percolate | | aaa_note1 | rt | | aaa_tag1 | rt | | .... | .... | Check the logs # Search for errors in /var/log/mail.log (or maillog) and in /var/log/nginx/error.log Verify that you have enough free disk space # df -h","title":"Troubleshooting"},{"location":"troubleshooting/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"troubleshooting/#check-your-license","text":"Run \"piler -V\" and verify the Expiry line Note that the license expiry displayed on the UI is updated every hour","title":"Check your license"},{"location":"troubleshooting/#check-the-running-piler-processes","text":"# ps uaxw|grep piler piler 179 0.0 0.0 55172 3260 ? S 08:26 0:00 searchd --config /etc/piler/manticore.conf piler 180 0.4 0.7 319108 30900 ? Sl 08:26 3:03 searchd --config /etc/piler/manticore.conf piler 195 0.0 0.0 17728 2752 ? Ss 08:26 0:14 /usr/sbin/piler-smtp -d piler 197 0.0 0.0 22392 3732 ? Ss 08:26 0:02 /usr/sbin/piler -d piler 721 0.2 0.2 98756 8400 ? S 08:28 1:54 /usr/sbin/piler -d piler 745 0.2 0.1 22448 3944 ? S 08:28 1:53 /usr/sbin/piler -d","title":"Check the running piler processes"},{"location":"troubleshooting/#verify-that-manticore-sphinx-serves-tables","text":"# mysql -h0 -P9306 MySQL [(none)]> show tables; +---------------+-----------+ | Index | Type | +---------------+-----------+ | aaa | rt | | aaa_cat1 | percolate | | aaa_note1 | rt | | aaa_tag1 | rt | | .... | .... |","title":"Verify that manticore (sphinx) serves tables"},{"location":"troubleshooting/#check-the-logs","text":"Search for errors in /var/log/mail.log (or maillog) and in /var/log/nginx/error.log","title":"Check the logs"},{"location":"troubleshooting/#verify-that-you-have-enough-free-disk-space","text":"df -h","title":"Verify that you have enough free disk space"},{"location":"upgrade/","text":"Upgrading piler enterprise # Revision #2 Publication date: 2025-JAN-24 Before doing anything, be sure to read the release notes to see what has changed Upgrading procedure from 1.6.2 to 1.7.2 # Stop all piler related services # Have a backup of /etc/piler directory # Upgrade piler-ee package with dpkg or rpm # Update your license file (/etc/piler/piler.lic) # Upgrade the database: # for i in /var/piler/sphinx/piler $(find /var/piler/sphinx/* -type d); do mysql --defaults-file=/etc/piler/.my.cnf $(basename $i) < /usr/share/piler/db-upgrade.sql mysql --defaults-file=/etc/piler/.my.cnf $(basename $i) <<< \"rename table archiving_rule to exclusion_rule\" done Update the rewrite rules in /etc/piler/piler-nginx.conf according to /etc/piler/piler-nginx.conf.dist # Upgrade the minio python client # pip3 install minio==7.1.12 If using sphinxsearch, then perform these steps: # a) add the following to /etc/piler/config-site.php: $config['DIR_SPHINX'] = '/var/piler/sphinx/'; b) be sure to have the following in /etc/piler/piler.conf: sphinxdir=/var/piler/sphinx c) Create the following symlink: ln -sf /etc/piler/sphinx.conf /etc/piler/manticore.conf Start all piler related services # Restart nginx: systemctl restart nginx Then check /var/log/mail.log or /var/log/maillog to verify that everything is running fine. Upgrading procedure from 1.7.2 to 1.8.4 # Make sure you have php 8.x installed # Stop all piler related services # Have a backup of /etc/piler directory # Upgrade piler-ee package with dpkg or rpm # Upgrade the database: # for i in /var/piler/sphinx/piler $(find /var/piler/sphinx/* -type d); do mysql --defaults-file=/etc/piler/.my.cnf $(basename $i) < /usr/share/piler/db-upgrade.sql done If you use Manticore, then run: for i in /var/piler/manticore/piler $(find /var/piler/manticore/* -type d); do mysql --defaults-file=/etc/piler/.my.cnf $(basename $i) < /usr/share/piler/db-upgrade.sql done Update the rewrite rules in /etc/piler/piler-nginx.conf according to /etc/piler/piler-nginx.conf.dist # Add the following new variables to /etc/piler/piler.conf: max_message_size=50000000 max_smtp_memory=500000000 You may adjust the above values to your environment. Update the pidfile variable in /etc/piler/piler.conf: pidfile=/var/piler/run/piler.pid Add the following to /etc/piler/config-site.php: $config['SPHINX_HOSTNAME_READONLY'] = '127.0.0.1:9307'; Install the pycryptodome package pip install pycryptodome==3.20.0 Generate an encryption key: openssl rand -base64 24 Add it to /etc/piler/piler.conf crypt_key=.......... Also add it to /etc/piler/config-site.php: $config['ENCRYPTION_KEY'] = '.......'; Start all piler related services # Restart nginx: systemctl restart nginx Then check /var/log/mail.log or /var/log/maillog to verify that everything is running fine.","title":"Upgrading piler enterprise"},{"location":"upgrade/#upgrading-piler-enterprise","text":"Revision #2 Publication date: 2025-JAN-24 Before doing anything, be sure to read the release notes to see what has changed","title":"Upgrading piler enterprise"},{"location":"upgrade/#upgrading-procedure-from-162-to-172","text":"","title":"Upgrading procedure from 1.6.2 to 1.7.2"},{"location":"upgrade/#stop-all-piler-related-services","text":"","title":"Stop all piler related services"},{"location":"upgrade/#have-a-backup-of-etcpiler-directory","text":"","title":"Have a backup of /etc/piler directory"},{"location":"upgrade/#upgrade-piler-ee-package-with-dpkg-or-rpm","text":"","title":"Upgrade piler-ee package with dpkg or rpm"},{"location":"upgrade/#update-your-license-file-etcpilerpilerlic","text":"","title":"Update your license file (/etc/piler/piler.lic)"},{"location":"upgrade/#upgrade-the-database","text":"for i in /var/piler/sphinx/piler $(find /var/piler/sphinx/* -type d); do mysql --defaults-file=/etc/piler/.my.cnf $(basename $i) < /usr/share/piler/db-upgrade.sql mysql --defaults-file=/etc/piler/.my.cnf $(basename $i) <<< \"rename table archiving_rule to exclusion_rule\" done","title":"Upgrade the database:"},{"location":"upgrade/#update-the-rewrite-rules-in-etcpilerpiler-nginxconf-according-to-etcpilerpiler-nginxconfdist","text":"","title":"Update the rewrite rules in /etc/piler/piler-nginx.conf according to /etc/piler/piler-nginx.conf.dist"},{"location":"upgrade/#upgrade-the-minio-python-client","text":"pip3 install minio==7.1.12","title":"Upgrade the minio python client"},{"location":"upgrade/#if-using-sphinxsearch-then-perform-these-steps","text":"a) add the following to /etc/piler/config-site.php: $config['DIR_SPHINX'] = '/var/piler/sphinx/'; b) be sure to have the following in /etc/piler/piler.conf: sphinxdir=/var/piler/sphinx c) Create the following symlink: ln -sf /etc/piler/sphinx.conf /etc/piler/manticore.conf","title":"If using sphinxsearch, then perform these steps:"},{"location":"upgrade/#start-all-piler-related-services","text":"Restart nginx: systemctl restart nginx Then check /var/log/mail.log or /var/log/maillog to verify that everything is running fine.","title":"Start all piler related services"},{"location":"upgrade/#upgrading-procedure-from-172-to-184","text":"","title":"Upgrading procedure from 1.7.2 to 1.8.4"},{"location":"upgrade/#make-sure-you-have-php-8x-installed","text":"","title":"Make sure you have php 8.x installed"},{"location":"upgrade/#stop-all-piler-related-services_1","text":"","title":"Stop all piler related services"},{"location":"upgrade/#have-a-backup-of-etcpiler-directory_1","text":"","title":"Have a backup of /etc/piler directory"},{"location":"upgrade/#upgrade-piler-ee-package-with-dpkg-or-rpm_1","text":"","title":"Upgrade piler-ee package with dpkg or rpm"},{"location":"upgrade/#upgrade-the-database_1","text":"for i in /var/piler/sphinx/piler $(find /var/piler/sphinx/* -type d); do mysql --defaults-file=/etc/piler/.my.cnf $(basename $i) < /usr/share/piler/db-upgrade.sql done If you use Manticore, then run: for i in /var/piler/manticore/piler $(find /var/piler/manticore/* -type d); do mysql --defaults-file=/etc/piler/.my.cnf $(basename $i) < /usr/share/piler/db-upgrade.sql done","title":"Upgrade the database:"},{"location":"upgrade/#update-the-rewrite-rules-in-etcpilerpiler-nginxconf-according-to-etcpilerpiler-nginxconfdist_1","text":"Add the following new variables to /etc/piler/piler.conf: max_message_size=50000000 max_smtp_memory=500000000 You may adjust the above values to your environment. Update the pidfile variable in /etc/piler/piler.conf: pidfile=/var/piler/run/piler.pid Add the following to /etc/piler/config-site.php: $config['SPHINX_HOSTNAME_READONLY'] = '127.0.0.1:9307'; Install the pycryptodome package pip install pycryptodome==3.20.0 Generate an encryption key: openssl rand -base64 24 Add it to /etc/piler/piler.conf crypt_key=.......... Also add it to /etc/piler/config-site.php: $config['ENCRYPTION_KEY'] = '.......';","title":"Update the rewrite rules in /etc/piler/piler-nginx.conf according to /etc/piler/piler-nginx.conf.dist"},{"location":"upgrade/#start-all-piler-related-services_1","text":"Restart nginx: systemctl restart nginx Then check /var/log/mail.log or /var/log/maillog to verify that everything is running fine.","title":"Start all piler related services"}]}